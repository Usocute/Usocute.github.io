{
    "version": "https://jsonfeed.org/version/1",
    "title": "寻梦启事",
    "subtitle": "",
    "icon": "http://eliauk.cc/images/favicon.ico",
    "description": "",
    "home_page_url": "http://eliauk.cc",
    "items": [
        {
            "id": "http://eliauk.cc/luoma/",
            "url": "http://eliauk.cc/luoma/",
            "title": "算法入门-罗马数字转整数",
            "date_published": "2020-09-28T06:52:22.935Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"罗马数字转整数\"><a class=\"anchor\" href=\"#罗马数字转整数\">#</a> 罗马数字转整数</h2>\n<p><strong>罗马数字包含以下七种字符:  <code>I</code> ，  <code>V</code> ，  <code>X</code> ，  <code>L</code> ， <code>C</code> ， <code>D</code>  和  <code>M</code> 。</strong></p>\n<pre><code class=\"language-text\">字符          数值\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\n</code></pre>\n<p><strong>例如， 罗马数字  <code>2</code>  写做  <code>II</code>  ，即为两个并列的  <code>1</code> 。 <code>12</code>  写做  <code>XII</code>  ，即为  <code>X + II</code>  。  <code>27</code>  写做   <code>XXVII</code> , 即为  <code>XX + V + II</code>  。</strong></p>\n<p><strong>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如  <code>4</code>  不写做  <code>IIII</code> ，而是  <code>IV</code> 。数字  <code>1</code>  在数字  <code>5</code>  的左边，所表示的数等于大数  <code>5</code>  减小数  <code>1</code>  得到的数值  <code>4</code>  。同样地，数字  <code>9</code>  表示为  <code>IX</code> 。这个特殊的规则只适用于以下六种情况：</strong></p>\n<p><code>I</code>  可以放在  <code>V (5)</code>  和  <code>X (10)</code>  的左边，来表示  <code>4</code>  和  <code>9</code> 。<br />\n <code>X</code>  可以放在  <code>L (50)</code>  和  <code>C (100)</code>  的左边，来表示  <code>40</code>  和  <code>90</code> 。 <br />\n <code>C</code>  可以放在  <code>D (500)</code>  和  <code>M (1000)</code>  的左边，来表示  <code>400</code>  和  <code>900</code> 。<br />\n给定一个罗马数字，将其转换成整数。输入确保在  <code>1</code>  到  <code>3999</code>  的范围内。</p>\n<h4 id=\"示例-1\"><a class=\"anchor\" href=\"#示例-1\">#</a> 示例 1:</h4>\n<pre><code class=\"language-text\">输入: &quot;III&quot;\n输出: 3\n</code></pre>\n<h4 id=\"示例-2\"><a class=\"anchor\" href=\"#示例-2\">#</a> 示例 2:</h4>\n<pre><code>输入: &quot;IV&quot;\n输出: 4\n</code></pre>\n<h4 id=\"示例-3\"><a class=\"anchor\" href=\"#示例-3\">#</a> 示例 3:</h4>\n<pre><code>输入: &quot;IX&quot;\n输出: 9\n</code></pre>\n<h4 id=\"示例-4\"><a class=\"anchor\" href=\"#示例-4\">#</a> 示例 4:</h4>\n<pre><code>输入: &quot;LVIII&quot;\n输出: 58\n解释: L = 50, V= 5, III = 3.\n</code></pre>\n<h4 id=\"示例-5\"><a class=\"anchor\" href=\"#示例-5\">#</a> 示例 5:</h4>\n<pre><code>输入: &quot;MCMXCIV&quot;\n输出: 1994\n解释: M = 1000, CM = 900, XC = 90, IV = 4.\n</code></pre>\n<h4 id=\"提示\"><a class=\"anchor\" href=\"#提示\">#</a> 提示：</h4>\n<ul>\n<li>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。</li>\n<li>IC 和 IM 这样的例子并不符合题目要求， <code>49</code>  应该写作  <code>XLIX</code> ， <code>999</code>  应该写作  <code>CMXCIX</code>  。</li>\n<li>关于罗马数字的详尽书写规则，可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iMmIucGFydGNvbW11bml0eS5jb20vY29tbXVuaXR5L2tub3dsZWRnZS96aF9DTi9kZXRhaWwvMTA3NTMvJUU3JUJEJTk3JUU5JUE5JUFDJUU2JTk1JUIwJUU1JUFEJTk3I2tub3dsZWRnZV9hcnRpY2xl\">罗马数字 - Mathematics</span>。</li>\n</ul>\n<h2 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h2>\n<p><strong>仔细分析罗马数字的规律，会发现，罗马字母 ( <code>XII</code> ) 正常是从左到右按从大到小排列，当代表小数字 ( <code>I</code> ) 的字母在代表大数字的字母 ( <code>V</code> ) 左边时，这意味着两个字母代表一个数，而且是大数字减小数字的最终结果（ <code>V-I</code> ）。</strong></p>\n<p><strong>所以，在做计算时，只需遍历判断下标为 <code>i</code>  的字母是否大于下标为 <code>i+1</code>  的字母，如果大于，则相加，如果小于，则需要减去当前这个数。</strong></p>\n<h4 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h4>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;string&#125; s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;number&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">romanToInt</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">'I'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'V'</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'X'</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'L'</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'C'</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'D'</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'M'</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">let</span> left <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            right <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            newNum <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>obj<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> obj<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        num <span class=\"token operator\">+=</span> newNum</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "笔记本",
                "算法",
                "leetcode",
                "javascript"
            ]
        },
        {
            "id": "http://eliauk.cc/Climb-stairs/",
            "url": "http://eliauk.cc/Climb-stairs/",
            "title": "算法入门-爬楼梯",
            "date_published": "2020-09-27T11:04:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"爬楼梯\"><a class=\"anchor\" href=\"#爬楼梯\">#</a> 爬楼梯</h2>\n<p>假设你正在爬楼梯。需要 <code>n</code>  阶你才能到达楼顶。<br />\n每次你可以爬 <code>1</code>  或 <code>2</code>  个台阶。你有多少种不同的方法可以爬到楼顶呢？</p>\n<p>注意：给定 <code>n</code>  是一个正整数。</p>\n<p><strong>示例 1：</strong></p>\n<pre><code class=\"language-text\">输入： 2\n输出： 2\n解释： 有两种方法可以爬到楼顶。\n1.  1 阶 + 1 阶\n2.  2 阶\n</code></pre>\n<p><strong>示例 2：</strong></p>\n<pre><code class=\"language-text\">输入： 3\n输出： 3\n解释： 有三种方法可以爬到楼顶。\n1.  1 阶 + 1 阶 + 1 阶\n2.  1 阶 + 2 阶\n3.  2 阶 + 1 阶\n</code></pre>\n<h4 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h4>\n<p><strong>斐波那契数列</strong><br />\n <code>current_step = step1 + step2</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">climbStairs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 第 n 层，等于第 n-1 层 + 第 n-2 层</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> step1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> step2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        temp <span class=\"token operator\">=</span> step1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        step1 <span class=\"token operator\">=</span> step2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        step2 <span class=\"token operator\">=</span> temp <span class=\"token operator\">+</span> step1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> step2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "笔记本",
                "C",
                "算法",
                "leetcode"
            ]
        },
        {
            "id": "http://eliauk.cc/Sum-of-two-numbers/",
            "url": "http://eliauk.cc/Sum-of-two-numbers/",
            "title": "算法入门-两数之和",
            "date_published": "2020-09-26T12:58:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"两数之和\"><a class=\"anchor\" href=\"#两数之和\">#</a> 两数之和</h2>\n<p>给定一个整数数组 <code>nums</code>  和一个目标值 <code>target</code>  请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。<br />\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。<br />\n<strong>示例:</strong></p>\n<pre><code class=\"language-text\">给定 nums = [2, 7, 11, 15], target = 9\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n</code></pre>\n<h4 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h4>\n<p><strong>无序数组的两数之和</strong></p>\n<p>代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> <span class=\"token function\">twoSum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numsSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> returnSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> numsSize <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">&lt;</span> numsSize<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                count<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                count<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token operator\">*</span> returnSize <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token operator\">*</span> returnSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "笔记本",
                "C",
                "算法",
                "leetcode"
            ]
        },
        {
            "id": "http://eliauk.cc/js-RegExp/",
            "url": "http://eliauk.cc/js-RegExp/",
            "title": "",
            "date_published": "2020-09-19T15:42:50.670Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>...</p>\n",
            "tags": [
                "笔记本",
                "RegExp",
                "JS"
            ]
        },
        {
            "id": "http://eliauk.cc/hello-world/",
            "url": "http://eliauk.cc/hello-world/",
            "title": "Hello World",
            "date_published": "2020-09-19T14:28:15.222Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<pre><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<pre><code class=\"language-bash\">$ hexo server\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<pre><code class=\"language-bash\">$ hexo generate\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<pre><code class=\"language-bash\">$ hexo deploy\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "http://eliauk.cc/Freshman-year-end/",
            "url": "http://eliauk.cc/Freshman-year-end/",
            "title": "逝去的的大一生活",
            "date_published": "2020-07-31T03:42:31.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>",
            "tags": [
                "事件簿",
                "生活记录"
            ]
        },
        {
            "id": "http://eliauk.cc/eighteen-year-old/",
            "url": "http://eliauk.cc/eighteen-year-old/",
            "title": "18岁，成年了呀~",
            "date_published": "2019-11-09T16:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p>  我一直知道有人爱我。十八年前的冬天，有人在漫天飞雪的日子里满心欢喜地期待着我。期待于冬日结果。生日的意义不是提醒我又长大一岁，而是温柔的告诉我，要好好的，毕竟有人曾经有人那么温柔的等待着我。</p>\n</blockquote>\n",
            "tags": [
                "事件簿",
                "生活记录",
                "成长"
            ]
        }
    ]
}