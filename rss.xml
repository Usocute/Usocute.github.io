<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Miraitowa</title>
        <link>https://miraitowa.cc</link>
        <description>永远期待明亮的未来,一个收藏回忆记录成长的地方...</description>
        <language>zh-CN</language>
        <pubDate>Sun, 30 May 2021 11:57:35 +0000</pubDate>
        <lastBuildDate>Sun, 30 May 2021 11:57:35 +0000</lastBuildDate>
        <category>生活记录</category>
        <category>成长</category>
        <category>Git</category>
        <category>Github</category>
        <category>HTML</category>
        <category>CSS</category>
        <category>瀑布流</category>
        <category>记录</category>
        <category>历史</category>
        <category>js</category>
        <category>js基础</category>
        <category>js高级</category>
        <category>cookie</category>
        <category>MySQL</category>
        <category>存储引擎</category>
        <category>数据类型</category>
        <category>数据库</category>
        <category>存储过程</category>
        <category>视图</category>
        <category>查询</category>
        <category>View</category>
        <category>index</category>
        <category>学习笔记</category>
        <category>Trigger</category>
        <category>butterfly</category>
        <category>hexo</category>
        <category>魔改</category>
        <category>jQuery</category>
        <category>JavaScript基础</category>
        <category>增删改查</category>
        <category>npm</category>
        <category>yarn</category>
        <category>前端设计</category>
        <category>单页设计与推广</category>
        <category>SEO优化</category>
        <category>网店设计</category>
        <category>JavaScript</category>
        <category>JS</category>
        <category>图片轮播</category>
        <category>往事如烟</category>
        <category>日常</category>
        <category>昆明</category>
        <category>随笔</category>
        <category>碎碎念</category>
        <category>MC</category>
        <category>Minecrift</category>
        <category>移动端网站设计</category>
        <category>C</category>
        <category>算法</category>
        <category>leetcode</category>
        <category>javascript</category>
        <category>整站交互设计</category>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/89ee8a3d.html</guid>
            <title>HTML5、CSS3实现简单响应式瀑布流布局</title>
            <link>https://miraitowa.cc/post/89ee8a3d.html</link>
            <category>HTML</category>
            <category>CSS</category>
            <category>瀑布流</category>
            <pubDate>Sun, 30 May 2021 11:57:35 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;瀑布流&lt;/strong&gt;，又称瀑布流式布局。是比较流行的一种网站页面布局，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。最早采用此布局的网站是Pinterest，逐渐在国内流行开来。国内大多数清新站基本为这类风格。&lt;/p&gt;
&lt;h2 id=&#34;为什么使用瀑布流&#34;&gt;为什么使用瀑布流&lt;/h2&gt;
&lt;p&gt;瀑布流布局在我们现在的前端页面中经常会用的到，它可以有效的降低页面的复杂度，节省很多的空间，对于整个页面不需要太多的操作，只需要下拉就可以浏览用户需要看到的数据；并且，在当前这个APP至上的时代，瀑布流可以提供很好的用户体验，通过结合下拉刷新，上拉加载进行数据的懒加载等操作，对于用户的体验感来说是接近于满分的！&lt;/p&gt;
&lt;h2 id=&#34;瀑布流的特点&#34;&gt;瀑布流的特点&lt;/h2&gt;
&lt;p&gt;其实瀑布流的特点就是参差不齐的排列方式，以及流式布局的扩展性，可以通过界面展示给用户多条数据，并且让用户可以有向下浏览的冲动。&lt;/p&gt;
&lt;h2 id=&#34;瀑布流的代码实现&#34;&gt;瀑布流的代码实现&lt;/h2&gt;
&lt;h3 id=&#34;实现思路&#34;&gt;实现思路&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;column-count&lt;/span&gt;：指定列数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;column-gap&lt;/span&gt;: 设置列之间的间距&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;实现代码&#34;&gt;实现代码&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      现在人和人之间的矛盾，主要是来源于有那么一拨人，惯于用圣人的标准衡量别人，用贱人的标准要求自己。现在人和人之间的矛盾，主要是来源于有那么一拨人，惯于用圣人的标准衡量别人，用贱人的标准要求自己。现在人和人之间的矛盾，主要是来源于有那么一拨人，惯于用圣人的标准衡量别人，用贱人的标准要求自己。现在人和人之间的矛盾，主要是来源于有那么一拨人，惯于用圣人的标准衡量别人，用贱人的标准要求自己。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      钱是买不到快乐和开心的，但是当你有钱之后，就会有人想尽办法的让你开心，这就是现实。钱是买不到快乐和开心的，但是当你有钱之后，就会有人想尽办法的让你开心，这就是现实。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      白雪公主因为漂亮，所以被王后嫉妒；因为漂亮，所以被猎人放走；因为漂亮，所以被小矮人收留；因为漂亮，所以被王子亲醒；所以，你明白了吗？善良没用，你得漂亮。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      生活这几年教会我最大的道理的就是，不要跟生活正面刚。吃不下就不吃，睡不着就不睡，错过了就不要追，得不到就等着，死不了就撑着。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      生活这几年教会我最大的道理的就是，不要跟生活正面刚。吃不下就不吃，睡不着就不睡，错过了就不要追，得不到就等着，死不了就撑着。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      谈恋爱还没几个月就想过一辈子，交个朋友稍微对你好点就想来往一生，难怪你的怨气那么重、悲伤那么多，这都是天真的代价。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      生活这几年教会我最大的道理的就是，不要跟生活正面刚。吃不下就不吃，睡不着就不睡，错过了就不要追，得不到就等着，死不了就撑着。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      你从80楼往下看，全是美景，但你从2楼往下看，全是垃圾，人若没有高度，看到的全是问题，人若没有格局，看到的全是鸡毛蒜皮。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      生活这几年教会我最大的道理的就是，不要跟生活正面刚。吃不下就不吃，睡不着就不睡，错过了就不要追，得不到就等着，死不了就撑着。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://z3.ax1x.com/2021/05/30/2ZPyjO.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;dog&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;毒鸡汤&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      如果你从来不相信自己，你就永远都不会让自己失望！如果你从来不相信自己，你就永远都不会让自己失望！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;background-color&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;#ccc&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.container&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;20px&lt;/span&gt; auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;column-count&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;-moz-column-gap&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;40px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;-webkit-column-gap&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;40px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;column-gap&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;40px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.item&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.item&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;img&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.item&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;h2&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;10px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;selector-class&#34;&gt;.item&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;background-color&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;break-inside&lt;/span&gt;: avoid;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;border&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1px&lt;/span&gt; solid &lt;span class=&#34;number&#34;&gt;#ccc&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;@media&lt;/span&gt; screen &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;attribute&#34;&gt;max-width:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1200px&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;selector-class&#34;&gt;.container&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;column-count&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;calc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;40px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;box-sizing&lt;/span&gt;: border-box;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;20px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;20px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;20px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;@media&lt;/span&gt; screen &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;attribute&#34;&gt;max-width:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;768px&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;selector-class&#34;&gt;.container&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;column-count&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;@media&lt;/span&gt; screen &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;attribute&#34;&gt;max-width:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;480px&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;selector-class&#34;&gt;.container&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;column-count&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;优势：css 设置简单，渲染高效。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;劣势：不符合瀑布流的原理，不会识别哪一块图片放在哪个地方合适，若是再配合动态加载，效果会特别不好。但可以通过媒体查询设置不同列数。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/970c811f.html</guid>
            <title>jQuery 基础拾遗</title>
            <link>https://miraitowa.cc/post/970c811f.html</link>
            <category>js</category>
            <category>jQuery</category>
            <pubDate>Fri, 07 May 2021 11:04:03 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;核心概念和知识点&#34;&gt;核心概念和知识点&lt;/h2&gt;
&lt;h3 id=&#34;什么是jQuery&#34;&gt;什么是jQuery&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;jQuery 是对javascript的一种封装–js的函数库。&lt;/li&gt;
&lt;li&gt;用于客户端的开发，由美国人在2001年1月推出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jQuery与javascript的区别&#34;&gt;jQuery与javascript的区别&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;本质上的区别：jQuery是一个函数库，基于js语言编写出来的框架，实质上还是属于js。&lt;/li&gt;
&lt;li&gt;代码书写不同，jq更简单。&lt;/li&gt;
&lt;li&gt;使用方法不同：使用jQuery和javascript分别加载DOM,&lt;code&gt;js只执行一次&lt;/code&gt;，&lt;code&gt;jq可以执行多次&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;获取class的方法不同。js没有默认的获取方式，jq可以通过&lt;code&gt;$(&amp;quot;.类名&amp;quot;)&lt;/code&gt;来获取&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;jQuery的优势&#34;&gt;jQuery的优势&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;轻量级&lt;/li&gt;
&lt;li&gt;对浏览器的兼容性好&lt;/li&gt;
&lt;li&gt;强大的选择器&lt;/li&gt;
&lt;li&gt;完善的ajax&lt;/li&gt;
&lt;li&gt;丰富的API文档和插件等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;熟悉使用jQuery&#34;&gt;熟悉使用jQuery&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取相关的js文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jquery-xxx.js 与 jquery-xxx.min.js区别：
&lt;ol&gt;
&lt;li&gt;jquery-xxx.js：开发版本。给程序员看的，有良好的缩进和注释。体积大一些&lt;/li&gt;
&lt;li&gt;jquery-xxx.min.js：生产版本。没有缩进。体积小一些。程序加载更快&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;引用 在页面上引用js文件&lt;/li&gt;
&lt;li&gt;基本使用语法:$(“选择器名”).操作&lt;/li&gt;
&lt;li&gt;jQuery的文档就绪(加载)三种写法：&lt;/li&gt;
&lt;/ul&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*方法1*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;).ready(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  选择对象进行操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*方法2*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$().ready(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;              &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  选择对象进行操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*方法3*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;   &lt;span class=&#34;comment&#34;&gt;// 此方法最简洁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  选择对象进行操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;); &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;window-onload和-function-区别&#34;&gt;window.onload和$(function)区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;window.onload 只能定义一次,如果定义多次，后边的会将前边的覆盖掉。&lt;/li&gt;
&lt;li&gt;$(function)可以定义多次的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jQuery对象与DOM对象的异同&#34;&gt;jQuery对象与DOM对象的异同&lt;/h3&gt;
&lt;h4 id=&#34;什么是jQuery对象&#34;&gt;什么是jQuery对象?&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;通过jQuery包装DOM(文档)对象后产生的对象，凡是在$(“”)中的都属于jQuery对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;什么是DOM对象？&#34;&gt;什么是DOM对象？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;页面中元素的集合就是文档对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;note orange no-icon flat&#34;&gt;&lt;p&gt;注意 🐟&lt;br&gt;
1. jQuery对象与文档对象不能混合使用。&lt;br&gt;
2. jQuery对象不能使用文档对象的属性及方法，同理文档对象也是。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note orange no-icon flat&#34;&gt;&lt;p&gt;注意 🐱&lt;br&gt;
DOM(文档)对象与jQuery对象是可以相互转换的&lt;br&gt;
js转jq：在dom对象的最外层用$()进行包裹即可。&lt;br&gt;
jq转js：先获取jq对象:var $jq=$(“选择器名”); $jq.get(索引);&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;jQuery库与其他库出现冲突问题-释放-的控制权&#34;&gt;jQuery库与其他库出现冲突问题(释放$的控制权)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;方法一：在代码的第一行加入:&lt;code&gt;jQuery.noConflict()&lt;/code&gt;;释放了jQuery的$含义，如果仍需使用，需把$改为jQuery。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法二&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; $jq=jQuery.noConflict();   &lt;span class=&#34;comment&#34;&gt;/*赋值为一个变量*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$jq(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    正常使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;jQuery-选择器&#34;&gt;jQuery 选择器&lt;/h2&gt;
&lt;h3 id=&#34;jQuery选择器与CSS选择器的区别&#34;&gt;jQuery选择器与CSS选择器的区别&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;jQuery与CSS是两种不同的语言，jQuery是一个js框架，CSS是层叠样式表，所以两者本质上是不同的。&lt;/li&gt;
&lt;li&gt;两者有一定交集，都是被网页或浏览器解析的语言，而jQuery可以通过修改浏览器的dom对象来实现对CSS的修改或控制。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;note orange no-icon flat&#34;&gt;&lt;p&gt;总结，jQuery选择器应用于js中，CSS选择器用于CSS中，只是两者有时使用相同的id标识来选择对象。&lt;br&gt;
jQuery选择器包含了CSS 1, CSS 2, CSS 3 中的绝大多数选择器。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;jQuery选择器的优点&#34;&gt;jQuery选择器的优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;写法简洁&lt;/li&gt;
&lt;li&gt;继承了CSS选择器的风格，支持CSS1–CSS3选择器&lt;/li&gt;
&lt;li&gt;完善的处理机制可以避免浏览器报错，比单纯的CSS功能更强大，还可兼容不同的浏览器。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;jQuery选择器的分类&#34;&gt;jQuery选择器的分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;基本选择器&lt;/li&gt;
&lt;li&gt;层次选择器&lt;/li&gt;
&lt;li&gt;过滤选择器&lt;/li&gt;
&lt;li&gt;表单选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基本选择器&#34;&gt;基本选择器&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器名&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id选择器：  #id&lt;/td&gt;
&lt;td&gt;根据id获取元素&lt;/td&gt;
&lt;td&gt;$(“#test”)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;类选择器：  .class&lt;/td&gt;
&lt;td&gt;根据类名获取元素&lt;/td&gt;
&lt;td&gt;$(“.test”)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;元素选择器:  element&lt;/td&gt;
&lt;td&gt;根据元素名称获取元素&lt;/td&gt;
&lt;td&gt;$(“p”)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;所有元素选择器： *&lt;/td&gt;
&lt;td&gt;获取所有元素&lt;/td&gt;
&lt;td&gt;$(“*”)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;并集选择器： s1,s2…&lt;/td&gt;
&lt;td&gt;将选择的所有元素合并&lt;/td&gt;
&lt;td&gt;$(“div, span”)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery的层次选择器&#34;&gt;jQuery的层次选择器&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;后代选择器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$(&amp;quot;A  B &amp;quot;)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;选择A元素内部的所有B元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;子选择器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$(&amp;quot;A &amp;gt; B&amp;quot;)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;选择A元素内部的所有B子元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery的属性选择器&#34;&gt;jQuery的属性选择器&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;属性名称选择器&lt;/td&gt;
&lt;td&gt;$(“A[属性名]”)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;包含指定属性的选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性选择器&lt;/td&gt;
&lt;td&gt;$(“A[属性名=‘值’]”)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;包含指定属性等于指定值的选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;复合属性选择器&lt;/td&gt;
&lt;td&gt;$(“A[属性名=‘值’][]…”)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;包含多个属性条件的选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery-过滤选择器&#34;&gt;jQuery 过滤选择器&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;首元素选择器&lt;/td&gt;
&lt;td&gt;:first&lt;/td&gt;
&lt;td&gt;获得选择的元素中的第一个元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;尾元素选择器&lt;/td&gt;
&lt;td&gt;:last&lt;/td&gt;
&lt;td&gt;获得选择的元素中的最后一个元素&amp;lt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;非元素选择器&lt;/td&gt;
&lt;td&gt;:not(selector)&lt;/td&gt;
&lt;td&gt;不包括指定内容的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;偶数选择器&lt;/td&gt;
&lt;td&gt;:even&lt;/td&gt;
&lt;td&gt;偶数，从 0 开始计数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;奇数选择器&lt;/td&gt;
&lt;td&gt;:odd&lt;/td&gt;
&lt;td&gt;奇数，从 0 开始计数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;等于索引选择器&lt;/td&gt;
&lt;td&gt;:eq(index)&lt;/td&gt;
&lt;td&gt;指定索引元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大于索引选择器&lt;/td&gt;
&lt;td&gt;:gt(index)&lt;/td&gt;
&lt;td&gt;大于指定索引元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小于索引选择器&lt;/td&gt;
&lt;td&gt;:lt(index)&lt;/td&gt;
&lt;td&gt;小于指定索引元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标题选择器&lt;/td&gt;
&lt;td&gt;:header&lt;/td&gt;
&lt;td&gt;获得标题（h1~h6）元素，固定写法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jquery-表单过滤选择器&#34;&gt;jquery 表单过滤选择器&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;可用元素选择器&lt;/td&gt;
&lt;td&gt;:enabled&lt;/td&gt;
&lt;td&gt;获得可用元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不可用元素选择器&lt;/td&gt;
&lt;td&gt;:disabled&lt;/td&gt;
&lt;td&gt;获得不可用元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;单选/复选框选中选择器&lt;/td&gt;
&lt;td&gt;:checked&lt;/td&gt;
&lt;td&gt;获得单选/复选框选中的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;下拉框选中选择器&lt;/td&gt;
&lt;td&gt;:selected&lt;/td&gt;
&lt;td&gt;获得下拉框选中的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery表单选择器&#34;&gt;jQuery表单选择器&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$(“:input”)&lt;/td&gt;
&lt;td&gt;选取所有的&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$(“:text”)&lt;/td&gt;
&lt;td&gt;选取所有的单行文本框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$(“:password”)&lt;/td&gt;
&lt;td&gt;选取所有的密码框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$(“:radio”)&lt;/td&gt;
&lt;td&gt;选取所有的单选框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$(“:checkbox”)&lt;/td&gt;
&lt;td&gt;选取所有的多选框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$(“:submit”)&lt;/td&gt;
&lt;td&gt;选取所有的提交按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$(“:button”)&lt;/td&gt;
&lt;td&gt;选取所有的按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$(“:hidden”)&lt;/td&gt;
&lt;td&gt;选取所有的不可见元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;jQuery-DOM操作&#34;&gt;jQuery DOM操作&lt;/h2&gt;
&lt;h3 id=&#34;jQuery节点添加与删除&#34;&gt;jQuery节点添加与删除&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;append()&lt;/td&gt;
&lt;td&gt;对象1.append(对象2)&lt;/td&gt;
&lt;td&gt;将对象2添加到对象1元素内部，并且在末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;appendTo()&lt;/td&gt;
&lt;td&gt;对象1.appendTo(对象2):&lt;/td&gt;
&lt;td&gt;将对象1添加到对象2内部，并且在末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prepend()&lt;/td&gt;
&lt;td&gt;对象1.prepend(对象2):&lt;/td&gt;
&lt;td&gt;将对象2添加到对象1元素内部，并且在开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prependTo()&lt;/td&gt;
&lt;td&gt;对象1.prependTo(对象2):&lt;/td&gt;
&lt;td&gt;将对象1添加到对象2内部，并且在开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;empty()&lt;/td&gt;
&lt;td&gt;对象.empty():&lt;/td&gt;
&lt;td&gt;将对象的后代元素全部清空，但是保留当前对象以及其属性节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;after()&lt;/td&gt;
&lt;td&gt;对象1.after(对象2)&lt;/td&gt;
&lt;td&gt;将对象2添加到对象1后边。对象1和对象2是兄弟关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;before()&lt;/td&gt;
&lt;td&gt;对象1.before(对象2)&lt;/td&gt;
&lt;td&gt;将对象2添加到对象1前边。对象1和对象2是兄弟关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;insertAfter()&lt;/td&gt;
&lt;td&gt;对象1.insertAfter(对象2)&lt;/td&gt;
&lt;td&gt;将对象1添加到对象2后边。对象1和对象2是兄弟关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;insertBefore()&lt;/td&gt;
&lt;td&gt;对象1.insertBefore(对象2)&lt;/td&gt;
&lt;td&gt;将对象1添加到对象2前边。对象1和对象2是兄弟关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remove()&lt;/td&gt;
&lt;td&gt;对象.remove()&lt;/td&gt;
&lt;td&gt;将对象删除掉&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery节点的复制、替换、包裹&#34;&gt;jQuery节点的复制、替换、包裹&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;对象A.clone()&lt;/td&gt;
&lt;td&gt;复制A对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;对象A.replaceWith(对象B)&lt;/td&gt;
&lt;td&gt;把&amp;quot;A对象&amp;quot;替换为&amp;quot;B对象&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;对象A.replaceAll(对象B)&lt;/td&gt;
&lt;td&gt;使用&amp;quot;A对象&amp;quot;替换&amp;quot;B对象&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标签A.wrap(标签B)&lt;/td&gt;
&lt;td&gt;B标签分别包裹住每一个A标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标签A.wrapAll(标签B)&lt;/td&gt;
&lt;td&gt;B标签包裹住所有A标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标签A.wrapInner(标签B)&lt;/td&gt;
&lt;td&gt;B标签分别包裹住A标签内的所有文本内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery-节点属性操作&#34;&gt;jQuery 节点属性操作&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;attr(“属性名”)&lt;/td&gt;
&lt;td&gt;获取属性值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;attr(“属性名”,“属性值”)&lt;/td&gt;
&lt;td&gt;设置属性值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;removeAttr(“属性名”)&lt;/td&gt;
&lt;td&gt;移除属性&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery-节点样式操作&#34;&gt;jQuery 节点样式操作&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;addClass(样式名)&lt;/td&gt;
&lt;td&gt;添加样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;removeClass(样式名)&lt;/td&gt;
&lt;td&gt;删除样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;toggleClass(样式名)&lt;/td&gt;
&lt;td&gt;切换样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;css(“样式名”,“属性”)&lt;/td&gt;
&lt;td&gt;添加单个样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;css({“样式名1”:“属性1” , “样式名2”:“属性2”…})&lt;/td&gt;
&lt;td&gt;添加多个样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hasClass(样式名)&lt;/td&gt;
&lt;td&gt;判断样式是否存在&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery-html-text-val-方法&#34;&gt;jQuery html(),  text(),  val()方法&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;html()方法&lt;/td&gt;
&lt;td&gt;用于设置或获取某个元素中的html内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text()方法&lt;/td&gt;
&lt;td&gt;用于设置或获取某个元素中的文本内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;val()方法&lt;/td&gt;
&lt;td&gt;用于设置或获取某个元素的值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;遍历节点&#34;&gt;遍历节点&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;children()&lt;/td&gt;
&lt;td&gt;获取当前的元素的子元素集合(父亲找儿子)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;find()&lt;/td&gt;
&lt;td&gt;获取当前的元素的所有后代元素集合(祖宗找后代)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent()&lt;/td&gt;
&lt;td&gt;获取当前元素的父元素集合(儿子找父亲)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parents()&lt;/td&gt;
&lt;td&gt;获取当前元素的所有前辈元素集合(后辈找前辈)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;siblings()&lt;/td&gt;
&lt;td&gt;获取当前元素的所有同级元素集合(同辈找同辈)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;next()&lt;/td&gt;
&lt;td&gt;获取当前元素的下一个同级元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prev()&lt;/td&gt;
&lt;td&gt;获取当前元素的上一个同级元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jQuery-CSS的DOM操作&#34;&gt;jQuery CSS的DOM操作&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;css()方法&lt;/td&gt;
&lt;td&gt;设置或获取元素的样式属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;height(),width()&lt;/td&gt;
&lt;td&gt;设置或获取高度、宽度属性&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;jQuery中的事件与动画&#34;&gt;jQuery中的事件与动画&lt;/h2&gt;
&lt;h3 id=&#34;jQuery中的遍历补充&#34;&gt;jQuery中的遍历补充&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;jQuery对象.each(callback)&lt;br&gt;
语法：&lt;code&gt;jQuery对象.each(function(index,element)&amp;#123;&amp;#125;)&lt;/code&gt;;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;index:就是元素在集合中的索引&lt;/li&gt;
&lt;li&gt;element：就是集合中的每一个元素对象&lt;/li&gt;
&lt;li&gt;this：获取到的当前元素对象&lt;/li&gt;
&lt;li&gt;callback：回调函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$.each(object, [callback])&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for…of:&lt;code&gt;for(元素对象 of 容器对象)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;jQuery中的事件绑定&#34;&gt;jQuery中的事件绑定&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;jQuery的标准绑定方式
&lt;ul&gt;
&lt;li&gt;jQuery对象.事件方法(回调函数)；&lt;/li&gt;
&lt;li&gt;注意：如果调用事件方法，不传递回调函数，则会触发浏览器默认行为。&lt;/li&gt;
&lt;li&gt;补充： 表单对象.submit();//让表单提交&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;on()或者bind()绑定事件和off()或者unbind()解除绑定
&lt;ul&gt;
&lt;li&gt;jQuery对象.on(“事件名称”,回调函数)&lt;/li&gt;
&lt;li&gt;jQuery对象.off(“事件名称”)&lt;/li&gt;
&lt;li&gt;如果off方法不传递任何参数，则将组件上的所有事件全部解绑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;事件切换1：toggle(fn1,fn2,…)方法：模拟鼠标连续点击事件，对里面的函数进行切换。
&lt;ul&gt;
&lt;li&gt;jQuery对象.toggle(fn1,fn2…)&lt;/li&gt;
&lt;li&gt;当单击jQuery对象对应的组件后，会执行fn1.第二次点击会执行fn2…&lt;/li&gt;
&lt;li&gt;注意：1.9版本之后 .toggle() 方法删除,jQuery Migrate（迁移）插件可以恢复此功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;事件切换2：hover(enter,leave)方法：模拟鼠标悬停事件，鼠标移到元素上触发第一个enter()函数，鼠标移除触发leave()函数&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;jQuery中的动画&#34;&gt;jQuery中的动画&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;显示/隐藏：show() / hide()组合方法：toggle()&lt;/li&gt;
&lt;li&gt;淡入/淡出：fadeIn() / fadeOut()组合方法：fadeToggle()&lt;/li&gt;
&lt;li&gt;滑入/滑出：slideUp() / slideDown()组合方法：slideToggle()&lt;/li&gt;
&lt;li&gt;自定义动画：animate()&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/d946c19e.html</guid>
            <title>回不去的是我们终将逝去的青春</title>
            <link>https://miraitowa.cc/post/d946c19e.html</link>
            <category>往事如烟</category>
            <pubDate>Sat, 10 Apr 2021 14:48:34 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;那个夏天的蝉鸣比那一年都聒噪 教室外枝桠疯长却总也遮不住烈阳&lt;/strong&gt;&lt;/p&gt;
&lt;iframe src=&#34;//player.bilibili.com/player.html?aid=503425297&amp;bvid=BV1Kg411G7Kp&amp;cid=349126833&amp;page=1&#34; width=&#34;100%&#34; height=&#34;500px&#34; frameborder=&#34;0&#34; loading=&#34;lazy&#34; allowfullscreen&gt;&lt;/iframe&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/424c46eb.html</guid>
            <title>使用原生JS写一个图片轮播</title>
            <link>https://miraitowa.cc/post/424c46eb.html</link>
            <category>JavaScript</category>
            <category>JS</category>
            <category>图片轮播</category>
            <pubDate>Sat, 10 Apr 2021 14:48:34 +0000</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;图片轮播好像经常要用到，让图片轮播的方法：将多个大小相同的图片横排放在一个图片中，然后在图片容器外加一个展示容器，并为图片容器添加自定义动画，在动画不同阶段设置递增的偏移值即可实现图片轮播。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;wrap&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;wrap&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 要轮播的图片 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;pic&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image/banner1.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image/banner2.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image/banner3.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image/banner4.jpg&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 左右切换按钮 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;left&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image/.png&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;right&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;right&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image/foot.png&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 分页器 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ol&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;list&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;on&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;4&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ol&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;* &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;list-style&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.wrap&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;height&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;480px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.wrap&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;ul&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.wrap&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;ul&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;li&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;height&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;480px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.wrap&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;ol&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;left&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;40%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;bottom&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.wrap&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;ol&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;li&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;height&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;border-radius&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;background&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;#ccc&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;border&lt;/span&gt;: solid &lt;span class=&#34;number&#34;&gt;7px&lt;/span&gt; darkgray;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;margin-left&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;color&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;#000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;float&lt;/span&gt;: left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;line-height&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;cursor&lt;/span&gt;: pointer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.wrap&lt;/span&gt; &lt;span class=&#34;selector-tag&#34;&gt;ol&lt;/span&gt; &lt;span class=&#34;selector-class&#34;&gt;.on&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;background&lt;/span&gt;: red;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;color&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;#fff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.left&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;left&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;top&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;clip&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;rect&lt;/span&gt;(-&lt;span class=&#34;number&#34;&gt;24px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;57px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;108px&lt;/span&gt; -&lt;span class=&#34;number&#34;&gt;13px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.right&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;top&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;right&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;clip&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;rect&lt;/span&gt;(-&lt;span class=&#34;number&#34;&gt;19px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;112px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;108px&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;41px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;img&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;.onload = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 获取DOM元素节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  left = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&amp;quot;left&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  right = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&amp;quot;right&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  div = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&amp;quot;wrap&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pic = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&amp;quot;pic&amp;quot;&lt;/span&gt;).getElementsByTagName(&lt;span class=&#34;string&#34;&gt;&amp;quot;li&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  item = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&#34;string&#34;&gt;&amp;quot;list&amp;quot;&lt;/span&gt;).getElementsByTagName(&lt;span class=&#34;string&#34;&gt;&amp;quot;li&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; index = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;change&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; pic.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pic[i].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      item[i].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (index &amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      index = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pic[index].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    item[index].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;on&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    index++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; set = &lt;span class=&#34;built_in&#34;&gt;setInterval&lt;/span&gt;(change, &lt;span class=&#34;number&#34;&gt;1500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; k = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; k &amp;lt; item.length; k++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    item[k].index = k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    item[k].onclick = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; pic.length; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pic[j].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        item[j].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      index = &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.index;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pic[index].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      item[index].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;on&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 鼠标移动到图片上时(轮播停止,切换按钮显示)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  div.onmouseover = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;clearInterval&lt;/span&gt;(set);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    right.style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    left.style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 鼠标从图片上移开(轮播重新开始,切换按钮隐藏)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  div.onmouseout = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    set = &lt;span class=&#34;built_in&#34;&gt;setInterval&lt;/span&gt;(change, &lt;span class=&#34;number&#34;&gt;1500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    right.style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    left.style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 切换到上一张&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  left.onclick = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; pic.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pic[i].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      item[i].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (index &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      index = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pic[index].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    item[index].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;on&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    index--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 切换到下一张&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;right.onclick = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; pic.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pic[i].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    item[i].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (index &amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    index = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pic[index].style.display = &lt;span class=&#34;string&#34;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  item[index].className = &lt;span class=&#34;string&#34;&gt;&amp;quot;on&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  index++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/7292aa95.html</guid>
            <title>JavaScript高级⑥-存储(cookie)</title>
            <link>https://miraitowa.cc/post/7292aa95.html</link>
            <category>js</category>
            <category>js高级</category>
            <category>cookie</category>
            <pubDate>Sun, 28 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;sessionStorage、localStorage和cookie&#34;&gt;sessionStorage、localStorage和cookie&lt;/h2&gt;
&lt;h3 id=&#34;相同点&#34;&gt;相同点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;都是保存在浏览器端、且同源的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;区别&#34;&gt;区别&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递，而sessionStorage和localStorage不会自动把数据发送给服务器，仅在本地保存。&lt;code&gt;cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;存储大小限制也不同，&lt;code&gt;cookie数据不能超过4K（小于4096）&lt;/code&gt;，同时因为每次http请求都会携带cookie、所以&lt;code&gt;cookie只适合保存很小的数据，如会话标识&lt;/code&gt;。&lt;code&gt;sessionStorage和localStorage&lt;/code&gt;虽然也有存储大小的限制，但比cookie大得多，可以达到&lt;code&gt;5M或更大&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;数据有效期不同，&lt;code&gt;sessionStorage&lt;/code&gt;：仅在&lt;code&gt;当前浏览器窗口关闭之前&lt;/code&gt;有效；&lt;code&gt;localStorage&lt;/code&gt;：&lt;code&gt;始终有效&lt;/code&gt;，窗口或浏览器关闭也一直保存，因此用作持久数据；&lt;code&gt;cookie&lt;/code&gt;：只&lt;code&gt;在设置的cookie过期时间之前有效&lt;/code&gt;，即使窗口关闭或浏览器关闭。&lt;/li&gt;
&lt;li&gt;作用域不同，sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；localstorage在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web Storage&lt;/code&gt;支持事件通知机制，可以将数据更新的通知发送给监听者。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web Storage&lt;/code&gt;的api接口使用更方便。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sessionStorage&lt;/code&gt;用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此&lt;code&gt;sessionStorage&lt;/code&gt;不是一种持久化的本地存储，仅仅是会话级别的存储。而&lt;code&gt;localStorage&lt;/code&gt;用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Cookie&#34;&gt;Cookie&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;什么是Cookie：cookie是存储于用户计算机中的变量。每当该计算机通过浏览器请求某个页面时，就会发送这个cookie。我们可以使用JavaScript来创建和获取cookie的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cookie的存储形式：&lt;code&gt;键值对&lt;/code&gt;，如：&lt;code&gt;name=张三&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用JS创建Cookie的格式：&lt;code&gt;document.cookie = “name=张三”;&lt;/code&gt;&lt;br&gt;
还可以为cookie添加一个过期时间（UTC或GMT,默认情况下，cookie在浏览器关闭时删除）。如：&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.cookie = “name=张三;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;expires=Thu, &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt; Dec &lt;span class=&#34;number&#34;&gt;2019&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; GMT”;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用JS读取Cookie的格式： &lt;code&gt;var X = document.cookie;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改Cookie：JS中修改cookie类似于创建cookie，旧的cookie会被覆盖掉。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除Cookie：只需设置expires参数为以前的时间即可。&lt;br&gt;
如：&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.cookie = “name=张三; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;expires=Thu, &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt; Dec &lt;span class=&#34;number&#34;&gt;2019&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; GMT”;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cookie的缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cookie可能被用户禁用。&lt;/li&gt;
&lt;li&gt;同一个页面被不同浏览器访问时，浏览器之间保存的Cookie不能相互访问。&lt;/li&gt;
&lt;li&gt;每个Cookie都保存在客户端硬盘文件上，可能会被删除。&lt;/li&gt;
&lt;li&gt;Cookie安全性不高，所有Cookie都是以纯文本形式记录于文件中。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Web存储机制&#34;&gt;Web存储机制&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;HTML5提供了一种新的对象&lt;code&gt;Storage&lt;/code&gt;，类似于&lt;code&gt;String&lt;/code&gt;、&lt;code&gt;Number&lt;/code&gt;、&lt;code&gt;Object&lt;/code&gt;。通过Storage对象提供的方法和属性来对数据进行增删改查。&lt;/li&gt;
&lt;li&gt;html5中的&lt;code&gt;Web Storage&lt;/code&gt;包括了两种存储方式：&lt;code&gt;localStorage&lt;/code&gt;和&lt;code&gt;sessionStorage&lt;/code&gt;。两者都是用来存储客户端临时信息的对象。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sessionStorage&lt;/code&gt;用于本地存储一个会话（&lt;code&gt;session&lt;/code&gt;）中的数据，这些数据只有在同一个会话中的页面才能访问，并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅是会话级别的存储。只允许同一窗口访问。而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。同源可以读取并修改localStorage数据。并且他们储存的对象类型均为字符串类型；我们将数据以键值对的形式保存到Storage对象里，通过Storage对象提供的方法进行数据操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//1. 增：接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新其对应的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Storage.setItem()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//2. 删&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 清空存储中的所有键名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Storage.clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 接受一个键名作为参数，并把该键名从存储中删除。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Storage.removeItem()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 3. 改：接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新其对应的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Storage.setItem()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 4. 查&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 接受一个键名作为参数，返回键名对应的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Storage.getItem()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 接受一个数值 n 作为参数，并返回存储中索引为n 的键名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Storage.key()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 返回存储的数据量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Storage.length&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;sessionStorage对象&#34;&gt;sessionStorage对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sessionStorage对象存储某个特定会话的数据，该数据只保持到浏览器关闭（类似于cookie）。&lt;/li&gt;
&lt;li&gt;存储在sessionStorage对象中的数据可以跨越页面刷新而存在。部分浏览器也支持在浏览器崩溃的情况下重启仍然可用（如：Firefox和WebKit等，但是IE不支持）。&lt;/li&gt;
&lt;li&gt;sessionStorage对象其实是Storage对象的一个实例，具体方法如下：
&lt;ol&gt;
&lt;li&gt;sessionStorage.length:获取存储在Storage对象中的数据的数量，是一个只读属性。&lt;/li&gt;
&lt;li&gt;sessionStorage.key():接受一个数值 n 作为参数，并返回存储中索引为n 的键名。&lt;/li&gt;
&lt;li&gt;sessionStorage.getItem():接受一个键名作为参数，返回键名对应的值。&lt;/li&gt;
&lt;li&gt;sessionStorage.setItem()：接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新其对应的值。&lt;/li&gt;
&lt;li&gt;sessionStorage.clear()：清空存储中的所有键名。&lt;/li&gt;
&lt;li&gt;sessionStorage.removeItem()：接受一个键名作为参数，并把该键名从存储中删除。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;globalStorage&#34;&gt;globalStorage&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;globalStorage在浏览器关闭以后，使用globalStorage存储的信息仍能够保留下来，localStorage一样，域中任何一个页面存储的信息都能被所有的页面共享。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;基本语法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 在developer.mozilla.org下面所有的子域都可以通过这个命名空间存储对象来进行读和写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;globalStorage[&lt;span class=&#34;string&#34;&gt;&amp;#x27;developer.mozilla.org&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 在mozilla.org域名下面的所有网页都可以通过这个命名空间存储对象来进行读和写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;globalStorage[&lt;span class=&#34;string&#34;&gt;&amp;#x27;mozilla.org&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 在.org域名下面的所有网页都可以通过这个命名空间存储对象来进行读和写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;globalStorage[&lt;span class=&#34;string&#34;&gt;&amp;#x27;org&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 在任何域名下的任何网页都可以通过这个命名空间存储对象来进行读和写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;globalStorage[&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 注意：globalStorage对象已经被localStorage对象取代。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;localStorage对象&#34;&gt;localStorage对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;localStorage的优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;localStorage拓展了cookie的4k限制。&lt;/li&gt;
&lt;li&gt;localStorage可用将第一次请求的数据直接存储到本地，相当于5M大小的针对于前端页面的数据库，相比于cookie可用节约带宽，但是只有在高版本浏览器中才支持。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;localStorage的局限：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只有在IE8以上浏览器才支持localStorage的存储功能。&lt;/li&gt;
&lt;li&gt;目前所有浏览器都会把localStorage的值类型限定为string，这需要我们转换为JSON对象类型。&lt;/li&gt;
&lt;li&gt;localStorage在浏览器的隐私模式下不可读取。&lt;/li&gt;
&lt;li&gt;由于localStorage在本质上是对字符串的读取，所以如果存储的内容较多，会消耗掉内存空间，导致页面卡顿，加载速度减慢。&lt;/li&gt;
&lt;li&gt;localStorage不能被爬虫抓取到。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;localStorage对象的具体方法与sessionStorage的方法一致。&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/a1736a1e.html</guid>
            <title>JavaScript高级⑤-高级函数</title>
            <link>https://miraitowa.cc/post/a1736a1e.html</link>
            <category>js</category>
            <category>js高级</category>
            <pubDate>Thu, 25 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;安全的类型检测&#34;&gt;安全的类型检测&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;在JS中，内置的类型检测机制有typeof和instanceof&lt;/code&gt;，但是这两个关键字&lt;code&gt;并非完全可靠&lt;/code&gt;。所以我们可以使用&lt;code&gt;Object的toString()方法&lt;/code&gt;以保证返回一个&lt;code&gt;[object XXX]&lt;/code&gt;格式的字符串。这样就可以创建一个函数来判断对象的类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;作用域安全的构造函数&#34;&gt;作用域安全的构造函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;创建一个作用域安全的构造函数，就是让this对象指向正确的实例对象。&lt;/li&gt;
&lt;li&gt;首先使用&lt;code&gt;instanceof&lt;/code&gt;方法判断this对象是否为正确类型的实例，如果不是，就创建一个新的实例并返回。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;惰性载入函数&#34;&gt;惰性载入函数&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;惰性载入函数表示函数执行的分支仅会发生一次，实现惰性载入函数的方式有两种。&lt;/strong&gt;&lt;br&gt;
1. 第一种，在函数被调用时再处理。在第一次调用时，该函数会覆盖为另一个按合适方式执行的函数，这样任何对函数的调用都不会再经过执行的分支了。&lt;br&gt;
2. 第二种，在声明函数时就制定适当的函数。这样在第一次调用函数时就不会损失性能，而在代码首次加载时会损失一点儿性能。&lt;/p&gt;
&lt;h2 id=&#34;函数绑定&#34;&gt;函数绑定&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;JS与DOM交互中经常需要使用函数绑定，定义一个函数然后将其绑定到特定DOM元素或集合的某个事件触发程序上，也经常与事件处理程序一起使用，以便把函数作为变量传递的同时保留代码执行环境。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;重复的定时器&#34;&gt;重复的定时器&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;我们通常使用&lt;code&gt;setInterval&lt;/code&gt;方式来实现时间间隔会出现两个问题：&lt;/strong&gt;&lt;br&gt;
1. 某些间隔会被跳过。&lt;br&gt;
2. 多个定时器的代码执行时，间隔可能会有误差。&lt;br&gt;
&lt;strong&gt;所以我们可以使用&lt;code&gt;setTimeout&lt;/code&gt;方式来完善该功能。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;函数节流&#34;&gt;函数节流&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;定时器不仅可以用来定时，还可以用来缓解浏览器的压力。浏览器在执行DOM操作的时候，就会使用更多的内存和CPU。连续使用过多的DOM操作会导致浏览器崩溃。&lt;/li&gt;
&lt;li&gt;函数节流的基本思想就是，某些代码不可以在没有间断的情况下连续重复使用。也就是说，第一次调用函数就创建一个定时器，在指定的时间间隔之后才能再次运行。当第二次调用该函数时，就会清除前一次的定时器并设置一个。目的就是为了保证每次执行函数时有一段时间的间隔。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/faefd80d.html</guid>
            <title>JavaScript高级④-AJAX与JSON</title>
            <link>https://miraitowa.cc/post/faefd80d.html</link>
            <category>js</category>
            <category>js高级</category>
            <pubDate>Mon, 22 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;AJAX介绍和创建XHR对象&#34;&gt;AJAX介绍和创建XHR对象&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;AJAX:异步 JavaScript 和 XML。简短地说，在不重载整个网页的情况下，AJAX通过后台加载数据，并在网页上进行显示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;AJAX包括以下几个步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建AJAX对象；&lt;/li&gt;
&lt;li&gt;发出HTTP请求；&lt;/li&gt;
&lt;li&gt;接收服务器传回的数据；&lt;/li&gt;
&lt;li&gt;更新页面数据；&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ajax的工作原理如图所示：&lt;/strong&gt;&lt;br&gt;
&lt;img src= &#34;/img/loading.gif&#34; data-lazy-src=&#34;https://gitee.com/usocute/gallery/raw/master/img/miraitowa-javascript-AJAX-JSON-img1.png&#34; alt=&#34;AJAX&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;AJAX通过原生的XMLHttpRequest对象发出HTTP请求，得到服务器返回的数据后再进行处理。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AJAX技术的核心就是XMLHttpRequest对象&lt;/code&gt;（简称：XHR），这是微软首次引入的一个特性，其他浏览器厂商后来都提供了相同的实现。&lt;/li&gt;
&lt;li&gt;IE5中的XHR对象是通过ActiveX对象实现的，而IE7+及其他标准浏览器都支持原生的XHR对象。&lt;/li&gt;
&lt;li&gt;创建一个XHR对象，也叫做实例化一个XHR对象，因为XMLHttpRequest()是一个构造函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;XHR的用法介绍&#34;&gt;XHR的用法介绍&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;open()&lt;/code&gt;方法：设置:  HTTP方法和要获取资源的URL;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;send()&lt;/code&gt;方法：发送请求：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onload&lt;/code&gt;属性：设置:  成功获取数据后将要运行的函数;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onerror&lt;/code&gt;属性：设置:  出现错误后将要运行的函数;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;responseText&lt;/code&gt;属性：设置:  存储异步请求响应的文本;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;HTTP头部信息&#34;&gt;HTTP头部信息&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;请求头用于说明是谁或什么在发送请求、请求源于何处，或者客户端的喜好及能力。服务器可以根据请求头部给出的客户端信息，试着为客户端提供更好的响应。XHR对象也提供了操作这两种头部信息（请求头和响应头）的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Accep&lt;/code&gt;t：告诉WEB服务器自己接受什么介质类型，&lt;em&gt;/&lt;/em&gt; 表示任何类型，type/* 表示该类型下的所有子类型，type/sub-type。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Accept-Charset&lt;/code&gt;：浏览器告诉服务器自己能接收的字符集。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Accept-Encoding&lt;/code&gt;：浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Accept-Language&lt;/code&gt;：浏览器申明自己接收的语言。语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cache-Control&lt;/code&gt;：指定请求和响应遵循的缓存机制。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Connection&lt;/code&gt;：表示是否需要持久连接。如果Servlet看到这里的值为“Keep-Alive”，或者看到请求使用的是HTTP 1.1，它就表示持久连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cookie&lt;/code&gt;：当前域名下的Cookie。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Referer&lt;/code&gt;： 浏览器向WEB 服务器表明自己是从哪个网页URL获得点击当前请求中的网址/URL。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;User-Agent&lt;/code&gt;：浏览器表明自己的身份（是哪种浏览器）。例如：User-Agent：Mozilla/5.0&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;GET与POST请求&#34;&gt;GET与POST请求&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;由于&lt;code&gt;GET方式&lt;/code&gt;在发送数据时是将参数拼接在URL上，&lt;code&gt;传输数据会受到URL长度的限制&lt;/code&gt;，不同浏览器的长度限制不一样，所以&lt;code&gt;GET方式会受到参数大小的限制&lt;/code&gt;，但是&lt;code&gt;POST方式没有参数大小的限制&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;因为GET方式会将请求参数显示在地址栏上，而POST方式不会，所以&lt;code&gt;POST方式相对来讲更安全&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET方式有缓存，而POST方式没有缓存&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;JavaScript中的跨域请求&#34;&gt;JavaScript中的跨域请求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;受JS同源策略的影响，当在某一域名下请求其他域名，或在同一域名下请求不同端口的URL时，就会变成不被允许的跨域请求。127.0.0.1:8020&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;了解XDomainRequest对象&#34;&gt;了解XDomainRequest对象&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;XDomainRequest表示JavaScript和Ajax的跨域请求，在IE8+可以使用&lt;/code&gt;。&lt;br&gt;
XDomainRequest包含以下几个部分：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;事件
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;onload&lt;/code&gt;事件：请求成功并返回对象时，被触发。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onerror&lt;/code&gt;事件：当跨域请求发生错误时，被触发。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onprogress&lt;/code&gt;事件：浏览器开始从服务器端接收数据时，被触发。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ontimeout&lt;/code&gt;事件：出现超时情况，被触发。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;方法
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;abort&lt;/code&gt;方法：终止等待send&lt;/li&gt;
&lt;li&gt;&lt;code&gt;open(XDomainRequest)&lt;/code&gt;方法：建立与服务器的链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;send(XDomainRequest)&lt;/code&gt;方法：传输一个字符串数据给服务器处理&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;属性
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;constructor&lt;/code&gt;属性：返回一个对象的构造函数的引用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contentType&lt;/code&gt;属性：返回html请求或返回头部的content-type属性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;responseText&lt;/code&gt;属性：以字符串形式返回请求的body内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;属性：超时后返回的值。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;JSON数据&#34;&gt;JSON数据&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;JSON(JavaScript Object Notation&lt;/code&gt;, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 &lt;code&gt;ECMAScript&lt;/code&gt; (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Json的语法可以表示成三种类型的值：&lt;/strong&gt;&lt;br&gt;
1. 简单值：可以在Json中表示字符串、数值、布尔值和null，但是&lt;code&gt;不支持undefined&lt;/code&gt;;&lt;br&gt;
2. 对象：作为一种复杂数据结构，表示一种无序的键值对，每个键值对中的值既可以是简单值，也可以是复杂数据类型的值。&lt;br&gt;
3. 数组：作为一种复杂数据结构，表示一种有序值的列表，可以通过数组索引访问其中的值。数组中的元素可以是任何类型：简单值、对象、数组均可。&lt;br&gt;
&lt;strong&gt;如：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;span class=&#34;attr&#34;&gt;a&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Hello&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;b&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;World&amp;#x27;&lt;/span&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//这是一个对象，注意键名也是可以使用引号包裹的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; json = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;&amp;quot;a&amp;quot;: &amp;quot;Hello&amp;quot;, &amp;quot;b&amp;quot;: &amp;quot;World&amp;quot;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;//这是一个 JSON 字符串，本质是一个字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;在Ajax中使用JSON数据&#34;&gt;在Ajax中使用JSON数据&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;：把Json格式的字符串转换为Json对象。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;:把Json对象转换为Json格式的字符串。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/bd399257.html</guid>
            <title>JavaScript高级③-匿名函数及函数操作</title>
            <link>https://miraitowa.cc/post/bd399257.html</link>
            <category>js</category>
            <category>js高级</category>
            <pubDate>Sat, 20 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;匿名函数&#34;&gt;匿名函数&lt;/h2&gt;
&lt;h3 id=&#34;工厂模式&#34;&gt;工厂模式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;假如我们把猫看成是一类，都有名字和颜色的属性，那么，每一只猫就是这个类的实例，我们可以使用字面量方式定义对象：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cat1 = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  name:&lt;span class=&#34;string&#34;&gt;&amp;quot;大黄&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  color:&lt;span class=&#34;string&#34;&gt;&amp;quot;黄色&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  say:&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&amp;quot;miao&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cat2 = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  name:&lt;span class=&#34;string&#34;&gt;&amp;quot;小黑&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  color:&lt;span class=&#34;string&#34;&gt;&amp;quot;黑色&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  say:&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&lt;span class=&#34;string&#34;&gt;&amp;quot;miao&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;这样创建对象，一是创建对象比较麻烦，二是实例与原型（猫类）之间，没有任何联系。&lt;/li&gt;
&lt;li&gt;为了简化代码书写，我们可以写一个函数批量创建对象，也就是使用&lt;code&gt;“工厂模式”&lt;/code&gt;：&lt;br&gt;
&lt;strong&gt;（工厂模式中的函数，首字母大写）：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Cat&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n,c&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        name:n,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        color:c,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        say:&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          alert(&lt;span class=&#34;string&#34;&gt;&amp;quot;miao&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;生成实例对象，就等于是在调用函数&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cat1 = Cat(&lt;span class=&#34;string&#34;&gt;&amp;quot;大黄&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;黄色&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cat2 = Cat(&lt;span class=&#34;string&#34;&gt;&amp;quot;小黑&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;黑色&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;这样代码虽然简单了，但是实例之间还是没有什么联系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;构造函数&#34;&gt;构造函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;为了解决从原型对象生成实例的问题，Javascript提供了一个构造函数（Constructor）模式。&lt;/li&gt;
&lt;li&gt;所谓&amp;quot;构造函数&amp;quot;，其实就是一个普通函数，但是内部使用了this变量。对构造函数使用new运算符，就能生成实例，并且this变量会绑定在实例对象上。&lt;/li&gt;
&lt;li&gt;构造函数首字母大写，没有return语句，没有显式地创建对象。&lt;/li&gt;
&lt;li&gt;构造函数中的this，指向的是实例化的对象&lt;br&gt;
&lt;strong&gt;例如：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Cat&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n,c&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.name=n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.color=c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;生成实例对象&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cat1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Cat(&lt;span class=&#34;string&#34;&gt;&amp;quot;大黄&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;黄色&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cat2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Cat(&lt;span class=&#34;string&#34;&gt;&amp;quot;小黑&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;黑色&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;这时cat1和cat2会自动含有一个constructor属性，指向它们的构造函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;alert(cat1.constructor == Cat); &lt;span class=&#34;comment&#34;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(cat2.constructor == Cat); &lt;span class=&#34;comment&#34;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Javascript还提供了一个instanceof运算符，验证原型对象与实例对象之间的关系。&lt;/li&gt;
&lt;li&gt;instanceof不认为基本类型值的变量是对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; txt=&lt;span class=&#34;string&#34;&gt;&amp;#x27;adsdf&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(txt &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;String&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; age=&lt;span class=&#34;number&#34;&gt;123123&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(age &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Number&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; re=&lt;span class=&#34;regexp&#34;&gt;/\d/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(re &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;RegExp&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr=[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(arr &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;原型模式和原型链&#34;&gt;原型模式和原型链&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;每类对象的实例对象，都有可能会有一些相同的属性，或者相同的功能，如果都写在构造函数上，会造成重复的内容，占用更多的内存。&lt;/li&gt;
&lt;li&gt;为了解决这种代码的重复&lt;/li&gt;
&lt;li&gt;构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。&lt;/li&gt;
&lt;li&gt;我们可以把那些不变的属性和方法，直接定义在prototype对象上。让实例对象共享其属性和方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cat.protoType.say = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  alert(&lt;span class=&#34;string&#34;&gt;&amp;quot;miao&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat1.say()&lt;span class=&#34;comment&#34;&gt;//miao&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat2.say()&lt;span class=&#34;comment&#34;&gt;//miao&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;所有的函数都是 Function 的实例。在构造函数上都有一个原型属性—prototype，prototype也是一个对象；这个对象上有一个 constructor 属性，该属性指向的就是构造函数。&lt;/li&gt;
&lt;li&gt;而实例对象上有一个_proto_属性，该属性也指向原型对象，该属性不是标准属性，不可以用在编程中，该属性用于浏览器内部使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;组合使用构造函数模式和原型模式&#34;&gt;组合使用构造函数模式和原型模式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;构造函数与原型模式组合的模式是目前使用最广泛、认同度最高的一种创建定义类型的方法。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个实例都会有自己的一份实例属性的副本，同时共享着对方法的引用，最大限度节省内存。同时，这种组合模式还支持向构造函数传递参数，集合了两种模式的优点。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;动态原型模式&#34;&gt;动态原型模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;动态原型模式就是把所有信息都封装在构造函数中，通过检查某个应该存在的方法是否有效，来决定是否需要初始化原型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;寄生构造函数模式&#34;&gt;寄生构造函数模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;寄生构造函数模式的基本思想，是创建一个用于封装创建对象的函数。主要用于创建一个自定义类型的函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;稳妥构造函数模式&#34;&gt;稳妥构造函数模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;稳妥对象，指的是没有公共属性，而且其方法也不引用this的对象。适合在一些安全的环境中（禁用this和new的环境），或者防止数据被其他应用程序调用时使用。&lt;/li&gt;
&lt;li&gt;稳妥构造函数遵循与寄生构造函数类似的模式，只是有两点不同：
&lt;ol&gt;
&lt;li&gt;新创建对象的实例方法不引用this；&lt;/li&gt;
&lt;li&gt;不使用new调用构造函数。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;原型链&#34;&gt;原型链&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;原型链可以简单理解为原型组成的链，对象的_proto_就是其原型，而原型也是一个对象，也有_proto_属性。原型的_proto_又是原型的原型，这样可以一直向上找，直到找到Object的原型，就是这条原型链的顶端。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;借用构造函数，也称伪造对象或经典继承&#34;&gt;借用构造函数，也称伪造对象或经典继承&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;借用构造函数实现继承的基本思想是：在子类的构造函数中调用超类的构造函数。该函数可以通过apply()方法和call()方法在新创建的对象中执行构造函数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;优点：相对于原型链而言，借用构造函数可以在子类构造函数中向超类构造函数传递数据。&lt;/li&gt;
&lt;li&gt;缺点：构造函数的方法都在构造函数中定义，因此无法实现函数复用。另外，子类无法看见在超类中定义的方法，导致所有类型只能使用构造函数模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;组合继承&#34;&gt;组合继承&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;组合继承，又称为伪经典继承。指：将原型链和借用构造函数的技术组合在一起，从而发挥两者长处的一种继承模式。
&lt;blockquote&gt;
&lt;p&gt;其思想是：使用原型链实现对原型属性和方法的继承，通过借用构造函数来实现对实例属性的继承。这样，我们就可以实现通过在原型上定义方法进而实现函数复用，又能保证每个实例都有自己的属性，解决原型链中存在的引用类型属性共享问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;原型式继承&#34;&gt;原型式继承&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;原型式继承，即：一个构造方法，通过原型链的方式继承另一个构造函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;寄生式继承&#34;&gt;寄生式继承&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;寄生式继承，即：创建一个仅用于封装继承过程的函数，该函数在内部以某种方式来增强对象，最后返回该对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;寄生组合式继承&#34;&gt;寄生组合式继承&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;寄生组合式继承是JS最常用的继承模式，其最大的问题就是无论在什么情况下，都会调用两次构造函数：一次是在创建子类原型时，另一次是在子类构造函数内部。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;函数操作&#34;&gt;函数操作&lt;/h2&gt;
&lt;h3 id=&#34;函数表达式&#34;&gt;函数表达式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;使用函数表达式创建的函数，必须先赋值再调用。（即：只有函数声明式才有函数提升，函数表达式没有函数提升。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fn2(); &lt;span class=&#34;comment&#34;&gt;// 不能在函数之前调用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; fn2 = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&amp;quot;2.演示函数表达式&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fn2(); &lt;span class=&#34;comment&#34;&gt;// 只能在函数之前调用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;虽然函数表达式没有函数提升，但是它也有自己的一些优点。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;递归函数&#34;&gt;递归函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;递归函数，就是在函数体内调用本函数。最简单的例子就是计算阶乘： 1&lt;em&gt;2&lt;/em&gt;3…。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;递归的缺点：如果递归函数的终止条件不明确甚至缺失，会导致该函数长时间运行，使用户界面处于假死状态。另外，当递归使用太多甚至超过最大调用栈内存容量时，浏览器会报错。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;闭包&#34;&gt;闭包&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;闭包，是指有权访问另外一个函数作用域中的变量的函数。创建闭包的常见方式就是在一个函数内部创建另一个函数。&lt;/li&gt;
&lt;li&gt;JS中，一般为了给某个函数声明一些只有该函数才能使用的局部变量时就会使用闭包，这样可以减少全局作用域中的变量，净化全局作用域。但是闭包会占用更多的内存。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;模仿块级作用域&#34;&gt;模仿块级作用域&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JS中没有块级作用域，我们可以进行模仿块级作用域。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用方式：&lt;br&gt;
简单来讲，就是定义并立即调用一个匿名函数。&lt;br&gt;
具体步骤，就是将匿名函数声明（函数表达式）在一对圆括号中，而紧随其后的一对圆括号会立即调用该函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;私有变量&#34;&gt;私有变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;严格来讲，JS中没有私有成员的概念，所有对象属性都是公开的。&lt;/li&gt;
&lt;li&gt;但是，任何在函数中定义的变量都可以认为是私有变量，因为不能在函数外部访问。&lt;/li&gt;
&lt;li&gt;私有变量包括函数参数，局部变量以及在函数内部定义的其他函数。&lt;/li&gt;
&lt;li&gt;闭包函数可以持有这些私有变量，并在外部访问。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/fec01c07.html</guid>
            <title>JavaScript高级②-面向对象的程序设计</title>
            <link>https://miraitowa.cc/post/fec01c07.html</link>
            <category>js</category>
            <category>js高级</category>
            <pubDate>Fri, 19 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;&lt;code&gt;JavaScript是基于对象编程的&lt;/code&gt;，&lt;code&gt;面向对象是一种编程思想&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;类和对象&#34;&gt;类和对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;类：我们善于将事物进行分类，类是一个抽象的概念。&lt;/li&gt;
&lt;li&gt;对象：具体的事物。
&lt;ul&gt;
&lt;li&gt;猫是一类&lt;/li&gt;
&lt;li&gt;楼下的大黄  —&amp;gt;  对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;类是对象的抽象，对象是类的具体事例。&lt;/li&gt;
&lt;li&gt;类不占用内存，对象占用内存空间。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Object类型&#34;&gt;Object类型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Object对象，是所有JavaScript对象的超类（基类）。&lt;/li&gt;
&lt;li&gt;Object.prototype（Object的原型）定义了JS对象的基本方法和属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;声明对象-Object变量定义-两种方法&#34;&gt;声明对象(Object变量定义) 两种方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;字面量声明 var obj = {};&lt;/li&gt;
&lt;li&gt;new运算符 var obj = new Object();&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;对象类型的判断&#34;&gt;对象类型的判断&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;console.log(typeof  obj);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;添加对象属性的方法&#34;&gt;添加对象属性的方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;语法 ：&lt;a href=&#34;http://obj.id&#34;&gt;obj.id&lt;/a&gt; = “abc”;&lt;/li&gt;
&lt;li&gt;[ ]方括号语法：  obj[“id”]= “abc”;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;删除对象属性的方法&#34;&gt;删除对象属性的方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;delete &lt;a href=&#34;http://obj.id&#34;&gt;obj.id&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;delete obj[“id”];&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;遍历对象&#34;&gt;遍历对象&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;for in 循环&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  name:&lt;span class=&#34;string&#34;&gt;&amp;quot;zhangsan&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  age:&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; obj)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(key,obj[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//name zhangsan&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//age 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;检测对象有没有某个属性&#34;&gt;检测对象有没有某个属性&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; obj)         （判断有）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (obj.name === &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;)（判断没有）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;Function类型&#34;&gt;Function类型&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Function类型是JS中的引用类型之一，每个函数实际上都是Function类型的实例对象，具有自己的属性和方法。正因为函数式对象，所以函数名实际上也是一个指向函数对象的指针。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;函数的定义方式&#34;&gt;函数的定义方式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;使用function关键字定义函数：（函数声明式）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a, b&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;通过变量声明（表达式）定义函数：（函数表达式）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; sum = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;a, b&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;函数的调用&#34;&gt;函数的调用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;通过函数名调用： &lt;code&gt;sum()&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;事件绑定调用：   &lt;code&gt;obj.onclick = sum&lt;/code&gt;;&lt;br&gt;
&lt;strong&gt;注意：函数名仅仅保存指向函数对象的指针，隐藏函数名与包含对象指针的其他变量一样。也就是说，一个函数对象可以有多个名字。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;如：&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a, b&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log( sum(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) );   &lt;span class=&#34;comment&#34;&gt;// 15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 变量sum2也指向了同一个函数对象   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; sum2 = sum;&lt;span class=&#34;comment&#34;&gt;// sum后面不加括号，不传参数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log( sum2(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) );   &lt;span class=&#34;comment&#34;&gt;// 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;// sum对象不再保存函数对象的指针了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log( sum2(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) );   &lt;span class=&#34;comment&#34;&gt;// sum2这个变量仍能继续使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;函数的重载&#34;&gt;函数的重载&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓重载，就是一组相同的函数名，有不同个数的参数，在使用时调用一个函数名，传入不同参数，根据你的参数个数，来决定使用不同的函数！但是JS中是没有重载的，因为后定义的函数会覆盖前面的同名函数。&lt;br&gt;
&lt;strong&gt;在JS中，我们实现重载的常用方式有：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;根据传入参数的不同类型进行重载；&lt;/li&gt;
&lt;li&gt;利用参数中特殊的参数值进行重载；&lt;/li&gt;
&lt;li&gt;根据参数的个数进行重载（最简单的方式：switch case 用法）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;函数声明式，函数表达式与函数提升&#34;&gt;函数声明式，函数表达式与函数提升&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;JS中的声明函数的方法有两种：函数声明式和函数表达式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;两者区别如下：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;函数声明式必须要有函数名&lt;/code&gt;，而函数表达式的&lt;code&gt;函数名&lt;/code&gt;是&lt;code&gt;可选&lt;/code&gt;的。&lt;/li&gt;
&lt;li&gt;以&lt;code&gt;函数声明式&lt;/code&gt;定义的函数&lt;code&gt;可以在其声明之前被调用&lt;/code&gt;，而以&lt;code&gt;函数表达式&lt;/code&gt;声明的函数&lt;code&gt;只能在其后被调用&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;以&lt;code&gt;函数声明式&lt;/code&gt;定义的函数&lt;code&gt;仅仅可以出现在全局中，或者嵌套在其他函数中&lt;/code&gt;，&lt;code&gt;不能出现在循环语句&lt;/code&gt;，条件语句和try/catch/finally中；而&lt;code&gt;函数表达式可以在任何地方声明&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数提升&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;函数提升，即：自动把函数的作用范围提升到全局中。而&lt;code&gt;只有函数声明式才存在函数提升&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;函数内部属性：arguments-this&#34;&gt;函数内部属性：arguments, this&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;arguments&lt;/code&gt;：用来存放传输参数的数组，可以被调用多次，每次数组都不一样。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;this&lt;/code&gt;：&lt;code&gt;谁调用函数，谁就是this&lt;/code&gt;。进行方法调用的时候函数前面是有window的，只是通常会省略掉。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;函数的属性和方法&#34;&gt;函数的属性和方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;length&lt;/code&gt;属性&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;arguments对象的length属性表示实参个数，函数的length属性则表示形参个数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;name&lt;/code&gt;属性：访问到给定函数指定的名字，即：跟在function关键字后的标识符。&lt;code&gt;匿名函数的name属性为空&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;prototype&lt;/code&gt;属性：是每个函数都有的属性，该属性指向一个对象的引用，这个对象称作&lt;code&gt;原型对象（prototype object）&lt;/code&gt;。每一个函数都包含不同的原型对象。将函数用做构造函数时，新创建的对象会从原型对象中继承属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apply()&lt;/code&gt;方法和&lt;code&gt;call()&lt;/code&gt;方法：是每个函数都有的方法，等同于函数体内this对象的值。（后面讲解）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;基本包装类型&#34;&gt;基本包装类型&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;为了便于操作基本类型的值，ECMAScript提供了3种特殊的引用类型：&lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;。他们与其他引用类型的使用方法相似，同时也具有各自的基本类型的属性。实际上，每当读取一个基本类型的值，后台就会创建一个对应的基本包装类型的对象，从而可以调用对应的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;类型：没有特定的属性和方法。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Number&lt;/code&gt;类型：有静态属性，可以直接调用里面的属性和方法，&lt;code&gt;无需new出来&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;类型：包含String对象属性，字符串方法，字符串操作方法，字符串位置方法等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;JS内置对象介绍&#34;&gt;JS内置对象介绍&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;String对象：字符串对象&lt;/li&gt;
&lt;li&gt;Array对象：数组对象&lt;/li&gt;
&lt;li&gt;Date对象：日期时间对象&lt;/li&gt;
&lt;li&gt;Boolean对象：布尔对象&lt;/li&gt;
&lt;li&gt;Number对象：数值对象&lt;/li&gt;
&lt;li&gt;Math对象：数学对象&lt;/li&gt;
&lt;li&gt;RegExp对象：正则对象&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/4f09663b.html</guid>
            <title>JavaScript高级①-变量、作用域和内存</title>
            <link>https://miraitowa.cc/post/4f09663b.html</link>
            <category>js</category>
            <category>js高级</category>
            <pubDate>Tue, 16 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;掌握基本类型和引用类型的值&#34;&gt;掌握基本类型和引用类型的值&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;ECMAScript的数据类型包括两种：基本数据类型和引用数据类型。&lt;/li&gt;
&lt;li&gt;基本数据类型指的是简单的数据段，常见的基本数据类型有： number, string, boolean, null, undefined。&lt;/li&gt;
&lt;li&gt;引用数据类型指的是由多个值构成的对象，常见的引用数据类型（即：对象类型Object type）有： Object, Array, Function, Date等。&lt;/li&gt;
&lt;li&gt;当我们对变量赋值时，解析器首先要确认的就是这个值是基本类型值，还是引用类型值。&lt;/li&gt;
&lt;li&gt;两种数据类型的区别点如下：
&lt;ul&gt;
&lt;li&gt;声明变量时不同的内存分配。基本类型的值保存在栈内存中，引用类型的值同时保存在栈内存和堆内存中。&lt;/li&gt;
&lt;li&gt;不同的内存分配机制也带来了不同的访问机制。&lt;/li&gt;
&lt;li&gt;赋值变量时的不同。不能给基本类型的值添加属性。&lt;/li&gt;
&lt;li&gt;参数传递的不同（把实参赋值给形参的过程）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;值的比较：
&lt;ul&gt;
&lt;li&gt;基本类型的比较是值的比较；&lt;/li&gt;
&lt;li&gt;引用类型的比较是引用的比较；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;执行环境及作用域&#34;&gt;执行环境及作用域&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;执行环境介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;执行环境是JavaScript中最重要的一个概念。执行函数定义了变量或函数有权访问的其他数据，决定了他们各自的行为。每个执行环境都有一个与之关联的变量对象(variable object)和一个作用域链(scope chain)，环境中定义的所有变量和函数都保存在其变量对象中。&lt;code&gt;执行环境分为两种，即：全局执行环境和函数执行环境&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全局执行环境&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全局执行环境是最外围的一个执行环境，其变量对象就是全局活动对象(window activation object)，全局执行环境直到应用程序退出（例如：关闭网页或浏览器）时才会被销毁。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数执行环境&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每个函数都有自己的执行环境。当执行流进入一个函数时，函数环境就会被推入一个环境栈中。当函数执行完之后，栈将该执行环境弹出，把控制权返回给之前的执行环境。函数执行环境的变量对象是该函数的活动对象(activation object)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用域链&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于每一个执行环境，都会创建一个与之关联的作用域链。每个执行环境的作用域链的前端，始终都是该执行环境的变量对象，对于全局执行环境就相当于window对象，对于函数执行环境就相当于该函数的活动对象；对于全局执行环境，已经是根部，没有后续；对于函数执行环境，其作用域链的后续就是该函数对象的[scope]属性里的作用域链。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;垃圾收集&#34;&gt;垃圾收集&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript具有自动垃圾收集机制，也就是说，执行环境会负责管理代码执行过程中使用的内存。&lt;br&gt;
这种垃圾收集机制的原理其实很简单：找出那些不再继续使用的变量，然后释放其占用的内存。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;标记清除：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JavaScript中最常用的垃圾收集方式是标记清除&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;垃圾收集器会在运行的时候给存储在内存中的所有变量都加上标记，然后去掉环境中的变量以及被环境中的变量引用的变量的标记。&lt;/li&gt;
&lt;li&gt;在此之后再被加上标记的变量将被视为准备删除的变量，原因是环境中的变量已经无法访问到这些变量了。&lt;/li&gt;
&lt;li&gt;最后垃圾收集器完成内存清除的工作，销毁那些带标记的值并回收它们所占用的空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引用计数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引用计数是不太常见的垃圾收集策略。&lt;/li&gt;
&lt;li&gt;引用计数的含义是跟踪记录每个值被引用的次数。&lt;/li&gt;
&lt;li&gt;当声明了一个变量并将一个引用类型值赋给该变量时，则这个值的引用次数就是1，如果该值同时赋给另一个变量，则该值引用次数加1。相反，如果包含对这个值引用的变量又取了另一个值，则该值引用次数减1。&lt;/li&gt;
&lt;li&gt;当这个值引用次数变成0时就说明没有办法再访问该值了，可将其占用的内存空间回收。&lt;/li&gt;
&lt;li&gt;当垃圾收集器下次运行时，就会释放那些引用次数为0的值所占用的内存。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;另外，垃圾收集处理方式除了以上两种策略，还可以进行&lt;code&gt;垃圾周期处理&lt;/code&gt;和&lt;code&gt;解除引用&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;垃圾周期处理：找出那些不再继续使用的变量，然后释放其占用的内存，垃圾收集器会按照固定的时间间隔周期性地执行这一操作。&lt;/li&gt;
&lt;li&gt;解除引用：对于全局变量，当不再使用时，使用null赋值是一个良好的习惯。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/5aafef3c.html</guid>
            <title>JavaScript基础④-文档对象模型(BOM)</title>
            <link>https://miraitowa.cc/post/5aafef3c.html</link>
            <category>js</category>
            <category>js基础</category>
            <pubDate>Mon, 15 Mar 2021 11:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;DOM介绍&#34;&gt;DOM介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;DOM（document object model ）文档对象模型，定义了表示和修改文档所需的对象、行为和属性，以及这些对象之间的关系。它是一个能让程序和脚本动态访问和更新内容，结构和样式的语言平台。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;DOM中的常用属性&#34;&gt;DOM中的常用属性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;title:设置或返回当前页面的标题。&lt;/li&gt;
&lt;li&gt;body:提供对body元素的直接访问。&lt;/li&gt;
&lt;li&gt;cookie:设置或返回与当前文档有关的的所有cookie。&lt;/li&gt;
&lt;li&gt;domain:返回当前文档的域名。&lt;/li&gt;
&lt;li&gt;referrer:返回载入当前文档的URL。&lt;/li&gt;
&lt;li&gt;URL:返回当前文档的URL。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;DOM中的常用方法&#34;&gt;DOM中的常用方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;scrollLeft: 页面在水平方向上的滚动距离&lt;/li&gt;
&lt;li&gt;scrollTop: 页面在垂直方向上的滚动距离&lt;/li&gt;
&lt;li&gt;clientWidth: 页面可见区域的宽度&lt;/li&gt;
&lt;li&gt;clientHeight: 页面可见区域的高度&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;DOM中的innerText、innerHTML、style属性&#34;&gt;DOM中的innerText、innerHTML、style属性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;innerText: 获取或设置指定的页面元素内容&lt;/li&gt;
&lt;li&gt;innerHTML: 获取或设置指定的页面元素内容（含有html标签）&lt;/li&gt;
&lt;li&gt;style: 获取或设置样式&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;DOM中表单对象的常用方法&#34;&gt;DOM中表单对象的常用方法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;reset():重置&lt;/li&gt;
&lt;li&gt;submit():提交表单&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;DOM中表单对象的常用属性&#34;&gt;DOM中表单对象的常用属性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;action:设置或返回表单的action属性(即：提交的路径)&lt;/li&gt;
&lt;li&gt;enctype:设置或返回表单数据在发送到服务器之前的编码方式&lt;/li&gt;
&lt;li&gt;id:设置或返回表单id&lt;/li&gt;
&lt;li&gt;length:返回表单中的元素个数&lt;/li&gt;
&lt;li&gt;method:设置或返回将数据发送到服务器的http方法&lt;/li&gt;
&lt;li&gt;name:设置或返回表单name名称&lt;/li&gt;
&lt;li&gt;target:设置或返回表单提交结果的frame或window名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;DOM中表单对象集合-elements&#34;&gt;DOM中表单对象集合: elements[]&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;elements[]:即一个数组，包含所有的表单元素&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/648a3caa.html</guid>
            <title>JavaScript基础③-浏览器对象模型(DOM)</title>
            <link>https://miraitowa.cc/post/648a3caa.html</link>
            <category>js</category>
            <category>js基础</category>
            <pubDate>Mon, 15 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;BOM概述&#34;&gt;BOM概述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BOM（browser object model）浏览器对象模型**&lt;/li&gt;
&lt;li&gt;BOM提供了独立于内容而与浏览器窗口进行交互的对象、载入页面的相关信息，其核心对象是window对象。&lt;/li&gt;
&lt;li&gt;BOM 没有相关标准，每个浏览器都定义了自己的属性，并且，都有其自己对BOM的实现方式。&lt;/li&gt;
&lt;li&gt;W3C虽然没有为BOM统一制定标准,但是其中的窗口对象、导航对象等,因功能趋同,实际上已经成为默认的标准。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;BOM对象&#34;&gt;BOM对象&lt;/h2&gt;
&lt;h3 id=&#34;window对象&#34;&gt;window对象&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;window对象（宿主对象）表示一个浏览器窗口（或一个框架），所有浏览器的属性和方法，都被定义在window这个对象之上。 js通过window对象，就可以对浏览器进行操作（读取/修改浏览器属性、操作标签元素、响应用户事件等）。 window对象是全局对象，并且是唯一的，因此在使用中可以省略不写，例如：可以只写 document，而不必写 window.document。同样，可以把window对象的方法当作函数来使用，如只写 alert()，而不必写window.alert()。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;window方法&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;window的方法&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;alert()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提示框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;confirm()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;带有确认 取消 按钮的提示框(返回true或false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;prompt()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;带有可输入内容的文本域 的提示框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;setInterval()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;间隔定时器，可按照指定的周期（以毫秒计）来调用函数或计算表达式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;clearInterval()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;清除间隔定时器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;setTimeout()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;超时定时器，在指定的毫秒数后调用函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;clearTimeout()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;清除超时定时器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;open()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打开一个新的浏览器窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;close()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;关闭窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;history-历史记录&#34;&gt;history 历史记录&lt;/h2&gt;
&lt;h3 id=&#34;history的属性&#34;&gt;history的属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;length:返回浏览器历史列表中URL的数量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;histroy的方法&#34;&gt;histroy的方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;window.history.go() 刷新&lt;/li&gt;
&lt;li&gt;window.history.go(1) 前进（跳转）&lt;/li&gt;
&lt;li&gt;window.history.go(-1) 后退（跳转）&lt;/li&gt;
&lt;li&gt;window.history.forward() 前进&lt;/li&gt;
&lt;li&gt;window.history.back() 后退&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;location-定位&#34;&gt;location 定位&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;location的属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;protocol: 当前的URL协议&lt;/li&gt;
&lt;li&gt;hostname: 当前URL的主机名&lt;/li&gt;
&lt;li&gt;port: 当前URL的端口号&lt;/li&gt;
&lt;li&gt;host: 当前的URL主机名和端口号&lt;/li&gt;
&lt;li&gt;pathname: 当前的URL的路径&lt;/li&gt;
&lt;li&gt;hash:  以#开始的URL的锚（想要达到页面中的固定位置时使用）&lt;/li&gt;
&lt;li&gt;search: 以？开始的URL拼接部分&lt;/li&gt;
&lt;li&gt;href:  当前URL的完整路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;location的方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assign()  加载新的文档（原始页面可以返回，仍然存在）&lt;/li&gt;
&lt;li&gt;reload() 页面重载&lt;/li&gt;
&lt;li&gt;replace()  用新文档替换当前文档（原始页面不可以返回，不存在)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;navigator-导航&#34;&gt;navigator 导航&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;window.navigator.userAgent 浏览器类型、版本、操作系统类型、浏览器引擎类型等信息&lt;br&gt;
//返回浏览器的名称&lt;/li&gt;
&lt;li&gt;navigator.appName&lt;br&gt;
//返回浏览器的平台和版本信息&lt;/li&gt;
&lt;li&gt;navigator.appVersion&lt;br&gt;
//返回指明浏览器中是否启用 cookie 的布尔值&lt;/li&gt;
&lt;li&gt;navigator.cookieEnabled&lt;br&gt;
//返回运行浏览器的操作系统平台&lt;/li&gt;
&lt;li&gt;navigator.platform&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/49eef7dc.html</guid>
            <title>javascript基础②-本地对象</title>
            <link>https://miraitowa.cc/post/49eef7dc.html</link>
            <category>js</category>
            <category>JavaScript基础</category>
            <pubDate>Sun, 14 Mar 2021 10:24:02 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;Date对象的创建&#34;&gt;Date对象的创建&lt;/h2&gt;
&lt;h3 id=&#34;获取当前日期及时间&#34;&gt;获取当前日期及时间&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; 变量名 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt;  &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置指定时间&#34;&gt;设置指定时间&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; 变量名 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt;  &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;(年，月，日);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; 变量名 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt;  &lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;(年，月，日，时，分，秒，毫秒);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;Date对象中的常用方法&#34;&gt;Date对象中的常用方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;to方法组:(&lt;code&gt;转换&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;toString()&lt;/code&gt;把日期转换成字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toLocaleString()&lt;/code&gt;把日期转换成本地时间(年月日时分秒)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toLocaleDateString()&lt;/code&gt;把日期转换成本地时间(年月日)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toLocaleTimeString()&lt;/code&gt;把日期转换成本地时间(时分秒)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;get方法组:(&lt;code&gt;获取&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getDate()&lt;/code&gt;获取一个月的某一天日期(1-31)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getDay()&lt;/code&gt;获取一周中的某一天(0-6)—(星期天是0)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getMonth()&lt;/code&gt;获取月份(0-11)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getFullYear()&lt;/code&gt;获取四位数字的年份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getHours()&lt;/code&gt;获取小时数(0-23)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getMinutes()&lt;/code&gt;获取分钟数(0-59)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getSeconds()&lt;/code&gt;获取秒数(0-59)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;set方法组:(&lt;code&gt;设置&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setDate()&lt;/code&gt;设置一个月的某一天日期(1-31)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setMonth()&lt;/code&gt;设置月份(0-11)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setFullYear()&lt;/code&gt;设置四位数字的年份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setHours()&lt;/code&gt;设置小时数(0-23)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setDay&lt;/code&gt;(这个真&lt;code&gt;没有!!!!&lt;/code&gt;,&lt;code&gt;星期是通过设定日期自动计算的&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setFullYear(year，month，day)&lt;/code&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt;:&lt;code&gt;必需&lt;/code&gt;表示年份的四位整数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;month&lt;/code&gt;:&lt;code&gt;可选&lt;/code&gt;,介于 &lt;code&gt;0 ~ 11&lt;/code&gt; 之间。如果不填，取系统当月-1为去年的最后一个月,12为明年的第一个月,13为明年的第二个月。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;day&lt;/code&gt;:&lt;code&gt;可选&lt;/code&gt;，表示月中某一天的数值。如果不填，取系统当日本地时间表示。介于 1 ~ 31 之间,0 为上个月最后一天,-1 为上个月最后一天之前的天数,如果当月有31天: 32 为下个月的第一天,如果当月有30天: 32 为下一个月的第二天。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setHours&lt;/code&gt;(&lt;code&gt;hour&lt;/code&gt;,&lt;code&gt;min&lt;/code&gt;,&lt;code&gt;sec&lt;/code&gt;,&lt;code&gt;millisec&lt;/code&gt;)
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可以有4个参数&lt;/li&gt;
&lt;li&gt;hour:小时&lt;/li&gt;
&lt;li&gt;min:分钟&lt;/li&gt;
&lt;li&gt;sec:秒&lt;/li&gt;
&lt;li&gt;millisec:毫秒&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;字符串的常用方法&#34;&gt;字符串的常用方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;length&lt;/code&gt;: 获取字符串的长度&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;中华人民共和国&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert( str.length);	&lt;span class=&#34;comment&#34;&gt;// 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;slice(start[,end])&lt;/code&gt;截取字符串，&lt;code&gt;start&lt;/code&gt;–开始索引 &lt;code&gt;end&lt;/code&gt;–结束索引&lt;br&gt;
&lt;strong&gt;返回:包含开始位置，不包含结束位置(含头不含尾)&lt;/strong&gt;&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;中华人民共和国&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str1 = str.slice(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//人民&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;substring(start [,end])&lt;/code&gt;截取字符串，&lt;code&gt;start&lt;/code&gt;:开始的索引位置,&lt;code&gt;end&lt;/code&gt;: 结束的索引位置(不写到末尾)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;返回:包含开始位置，不包含结束位置(含头不含尾)&lt;/strong&gt;&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;中华人民共和国&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str1 = str.substr(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);	&lt;span class=&#34;comment&#34;&gt;//人民&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;substr(start[,length])&lt;/code&gt;，&lt;code&gt;start&lt;/code&gt;:开始的索引位置,取&lt;code&gt;length&lt;/code&gt;个字符(不写到末尾)&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;中华人民共和国&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str1 = str.substr(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);	&lt;span class=&#34;comment&#34;&gt;//人民共和国&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;split()&lt;/code&gt;，按条件分割字符串，返回一个字符串数组&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;中华人民共和国&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = str.split(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);	 &lt;span class=&#34;comment&#34;&gt;//[&amp;quot;中&amp;quot;, &amp;quot;华&amp;quot;, &amp;quot;人&amp;quot;, &amp;quot;民&amp;quot;, &amp;quot;共&amp;quot;, &amp;quot;和&amp;quot;,&amp;quot;国&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; str1 = &lt;span class=&#34;string&#34;&gt;&amp;quot;杏|石|口|路|81|号&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr1 = str1.split(&lt;span class=&#34;string&#34;&gt;&amp;quot;|&amp;quot;&lt;/span&gt;);	 &lt;span class=&#34;comment&#34;&gt;//[&amp;quot;杏&amp;quot;, &amp;quot;石&amp;quot;, &amp;quot;口&amp;quot;, &amp;quot;路&amp;quot;, &amp;quot;81&amp;quot;, &amp;quot;号&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;indexOf()&lt;/code&gt;:在父串中首次出现的位置索引，从0开始！没有就返回-1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lastIndexOf()&lt;/code&gt;:倒序查找&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;charAt(index)&lt;/code&gt;:获取指定索引的字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;:转小写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;:转大写&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数组&#34;&gt;数组&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Array (数组)对象用于在单个的变量中存储多个值。数组可存放任意数据类型，并通过索引来访问每个元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数组的声明&#34;&gt;数组的声明&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先声明再赋值:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;声明方式1:var arr = new Array();  // 可根据需要在( )中指定长度&lt;/li&gt;
&lt;li&gt;声明方式2:var arr = [];&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;赋值:数组名[索引] = 值;   // arr[0] = 10;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直接声明并赋值&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;(“值&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;”,,,,,,“值N”);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数组的长度-数组名-length&#34;&gt;数组的长度:&lt;code&gt;数组名.length&lt;/code&gt;&lt;/h3&gt;
&lt;h3 id=&#34;数组的遍历方式&#34;&gt;数组的遍历方式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;循环遍历&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.write(arr[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直接输出数组名&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.write(arr);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数组的常用方法&#34;&gt;数组的常用方法:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;join()&lt;/code&gt;: 用指定的元素对数组进行分割。&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.write(arr.join(“*”));  &lt;span class=&#34;comment&#34;&gt;// 10*20*30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;indexOf&lt;/code&gt;:搜索一个指定的元素的位置，如未找到返回 -1；&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;30&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr.indexOf(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;//元素10的索引为0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr.indexOf(&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;//元素30未找到，返回-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//注意:数字30和字符串&amp;quot;30&amp;quot;是不同元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;concat()&lt;/code&gt;:把当前的数组 和 另一个数组连接起来，并返回一个新的 数组；&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr1 = [&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr2 = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; newArr = arr1.concat(arr2,&lt;span class=&#34;string&#34;&gt;&amp;quot;再次添加&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(newArr); &lt;span class=&#34;comment&#34;&gt;//[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;,1,2,3,&amp;quot;再次添加&amp;quot;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr1); &lt;span class=&#34;comment&#34;&gt;//[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;push()&lt;/code&gt;:向数组的末尾添加若干元素&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pop(): 把数组的最后一个元素删除掉&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.push(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr);&lt;span class=&#34;comment&#34;&gt;//[1,2,&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.pop(); &lt;span class=&#34;comment&#34;&gt;//返回“b”;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;//[1,2,&amp;quot;a&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.pop();  &lt;span class=&#34;comment&#34;&gt;//连续3次pop，空数组继续pop不会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;//打印[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unshift()&lt;/code&gt;: 向数组前面添加若干元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;shift()&lt;/code&gt;: 则把数组的第一个元素删除掉&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.unshift(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//返回新长度 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr);&lt;span class=&#34;comment&#34;&gt;//打印[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,1,2]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.shift();&lt;span class=&#34;comment&#34;&gt;//返回&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;//打印[&amp;quot;b&amp;quot;,1,2]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.shift();arr.shift();arr.shift(); &lt;span class=&#34;comment&#34;&gt;//连续3次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;//打印[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.shift(); &lt;span class=&#34;comment&#34;&gt;//空数组继续删除不报错，返回undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;//打印[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt;: 截取数组的部分元素，然后返回一个新的数组&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;e&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr.slice(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;//从索引0开始，到索引3结束，但不包括3:[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr.slice(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;));  &lt;span class=&#34;comment&#34;&gt;//从索引3开始到结束:&amp;quot;d&amp;quot;,&amp;quot;e&amp;quot;,&amp;quot;f&amp;quot;,&amp;quot;g&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果不给slice()传递任何参数，他就会从头到尾截取所有元素。利用这一点，可以很容易的复制一份新的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; aCopy = arr.slice();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(aCopy); &lt;span class=&#34;comment&#34;&gt;//[1,2,3]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sort()&lt;/code&gt;: 可以对当前数组排序&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.sort();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr);&lt;span class=&#34;comment&#34;&gt;//[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reverse()&lt;/code&gt;: 把整个数组的元素给掉个个，也就是反转&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;string&#34;&gt;&amp;quot;one&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;two&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;three&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.reverse();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;//[&amp;quot;three&amp;quot;,&amp;quot;two&amp;quot;,&amp;quot;one&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;join()&lt;/code&gt;: 把数组的每个元素用指定的字符串连接起来，然后新的字符串&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.join(&lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//&amp;quot;a-b-c-1-2-3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;splice()&lt;/code&gt;: 是修改数组的“万能方法”，他可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//splice(索引值，删除数量，&amp;quot;值1&amp;quot;，&amp;quot;值2&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;string&#34;&gt;&amp;quot;苹果&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;橘子&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;香蕉&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;芋头&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;桂圆&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;山楂&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//从索引2开始删除3个元素，然后再添加两个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.splice(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;白梨&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;西瓜&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;苹果&amp;quot;,&amp;quot;橘子&amp;quot;,&amp;quot;白梨&amp;quot;,&amp;quot;西瓜&amp;quot;,&amp;quot;山楂&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//只删除，不添加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.splice(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);  &lt;span class=&#34;comment&#34;&gt;//&amp;quot;白梨&amp;quot;,&amp;quot;西瓜&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr); &lt;span class=&#34;comment&#34;&gt;//&amp;quot;苹果&amp;quot;,&amp;quot;橘子&amp;quot;,&amp;quot;山楂&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//只添加，不删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.splice(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;白梨&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;西瓜&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(arr);&lt;span class=&#34;comment&#34;&gt;// &amp;quot;苹果&amp;quot;,&amp;quot;橘子&amp;quot;,&amp;quot;白梨&amp;quot;,&amp;quot;西瓜&amp;quot;,&amp;quot;山楂&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Math的常用方法&#34;&gt;Math的常用方法&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;abs()&lt;/td&gt;
&lt;td&gt;绝对值 （去除正负）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;random()&lt;/td&gt;
&lt;td&gt;随机数，0-1之间的随机数，1不会出现&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;round()&lt;/td&gt;
&lt;td&gt;四舍五入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;floor(x)&lt;/td&gt;
&lt;td&gt;下舍入(向下取整)–地板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ceil(x)&lt;/td&gt;
&lt;td&gt;上舍入(向上取整)–天花板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max(x,y)&lt;/td&gt;
&lt;td&gt;x 和 y 中的最大值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;min(x,y)&lt;/td&gt;
&lt;td&gt;x 和 y 中的最小值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cos(x)&lt;/td&gt;
&lt;td&gt;的余弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sin(x)&lt;/td&gt;
&lt;td&gt;x的正弦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sqrt(x)&lt;/td&gt;
&lt;td&gt;返回x的平方根&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pow(3,4)&lt;/td&gt;
&lt;td&gt;返回3的4次方&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Math函数的属性：&lt;code&gt;PI&lt;/code&gt;  圆周率。使用方法：&lt;code&gt;Math.PI&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;全局对象中的常用方法（强制转换）&#34;&gt;全局对象中的常用方法（强制转换）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;isNaN()&lt;/code&gt;:判断是否是数字，不是数字返回true，是数字返回false;(&lt;code&gt;isNaN:is not a number&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eval()&lt;/code&gt;把字符串里面的数字进行计算&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parseFloat()&lt;/code&gt;把字符串转换为小数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parseInt()&lt;/code&gt;把字符串转换为整数&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;函数的定义、调用&#34;&gt;函数的定义、调用&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;函数的概念&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;函数是ECMAScript的核心，包含一些代码，只有被调用以后才会执行。函数是对象数据类型的一种。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;定义函数的语法：&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; 函数名(&lt;span class=&#34;params&#34;&gt;参数&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;函数体(也称为：方法体);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数的调用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;函数名(参数值);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;正则表达式&#34;&gt;正则表达式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;正则表达式的概念&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;RegExp&lt;/code&gt;（正则表达式）是一个对象，就是用一个“字符串”来描述一个特征，然后去校验另一个“字符串”是否符合该特征。主要实现对&lt;code&gt;字符串的匹配&lt;/code&gt;、&lt;code&gt;分割&lt;/code&gt;、&lt;code&gt;查找&lt;/code&gt;、&lt;code&gt;替换&lt;/code&gt;、&lt;code&gt;校验&lt;/code&gt;等操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;元字符&lt;br&gt;
&lt;strong&gt;正则模式当中的元字符，通常都具有特殊的含义&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;元字符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;a-z&lt;/td&gt;
&lt;td&gt;英文小写字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A-Z&lt;/td&gt;
&lt;td&gt;英文大写字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0-9&lt;/td&gt;
&lt;td&gt;数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r  \n \t&lt;/td&gt;
&lt;td&gt;非打印字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;数字，相当于0-9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;\d  取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;字母 数字 下划线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;\w  取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;空白字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;非空白字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[  ]&lt;/td&gt;
&lt;td&gt;任意匹配[ ]中单个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;匹配任意字符（换行符除外）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n}&lt;/td&gt;
&lt;td&gt;匹配n次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n,}&lt;/td&gt;
&lt;td&gt;匹配至少n次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n,m}&lt;/td&gt;
&lt;td&gt;至少n次，最多m次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;匹配0个或多个，相当于{0,}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;匹配1个或多个，相当于{1,}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;匹配0个或1个，相当于{0,1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;1、匹配正则开头  2、放在[^]，内容取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;匹配正则结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;匹配 | 两侧任选其一&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(  )&lt;/td&gt;
&lt;td&gt;1.  分组 2.子存储&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;**注意：**正则需要转义字符： ( ) { } ? * + . [ ] \ / ^ $ |&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;正则的定义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方式1：var re = /正则内容/;&lt;/li&gt;
&lt;li&gt;方式2：var re = new RegExp(正则内容);&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;test方法：检索字符串中指定的值。返回 true 或 false。&lt;/p&gt;
 &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt;  txt=&lt;span class=&#34;string&#34;&gt;&amp;quot;this a cat, that a dog&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt;  re=&lt;span class=&#34;regexp&#34;&gt;/cat/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(re.test(txt));   &lt;span class=&#34;comment&#34;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/1caa3095.html</guid>
            <title>JavaScript基础①-概述及语法基础</title>
            <link>https://miraitowa.cc/post/1caa3095.html</link>
            <category>js</category>
            <category>js基础</category>
            <pubDate>Sat, 13 Mar 2021 10:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;JavaScript的组成&#34;&gt;JavaScript的组成:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;核心(ECMAScript):由Ecma国际(前身为欧洲计算机制造商协会，European Computer Manufacturers Association)通过ECMA-262标准化的脚本程序设计语言。&lt;/li&gt;
&lt;li&gt;文档对象模型(Document Object Model，简称DOM):是W3C组织推荐的处理可扩展置标语言的标准编程接口。描述了访问网页元素的方法和接口。&lt;/li&gt;
&lt;li&gt;浏览器对象模型(Browser Object Model，简称BOM):描述了与浏览器进行交互的方法和接口。
&lt;ul&gt;
&lt;li&gt;基本语法:
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;注意行尾加分号;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;换行书写;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;单行注释:// 或者 多行注释/**/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;补充:页面输出语句;&lt;br&gt;
&lt;code&gt;alert(&amp;quot;Hello Word&amp;quot;); //系统弹窗&lt;/code&gt;&lt;br&gt;
&lt;code&gt;console.log(); //输出在控制台&lt;/code&gt;&lt;br&gt;
&lt;code&gt;document.write(); //打印在页面&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;JavaScript的常用运算符&#34;&gt;JavaScript的常用运算符:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;算术运算符:&lt;code&gt;+&lt;/code&gt;  &lt;code&gt;-&lt;/code&gt;  &lt;code&gt;*&lt;/code&gt;  &lt;code&gt;/&lt;/code&gt;  &lt;code&gt;%&lt;/code&gt;  &lt;code&gt;++&lt;/code&gt;  &lt;code&gt;--&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;🐔  i++ 与 ++i 的区别:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果单独在一行，都自增1；&lt;/li&gt;
&lt;li&gt;当与其他运算符或者输出语句一起使用时:
&lt;ul&gt;
&lt;li&gt;i++:先赋值使用，再运算；(&lt;code&gt;++在后，先用后加&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;++i:先运算，再赋值使用；(&lt;code&gt;++在前，先加后用&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比较运算符:&lt;code&gt;&amp;gt;&lt;/code&gt;  &lt;code&gt;&amp;gt;=&lt;/code&gt;  &lt;code&gt;&amp;lt;&lt;/code&gt;  &lt;code&gt;&amp;lt;=&lt;/code&gt;  &lt;code&gt;==&lt;/code&gt;  &lt;code&gt;!=&lt;/code&gt; ,返回结果:&lt;code&gt;真或假(true/false)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逻辑运算符:&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;  &lt;code&gt;||&lt;/code&gt;  &lt;code&gt;!&lt;/code&gt; (&lt;code&gt;与&lt;/code&gt;、&lt;code&gt;或&lt;/code&gt;、&lt;code&gt;非&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;amp;&amp;amp;:&lt;code&gt;两边为真，才为真&lt;/code&gt;。&lt;code&gt;其中一个为假，即为假&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;||:&lt;code&gt;其中一个为真，即为真&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;！:&lt;code&gt;真假互换&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;条件运算符:(表达式1  ?  表达式2  : 表达式3)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断“表达式1”的结果是否为真，&lt;/li&gt;
&lt;li&gt;如果为真则执行“表达式2”，否则执行“表达式3”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;条件分支语句-if，switch&#34;&gt;条件分支语句:if，switch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;if语句:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;语法:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(条件表达式)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;if…else语句:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;语法:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(条件表达式)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多分支if语句(if…else if 语句):&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;语法:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(条件表达式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(条件表达式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块N;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;switch语句:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt;(表达式)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; 值&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; 值N:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块N;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语句块;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;循环语句&#34;&gt;循环语句:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;while&lt;/li&gt;
&lt;li&gt;do…while&lt;/li&gt;
&lt;li&gt;for&lt;/li&gt;
&lt;li&gt;for in&lt;/li&gt;
&lt;li&gt;break和continue的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;while循环:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(条件表达式)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;循环语句;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;执行流程:判断条件表达式是否为真，如果为真，就执行后面的循环语句。然后再次判断，直到条件为假时，跳出while循环。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;do…while循环:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;循环语句;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(条件表达式);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;执行流程:先执行语句，再判断条件，如果为真就继续执行循环语句。否则跳出循环。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;while与do-while的区别:&lt;br&gt;
while先判断再执行，&lt;br&gt;
do-while先执行后判断(至少执行一次)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;for循环:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(初始表达式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; 条件表达式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;; 迭代表达式&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;循环语句&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;for in (对象篇详解)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;break:跳出循环&lt;br&gt;
continue: 跳过该次循环，执行后面的循环			(例:test07)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;关键词与变量命名&#34;&gt;关键词与变量命名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ECMAScript 关键字的完整列表:&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;break&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;else&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;new&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;finally&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;return&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;void&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;catch&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;for&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;switch&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;while&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;continue&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;function&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;with&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;default&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;if&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;throw&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;let&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;try&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;do&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;instanceof&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;typeof&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;定义变量&lt;br&gt;
变量variable(临时存储的容器)&lt;br&gt;
//变量:临时存储信息的容器，可以复用&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;var name; //变量的声明，并起名叫 name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;name = “tt”; //为变量赋值,&lt;code&gt;=&lt;/code&gt; 等号:是把右侧的值，&lt;code&gt;赋值&lt;/code&gt;给左侧的变量名；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变量名大小写敏感&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;var Name=“小花”;&lt;/li&gt;
&lt;li&gt;var name=“小毛”;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;命名规范:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;必须以字母、数字、下划线或$组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开头不能是数字。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不能是JavaScript的关键字。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意:由于JavaScript是弱类型语言，所以在定义变量时，可以省略var，但是不建议使用。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;JavaScript中的两种数据类型&#34;&gt;JavaScript中的两种数据类型&lt;/h2&gt;
&lt;h3 id=&#34;原始类型-查看数据类型，使用-typeof&#34;&gt;原始类型:(查看数据类型，使用:  typeof )&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;boolean&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;undefined:变量只定义不赋值，就是undefined&lt;/li&gt;
&lt;li&gt;null:表示一个空对象，“什么都没有”的意思，用来表示无值，就像一个占位符&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;对象类型-object&#34;&gt;对象类型(object)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;对象的定义为:“无序属性的集合，其属性可以包含基本值、对象、或者函数”。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;js中内置了如下的对象:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;对象&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Object&lt;/td&gt;
&lt;td&gt;是所有JS对象的超类(基类)，JS中的所有对象都是继承自Object对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;数组对象–定义数组属性和方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;数字对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boolean&lt;/td&gt;
&lt;td&gt;布尔对象–布尔值相关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Error&lt;/td&gt;
&lt;td&gt;错误对象–处理程序错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Function&lt;/td&gt;
&lt;td&gt;函数对象–定义函数属性和方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Math&lt;/td&gt;
&lt;td&gt;数学对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Date&lt;/td&gt;
&lt;td&gt;日期对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RegExp&lt;/td&gt;
&lt;td&gt;对象正则表达式对象–定义文本匹配与筛选规则&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;字符串对象–定义字符串属性和方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/1158b6cc.html</guid>
            <title>移动设备(手机)网站界面设计</title>
            <link>https://miraitowa.cc/post/1158b6cc.html</link>
            <category>前端设计</category>
            <category>移动端网站设计</category>
            <pubDate>Thu, 04 Mar 2021 04:59:28 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;手机网站的概念及趋势&#34;&gt;手机网站的概念及趋势&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;定义：手机网站是指特地用于手机阅读的网站。这种网站经过以文字信息和简单的图片信息为主。随着向手机智能化方向开展，装置了操作系统和阅读器的手机的功用和电脑是很类似的，但假如仅仅运用手机阅读器看PC网站的话，那还是很费劲的。运用这种手机能够经过GPRS上网可阅读几乎一切的www网站。由于手机的屏幕尺寸和CPU处置才能有限，特地为方便手机浏览而进行优化的网站更为便于用户阅读。目前使用手机上网的用户超过台式电脑用户，手机成为我国网民的第一大上网终端。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;前端开发中PC端和移动端网站的区别&#34;&gt;前端开发中PC端和移动端网站的区别&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;PC端在开发过程中考虑的是浏览器兼容性，移动端开发中考虑的是手机兼容性问题，做移动端开发，更多考虑的是手机分辨率的自适应和不同手机操作系统的略微差异化；&lt;/li&gt;
&lt;li&gt;在部分事件的处理上，移动端自然是偏向于触屏的，另外包括移动端弹出的手机键盘该如何处理，这样的问题在PC上肯定不会遇到，但在移动端，如果你没有经验，处理起来是相当麻烦的；&lt;/li&gt;
&lt;li&gt;布局上，移动端开发是要做到页面布局自适应的，而PC端页面布局的比例会相对固定；&lt;/li&gt;
&lt;li&gt;在动画效果处理上，PC端要考虑IE的兼容性，通常用JS做动画的通用性会好一些，但相比CSS3却牺牲了较大的性能，而在手机端，如果要做一些动画、特效等，第一选择肯定是CSS3，既简单，效率又高。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;设计手机网站的注意事项：&#34;&gt;设计手机网站的注意事项：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;明确需要展示的主题和内容；&lt;/li&gt;
&lt;li&gt;尽量符合滑动屏幕的方式；&lt;/li&gt;
&lt;li&gt;特别注意与PC端网站导航功能的区别；&lt;/li&gt;
&lt;li&gt;考虑多种手机界面和浏览器的兼容；&lt;/li&gt;
&lt;li&gt;尽量减少用户文字输入操作；&lt;/li&gt;
&lt;li&gt;开始设计时就要为以后的推广和宣传做预估；&lt;/li&gt;
&lt;li&gt;兼顾非触摸屏幕的设计；&lt;/li&gt;
&lt;li&gt;简化页面内容；&lt;/li&gt;
&lt;li&gt;注重网页产品和服务的展示；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;手机网站的布局-使用媒体查询-原始方式&#34;&gt;手机网站的布局:(使用媒体查询(原始方式))&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@media 在设计响应式页面时是非常有用的。可以针对不同的屏幕尺寸设置不同的样式。使用该方式设计的页面，可以根据浏览器的大小实时地进行高度和宽度的渲染。&lt;/li&gt;
&lt;li&gt;基本格式如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;@media&lt;/span&gt;  mediatype  &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt;|&lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt;|&lt;span class=&#34;keyword&#34;&gt;only&lt;/span&gt;  (mediad feature)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// CSS代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;碎碎念：这个东西好麻烦的感觉~&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/5ff78d08.html</guid>
            <title>互联网单页设计与推广</title>
            <link>https://miraitowa.cc/post/5ff78d08.html</link>
            <category>前端设计</category>
            <category>单页设计与推广</category>
            <category>SEO优化</category>
            <pubDate>Wed, 03 Mar 2021 04:59:28 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;竞价单页&#34;&gt;竞价单页&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;概念：竞价单页通常都是由一个或几个HTML页面组成，由于HTML对搜索引擎的友好性，通过用来百度、google、搜狗等竞价排名来推广产品，由于大多数的竞价页面都是由一个页面组成，因此取名“竞价单页”。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;竞价产品以其高额的回报率成为近年来“网赚”的新宠，越来越多的“网客”加入竞价的行业，竞价产品的诞生不仅带动了多种行业的发展，更是营销方式的革新，更加促进了电子商务的发展。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原理功效：主要介绍竞价产品&lt;code&gt;用途&lt;/code&gt;、&lt;code&gt;功效&lt;/code&gt;、&lt;code&gt;产地&lt;/code&gt;，比如减肥的主要说该减肥产品的主要原材料，减肥效果等。&lt;/li&gt;
&lt;li&gt;媒体报道：竞价产品一般都&lt;code&gt;主要靠媒体推广&lt;/code&gt;等来营销的，引用主要媒体的视频、文章等来达到推广营销的目的，比如央视网、搜狐、新浪、网易、腾讯等主要媒体。&lt;/li&gt;
&lt;li&gt;用户体验：以&lt;code&gt;图文并茂&lt;/code&gt;的形式列举用户使用后的体验和感受，达到增强产品说服力的效果。&lt;/li&gt;
&lt;li&gt;在线问答：&lt;code&gt;主要采取一问一答的方式&lt;/code&gt;，网站客服在线回答用户的提问，主要包括产品功效、使用方法、付款方式、使用后的感受、产品运送方式等。&lt;/li&gt;
&lt;li&gt;在线订单：&lt;code&gt;在线订单系统是竞价网页的核心部分，也是它的“灵魂”&lt;/code&gt; ，主要用来在线收集用户的信息包括收货人名、购买产品类型、联系方式、收货地址、付款方式等。通过收集这些信息后以邮件方式或保存到数据库等方式供网站卖家查看、发货，达到营销的目的。&lt;/li&gt;
&lt;li&gt;发货记录：发货记录也是竞价单页网站的主要组成部分，通常以循环滚动的方式不间断滚动展示发货信息，达到展示产品销售火爆的景象。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;SEO&#34;&gt;SEO&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SEO优化英文全称：&lt;code&gt;Search Engine Optimization&lt;/code&gt;，中文翻译为：&lt;code&gt;搜索引擎优化&lt;/code&gt;，缩写为：&lt;code&gt;SEO&lt;/code&gt;。关于SEO优化的简单的定义，就是从自然搜索结果获得网站流量的技术和过程，从而改进网站在搜索引擎中自然排名的一种技术。在搜索引擎里面搜索一个关键词，出现在搜索的结果中排名靠前的，广告除外，其余就是靠着SEO优化进行的。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;SEO优化的范围&#34;&gt;SEO优化的范围&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SEO优化业务做的工作有网站结构优化、关键词竞争研究，如关键词选择、竞争程度判断、关键词拓展、关键词分布等、还有外链建设、页面优化，而目标都是为了提高网站的流量，即网站访问量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;据调查显示，有88% 的用户会利用搜索引擎服务查找需要的信息，而这之中有大部分的用户都会直接在搜索结果的自然排名的第一页信息中，查找选择所需要的信息，所以，如果网站的排名越靠前，那么被访问的几率也就越高，所能带来的业务也就越多。因此网站需要运用SEO进行网站优化，提高网站的排名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;内部优化&#34;&gt;内部优化&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;meta标签优化：如：title, keywords, description等优化。&lt;/li&gt;
&lt;li&gt;内部链接优化：如：相关性链接tag标签，锚文本链接，导航链接，图片链接等。&lt;/li&gt;
&lt;li&gt;网站内容更新（主要是文字及内容的更新）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;外部优化&#34;&gt;外部优化&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;外部链接类别：友情链接、博客、论坛、新闻，贴吧、知道、百科等。&lt;/li&gt;
&lt;li&gt;外链运营：每天增加一定数量的外部链接，使关键字排名稳步提升。&lt;/li&gt;
&lt;li&gt;外链选择：与相关度比较高的网站交换友情链接。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;SEO优化&#34;&gt;SEO优化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SEO优化的&lt;code&gt;最终目的就是为了获得搜索流量&lt;/code&gt;，因此关键词研究，针对有真实用户在搜索的关键词进行优化、文案写作等十分重要。SEO优化就是针对搜索引擎的搜索规则进行网站的优化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SEO优化一般包括&lt;code&gt;站内优化&lt;/code&gt;与&lt;code&gt;站外优化&lt;/code&gt;两部分，站内优化是指网站本身的内容：更新的速度与质量、网站结构：标题标签，关键词，锚文本的分布、链接等。站外优化主要指外部链接。同时用户还可以结合一些SEO工具来帮助更好地进行网站的优化工作，例如：排名查询，权重查询，收录查询等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;SEO优化的走向&#34;&gt;SEO优化的走向&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;流量最终的流向是网站，所以SEO最终目标是帮助网站完成流量转化，比如访问用户通过网站直接带来业务，提高公司业务、广告点击或品牌建设，提升知名度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;互联网站-网页-的权重排名&#34;&gt;互联网站(网页)的权重排名&lt;/h3&gt;
&lt;h4 id=&#34;网站权重&#34;&gt;网站权重&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;搜索引擎给网站(网页)赋予一定的权威值，对网站(网页)进行权威的评估评价。&lt;/li&gt;
&lt;li&gt;一个网站的权重值越高，在搜索引擎所占的分量越大，排名就越靠前。提高网站的权重值，不但有利于网站（网页）在搜索引擎的排名更靠前，还能提高整站的流量，增加网站的可信度。权重就是网站在SE0中的重要性和权威性。英文名称：Page Strength。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;需要注意的是：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;权重不等于排名。&lt;/li&gt;
&lt;li&gt;权重对排名有非常大的影响。&lt;/li&gt;
&lt;li&gt;整站权重的提高有利于内页的排名。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;权重的影响因素&#34;&gt;权重的影响因素&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;网站架构：（优质的网页通常为扁平式包含：主页、栏目页、内容页等，同时包含tag标签，含留言、评论、文章搜索等功能）&lt;/li&gt;
&lt;li&gt;域名类型：（gov, edu结尾类型的网站自身权重较高，可信度高。其次是com, net, org结尾的网站。注册域名越久权重越高）&lt;/li&gt;
&lt;li&gt;导入链接：（关联信较高的友情链接，博客，论坛等）&lt;/li&gt;
&lt;li&gt;网站内容：（优质的原创内容可以给搜索引擎提供新内容。如果不能原创，也尽量避免原封不动的照搬照抄）&lt;/li&gt;
&lt;li&gt;收录数量&lt;/li&gt;
&lt;li&gt;关键词排名&lt;/li&gt;
&lt;li&gt;更新频率&lt;/li&gt;
&lt;li&gt;开放式目录：（被大型公共网页目录：如DMOZ, YAHOO等收录）&lt;/li&gt;
&lt;li&gt;内容页：是否与主页和网站主题有较为紧密的联系。也会参考：专业性和权威性。&lt;/li&gt;
&lt;li&gt;网站的诚信度&lt;/li&gt;
&lt;li&gt;网站服务器：（稳定的服务器）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;单页推广技巧概述&#34;&gt;单页推广技巧概述&lt;/h2&gt;
&lt;h3 id=&#34;head区的组成&#34;&gt;head区的组成&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;标题(title):在搜索引擎中抓取的第一行内容就是title，地址栏上方的网页名称中显示的也是title，title就相当于一个人的名字，其重要性不言而喻。&lt;br&gt;
title书写的注意事项：简洁精炼（10个字内为佳），包含网页核心关键词，且尽量靠前。如：“二手车行业领导者”和“领导买卖二手车行业”在搜索结果中的效果是不一样的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;meta 属性中的关键词(keywords)&lt;br&gt;
关键字必须在内容中找到响应的匹配，才有利于排名。&lt;br&gt;
如：“二手房中介”网站常用的关键词是：“二手房买卖”，“二手房交易”，“二手房过户”，“二手房贷款”等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;描述(description)描述的内容应该与正文的内容相关。浏览者可以在搜索结果中阅读相关的描述。控制长度，字符数（含空格）不宜超过200字。可以对title和keywords的内容进行补充。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他meta标签属性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;none：表示里面的文本内容或链接不可被查询。&lt;/li&gt;
&lt;li&gt;from：表示页面上的链接可被查询。&lt;/li&gt;
&lt;li&gt;nofrom：表示页面上的链接不可被查询。&lt;/li&gt;
&lt;li&gt;author：涉及关于作者版权的搜索。&lt;/li&gt;
&lt;li&gt;content部分常用命令：index、noindex、follow、nofollow，noarchive命令间以英文的“,”分隔。&lt;/li&gt;
&lt;li&gt;index：允许查询、抓取本页。&lt;/li&gt;
&lt;li&gt;follow：允许跟踪链接。&lt;/li&gt;
&lt;li&gt;noindex：禁止查询、抓取本页。&lt;/li&gt;
&lt;li&gt;nofollow：禁止跟踪链接。&lt;/li&gt;
&lt;li&gt;noarchive：防止搜索引擎显示网站快照（网页快照）。&lt;/li&gt;
&lt;li&gt;网站快照：搜索引擎在收录网页时，对网页进行备份，保存在自己（搜索引擎）的服务器缓存里，当用户在搜索引擎中点击“网页快照”链接时，搜索引擎将Spider系统当时所抓取并保存的网页内容展现出来，称为“网页快照”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;例如:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;robots&amp;quot; content=&amp;quot;noindex&amp;quot;&amp;gt;&lt;/code&gt;作用：告诉搜索引擎不要抓取该页，如果该页已经收录，那么删除已经收录页面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;robots&amp;quot; content=&amp;quot;nofollow&amp;quot;&amp;gt;&lt;/code&gt;作用：告诉搜索引擎不要跟踪该页所有链接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;robots&amp;quot; content=&amp;quot;noarchive&amp;quot;&amp;gt;&lt;/code&gt;作用：告诉搜索引擎不要显示网站快照。&lt;br&gt;
注意：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;meta name=&amp;quot;robots&amp;quot;&lt;/code&gt;指所有的搜索引擎的，也可以指定某一个搜索引擎，例如：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;meta name=&amp;quot;Googlebot&amp;quot;&lt;/code&gt;(谷歌蜘蛛)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;meta name=&amp;quot;Baiduspider&amp;quot;&lt;/code&gt;(百度蜘蛛)&lt;br&gt;
另外：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a rel=“nofollow” href=“url”&amp;gt;&lt;/code&gt;作用：告诉搜索引擎不要抓取该链接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;补充：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;dns-prefetch&amp;quot; href=&amp;quot;//&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用原理：在DNS 解析和浏览器加载原理上，解析单个域名同样的地点加上高并发（极端）难免有点堵塞，再加上部分浏览器对相同域名去DNS 解析的时候会异步，导致速度下降，虽然这些速度上咱们可能看不上，但蚊子再小也是肉，优化就讲究极致。DNS Prefetch 是一种DNS 预解析技术，当你浏览网页时，浏览器会在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行DNS 的解析，减少用户等待时间，提高用户体验。“//” 是为了适配  https 和 http。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;renderer&amp;quot; content=&amp;quot;浏览器内核类型&amp;quot;&amp;gt;&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于告诉浏览器默认以哪种浏览器内核浏览当前网站，浏览器就会在读取到这个属性后，会立马切换到对应的模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;content的取值主要有三种浏览器内核，分别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;webkit：使用的webkit内核，属于极速模式，常用于网站的高速浏览，网站打开速度快，但某些网站在极速模式下可能出现兼容性问题，显示不正常； 如：&lt;code&gt;&amp;lt;meta name=&amp;quot;renderer&amp;quot; content=&amp;quot;webkit&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ie-comp：使用IE兼容模式，就是用IE6，IE7，IE8的渲染模式，网站打开速度比极速模式略低，但网页兼容性问题较少，常用于网银、交易支付、旧版网站；如：&lt;code&gt;&amp;lt;meta name=&amp;quot;renderer&amp;quot; content=&amp;quot;ie-comp&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ie-stand：属于IE标准模式，网站会使用IE9及以上版本的渲染方式渲染，支持硬件加速、支持IE9及以上版本全新的脚本渲染引擎；如：&lt;code&gt;&amp;lt;meta name=&amp;quot;renderer&amp;quot; content=&amp;quot;ie-stand&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;width：控制 viewport 的大小，可以指定的一个值，比如 800，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）&lt;/li&gt;
&lt;li&gt;height：和 width 相对应，指定高度&lt;/li&gt;
&lt;li&gt;initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例&lt;/li&gt;
&lt;li&gt;maximum-scale：允许用户缩放到的最大比例&lt;/li&gt;
&lt;li&gt;minimum-scale：允许用户缩放到的最小比例&lt;/li&gt;
&lt;li&gt;user-scalable：用户是否可以手动缩放&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;head区的标签注意事项&#34;&gt;head区的标签注意事项&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;title长度：搜索引擎识别20个汉字或60个英文字母内，超出部分会被丢弃。&lt;/li&gt;
&lt;li&gt;title的重要性：网页搜索中最重要的判断依据，是最重要的标签。&lt;/li&gt;
&lt;li&gt;描述和关键词：在搜索结果中展示，其内容关系到能否吸引用户。&lt;/li&gt;
&lt;li&gt;如何写好描述：真实，不浮夸，实事求是，有显著特点。&lt;/li&gt;
&lt;li&gt;关键字标记的禁忌：重复堆砌相同的关键词可以让排名适当靠前，但是也容易受到搜索引擎的惩罚。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;body区的组成&#34;&gt;body区的组成&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;h标题标签：h1~h6代表段落标题权重的依次递减。&lt;br&gt;
&lt;strong&gt;如：h1代表网页的主标题，h2代表分段内容的标题，以此类推。即使h6也有一定的权重比，只是比较弱。&lt;/strong&gt;&lt;br&gt;
例如：（权重依次递减）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;h1：亚洲旅游&lt;br&gt;
h2：东亚旅游，东南亚旅游&lt;br&gt;
h3：中国旅游，日本旅游，马来西亚旅游&lt;br&gt;
…&lt;br&gt;
h6：金殿旅游，云南野生动物园旅游&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标签的理解：每种标签都有对应的功能，如p标签不能做标题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网页的命名：拼音或者英文单词的命名方式更容易被搜索引擎认可。如：qiche.html  与  123456.html对比，前者更容易被识别，因为其名称本身就是对网站的描述。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图片优化：alt=“”,如果图片无法加载，则显示友好提示。title=“”，利于搜索引擎识别。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;header&amp;gt;&amp;lt;footer&amp;gt;&lt;/code&gt;标签的使用，利于搜索引擎自动识别页面内容和布局。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;基本格式如下：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;区域:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置合适的&lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;：20个汉字以内&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;&amp;lt;meta name=&amp;quot;keywords&amp;quot; content=&amp;quot;&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;&amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果网站需要，可以写作者：&lt;code&gt;&amp;lt;meta name=&amp;quot;author&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;版权设置&lt;code&gt;&amp;lt;meta name=&amp;quot;copyright&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;区域：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;页面主体设置&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;标签：主标题&lt;/li&gt;
&lt;li&gt;设置&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;标签：副标题&lt;/li&gt;
&lt;li&gt;图片的优化：&lt;code&gt;alt=&amp;quot;&amp;quot;， title=&amp;quot;&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;header&amp;gt;,&amp;lt;footer&amp;gt;&lt;/code&gt;标签的使用&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;网页命名：&lt;br&gt;
尽量使用拼音或英文，利于搜索引擎识别和网页展示：xxx.html&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/90f8904c.html</guid>
            <title>互联网网店设计</title>
            <link>https://miraitowa.cc/post/90f8904c.html</link>
            <category>前端设计</category>
            <category>网店设计</category>
            <pubDate>Tue, 02 Mar 2021 04:59:28 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;店铺装修基础知识&#34;&gt;店铺装修基础知识&lt;/h2&gt;
&lt;h3 id=&#34;了解店铺装修的重要性&#34;&gt;了解店铺装修的重要性:&lt;/h3&gt;
&lt;p&gt;网店装修一直是个非常热门的话题，开网店，也要把门面装修得漂亮点才能吸引客人。店铺的第一印象对于人的认知会产生相当的影响，对于网络店铺来说，装修更是店铺兴旺的制胜法宝，任何物品的任何信息我们都只能通过眼球来获得，所以更要在美观上下一些功夫。&lt;/p&gt;
&lt;h3 id=&#34;做好店铺装修前的准备&#34;&gt;做好店铺装修前的准备:&lt;/h3&gt;
&lt;p&gt;所谓网店装修，就是将原本平淡无奇的页面通过各种图片、动画、文字等元素进行美化，从而使网店变得更生动、形象。在对店铺进行装修前，首先应该做足准备，这样才可以达到事半功倍的效果。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主营商品的性质&lt;/li&gt;
&lt;li&gt;合适的装修风格&lt;/li&gt;
&lt;li&gt;收集装修素材&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;商品图片的处理与美化&#34;&gt;商品图片的处理与美化&lt;/h2&gt;
&lt;p&gt;一张好图胜千言，在网络上，买家不能看到商品实物，都是通过图片才能了解商品，因此，如果商品图片制作精良、漂亮，必然会引起买家兴趣。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;调整商品图片的大小&lt;/li&gt;
&lt;li&gt;商品图片的裁剪&lt;/li&gt;
&lt;li&gt;图片的亮度、对比度与颜色调整&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;店铺公告模板设计&#34;&gt;店铺公告模板设计&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;网店公告显示在普通店铺右上角，店主可以在此发布一些促销、公告信息。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;店铺公告的设计原则与要求&#34;&gt;店铺公告的设计原则与要求&lt;/h3&gt;
&lt;p&gt;店铺公告信息是用来显示店铺的动态信息、商品促销、服务信息等内容的，普通店铺公告的位置一般显示在店面的右上角；普通店铺公告的位置、尺寸和播放方式都是固定设置的，只能在有限区域内发挥作用。&lt;/p&gt;
&lt;h3 id=&#34;定义公告中的文字样式&#34;&gt;定义公告中的文字样式&lt;/h3&gt;
&lt;p&gt;默认情况下，淘宝店铺公告中的文字是黑色的宋体字，可以通过编辑器的方式来对公告文字的字体、字号、颜色等进行设置。&lt;/p&gt;
&lt;h3 id=&#34;美观的图片形式公告栏的设计&#34;&gt;美观的图片形式公告栏的设计&lt;/h3&gt;
&lt;p&gt;除了简单的文字公告形式外，淘宝店铺还支持使用图片形式的公告，就是将公告制作成一张图片。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/db7dc918.html</guid>
            <title>网站整站交互设计</title>
            <link>https://miraitowa.cc/post/db7dc918.html</link>
            <category>前端设计</category>
            <category>整站交互设计</category>
            <pubDate>Mon, 01 Mar 2021 04:59:28 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;网站设计方法&#34;&gt;网站设计方法&lt;/h2&gt;
&lt;p&gt;简介: 网站设计要能充分吸引访问者的注意力，让访问者产生视觉上的愉悦感。因此在网页创作的时候就必须将网站的整体设计与网页设计的相关原理紧密结合起来。网站设计是将策划案中的内容、网站的主题模式，以及结合自己的认识通过艺术的手法表现出来；而网页制作通常就是将网页设计师所设计出来的设计稿，按照W3C规范用html（标准通用标记语言下的一个应用）将其制作成网页格式。&lt;/p&gt;
&lt;h3 id=&#34;设计方法&#34;&gt;设计方法:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;确定网站目标&lt;/li&gt;
&lt;li&gt;满足用户的设计心理&lt;/li&gt;
&lt;li&gt;熟悉和识别模式&lt;/li&gt;
&lt;li&gt;网络上的品牌符号要统一&lt;/li&gt;
&lt;li&gt;心里激发&lt;/li&gt;
&lt;li&gt;运用图像强化概念&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;网站的可用性&#34;&gt;网站的可用性&lt;/h2&gt;
&lt;h3 id=&#34;如何判断网页的可用性？&#34;&gt;如何判断网页的可用性？&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;页面链接的点击率&lt;/code&gt;是判断网站价值的一个指标。因此，可用性测试是否有助于提高网页价值的一个重要判断标准就是：在同等条件下，根据测试结果改进后的网页上的点击率是否也得到相应提升。不可否认，有时网站的商业目的与改善用户体验的测试目的并不完全一致，在项目中我们努力在两者之间寻找平衡点，希望在提升网站用户体验的同时，符合网站给出的判断标准。&lt;/p&gt;
&lt;h3 id=&#34;如何让提升网站可用性&#34;&gt;如何让提升网站可用性?&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;寻找用户能够理解的方式来表达信息&lt;/li&gt;
&lt;li&gt;让用户能够按照自己认为正确的方式操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;影响网站可用性的关键因素&#34;&gt;影响网站可用性的关键因素:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;是否直观。衡量新用户是否能不费力的了解该网站的主旨、内容、使用流程;&lt;/li&gt;
&lt;li&gt;是否高效。衡量老用户（明确知道如何使用）使用该网站达成目标的过程是否高效;&lt;/li&gt;
&lt;li&gt;是否容易记忆。衡量老用户（之前仅使用过一次）是否需要在第二次使用时重复探索、学习网站使用流程;&lt;/li&gt;
&lt;li&gt;用户误操作的频率和严重性。衡量用户使用过程中是否经常误操作、这些误操作影响是否严重、用户如何自行纠正这些错误;&lt;/li&gt;
&lt;li&gt;是否满意。用户的主观感受如何，是否对使用该网站达成目标的过程感到满意;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常见网站的错误设计&#34;&gt;常见网站的错误设计&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;搜索引擎不友好&lt;/li&gt;
&lt;li&gt;使用PDF文件做为在线阅读&lt;/li&gt;
&lt;li&gt;未改变已访问链接的颜色&lt;/li&gt;
&lt;li&gt;文字未排版&lt;/li&gt;
&lt;li&gt;固定字体大小&lt;/li&gt;
&lt;li&gt;网页标题搜索引擎不友好&lt;/li&gt;
&lt;li&gt;所有的东西看起来都像广告&lt;/li&gt;
&lt;li&gt;违反设计惯例&lt;/li&gt;
&lt;li&gt;打开新的浏览器窗口&lt;/li&gt;
&lt;li&gt;不回答用户的提问&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/68889350.html</guid>
            <title>yarn和npm常用命令</title>
            <link>https://miraitowa.cc/post/68889350.html</link>
            <category>npm</category>
            <category>yarn</category>
            <pubDate>Fri, 22 Jan 2021 16:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;yarn和npm常用命令对比&#34;&gt;yarn和npm常用命令对比&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;npm&lt;/th&gt;
&lt;th&gt;yarn&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;安装&lt;/td&gt;
&lt;td&gt;npm install/i&lt;/td&gt;
&lt;td&gt;yarn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;卸载&lt;/td&gt;
&lt;td&gt;npm unintall/un xxx&lt;/td&gt;
&lt;td&gt;yarn remove xxx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全局安装&lt;/td&gt;
&lt;td&gt;npm install/i xxx --global/-g&lt;/td&gt;
&lt;td&gt;yarn global add xxx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;安装包&lt;/td&gt;
&lt;td&gt;npm install/i xxx --save/-S&lt;/td&gt;
&lt;td&gt;yarn add xxx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;开发模式安装包&lt;/td&gt;
&lt;td&gt;npm install/i xxx --save-dev/-D&lt;/td&gt;
&lt;td&gt;yarn add xxx -dev/-D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;更新&lt;/td&gt;
&lt;td&gt;npm update&lt;/td&gt;
&lt;td&gt;yarn upgrade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全局更新&lt;/td&gt;
&lt;td&gt;npm update -g&lt;/td&gt;
&lt;td&gt;yarn global upgrade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;清除缓存&lt;/td&gt;
&lt;td&gt;npm cache clean&lt;/td&gt;
&lt;td&gt;yarn cache clean&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;重装&lt;/td&gt;
&lt;td&gt;rm -rf node_modules &amp;amp;&amp;amp; npm install&lt;/td&gt;
&lt;td&gt;yarn upgrade&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;npm-install-常用命令&#34;&gt;npm install 常用命令&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;npm install moduleName&lt;/td&gt;
&lt;td&gt;安装模块到项目目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;npm install -g moduleName&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-g&lt;/code&gt; 意思是将模块安装到全局&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;npm install --save moduleName&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--save&lt;/code&gt; 的意思是将模块安装到项目目录下，并在package文件的&lt;code&gt;dependencies&lt;/code&gt;节点写入依赖。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;npm install --save-dev moduleName&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--save-dev&lt;/code&gt; 的意思是将模块安装到项目目录下，并在package文件的&lt;code&gt;devDependencies&lt;/code&gt;节点写入依赖。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://miraitowa.cc/post/643e8ed0.html</guid>
            <title>常用的Git操作</title>
            <link>https://miraitowa.cc/post/643e8ed0.html</link>
            <category>Git</category>
            <category>Github</category>
            <pubDate>Thu, 21 Jan 2021 05:06:41 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;Git-Push&#34;&gt;Git Push&lt;/h2&gt;
&lt;div class=&#34;tabs&#34; id=&#34;test1&#34;&gt;&lt;ul class=&#34;nav-tabs&#34;&gt;&lt;li class=&#34;tab active&#34;&gt;&lt;button type=&#34;button&#34; data-href=&#34;#test1-1&#34;&gt;方法一&lt;/button&gt;&lt;/li&gt;&lt;li class=&#34;tab&#34;&gt;&lt;button type=&#34;button&#34; data-href=&#34;#test1-2&#34;&gt;方法二&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&#34;tab-contents&#34;&gt;&lt;div class=&#34;tab-item-content active&#34; id=&#34;test1-1&#34;&gt;&lt;p&gt;&lt;strong&gt;此方法适用于已经在Github创建好仓库&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把Github上面的仓库克隆到本地&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/Github用户名/仓库名.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;进入项目文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; 项目名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;把文件夹下面的文件都添加进来&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;提交信息&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git commit &lt;span class=&#34;literal&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xxxxxx&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;把本地仓库push到github上面，此步骤需要输入帐号和密码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push &lt;span class=&#34;literal&#34;&gt;-u&lt;/span&gt; origin master(&lt;span class=&#34;number&#34;&gt;2020&lt;/span&gt; 年 &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; 月 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; 日起，在 Github 平台上创建的所有新的源代码仓库将默认命名为 &lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt; ，不再是原先的 &lt;span class=&#34;string&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&#34;button&#34; class=&#34;tab-to-top&#34; aria-label=&#34;scroll to top&#34;&gt;&lt;i class=&#34;fas fa-arrow-up&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&#34;tab-item-content&#34; id=&#34;test1-2&#34;&gt;&lt;p&gt;&lt;strong&gt;本方法需要先创建一个本地的版本库&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过命令行在桌面新建一个test文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mkdar test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;通过init把这个文件夹变成Git可管理的仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;把你的项目粘贴到这个本地Git仓库里面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;粘贴后你可以通过&lt;code&gt;git status&lt;/code&gt;来查看你当前的状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把刚才复制过来的项目全部添加到仓库&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;提交到本地缓冲(注释？)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git commit &lt;span class=&#34;literal&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xxxxxx&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在Github上创建好Git仓库&lt;/li&gt;
&lt;li&gt;将本地仓库的代码提交远程github的仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin https://github.com/Github用户名/仓库名.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;将远程仓库的代码 push到master分支上&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;- 由于新建的远程仓库是空的  所以要加上&lt;span class=&#34;literal&#34;&gt;-u&lt;/span&gt;这个参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push &lt;span class=&#34;literal&#34;&gt;-u&lt;/span&gt; origin master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- 等远程仓库里面有了内容之后，下次再从本地库上传内容的时候不需要了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&#34;button&#34; class=&#34;tab-to-top&#34; aria-label=&#34;scroll to top&#34;&gt;&lt;i class=&#34;fas fa-arrow-up&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&#34;Git-版本发布&#34;&gt;Git-版本发布&lt;/h2&gt;
&lt;div class=&#34;tabs&#34; id=&#34;&#34;&gt;&lt;ul class=&#34;nav-tabs&#34;&gt;&lt;li class=&#34;tab active&#34;&gt;&lt;button type=&#34;button&#34; data-href=&#34;#-1&#34;&gt;Git-版本发布&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&#34;tab-contents&#34;&gt;&lt;div class=&#34;tab-item-content active&#34; id=&#34;-1&#34;&gt;&lt;ul&gt;
&lt;li&gt;创建Github一个版本发布&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git tag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git tag &lt;span class=&#34;literal&#34;&gt;-a&lt;/span&gt; v1.&lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;xxxxxx&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;查看某标签的信息&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git show v1.&lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;推送到远程库&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin v1.&lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;删除标签&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git tag &lt;span class=&#34;literal&#34;&gt;-d&lt;/span&gt; v1.&lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&#34;button&#34; class=&#34;tab-to-top&#34; aria-label=&#34;scroll to top&#34;&gt;&lt;i class=&#34;fas fa-arrow-up&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; ]]></description>
        </item>
    </channel>
</rss>
