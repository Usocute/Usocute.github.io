<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>移动设备(手机)网站界面设计</title>
      <link href="post/1158b6cc.html"/>
      <url>post/1158b6cc.html</url>
      
        <content type="html"><![CDATA[<h2 id="手机网站的概念及趋势">手机网站的概念及趋势</h2><ul><li>定义：手机网站是指特地用于手机阅读的网站。这种网站经过以文字信息和简单的图片信息为主。随着向手机智能化方向开展，装置了操作系统和阅读器的手机的功用和电脑是很类似的，但假如仅仅运用手机阅读器看PC网站的话，那还是很费劲的。运用这种手机能够经过GPRS上网可阅读几乎一切的www网站。由于手机的屏幕尺寸和CPU处置才能有限，特地为方便手机浏览而进行优化的网站更为便于用户阅读。目前使用手机上网的用户超过台式电脑用户，手机成为我国网民的第一大上网终端。</li></ul><h2 id="前端开发中PC端和移动端网站的区别">前端开发中PC端和移动端网站的区别</h2><ol><li>PC端在开发过程中考虑的是浏览器兼容性，移动端开发中考虑的是手机兼容性问题，做移动端开发，更多考虑的是手机分辨率的自适应和不同手机操作系统的略微差异化；</li><li>在部分事件的处理上，移动端自然是偏向于触屏的，另外包括移动端弹出的手机键盘该如何处理，这样的问题在PC上肯定不会遇到，但在移动端，如果你没有经验，处理起来是相当麻烦的；</li><li>布局上，移动端开发是要做到页面布局自适应的，而PC端页面布局的比例会相对固定；</li><li>在动画效果处理上，PC端要考虑IE的兼容性，通常用JS做动画的通用性会好一些，但相比CSS3却牺牲了较大的性能，而在手机端，如果要做一些动画、特效等，第一选择肯定是CSS3，既简单，效率又高。</li></ol><h2 id="设计手机网站的注意事项：">设计手机网站的注意事项：</h2><ol><li>明确需要展示的主题和内容；</li><li>尽量符合滑动屏幕的方式；</li><li>特别注意与PC端网站导航功能的区别；</li><li>考虑多种手机界面和浏览器的兼容；</li><li>尽量减少用户文字输入操作；</li><li>开始设计时就要为以后的推广和宣传做预估；</li><li>兼顾非触摸屏幕的设计；</li><li>简化页面内容；</li><li>注重网页产品和服务的展示；</li></ol><h2 id="手机网站的布局-使用媒体查询-原始方式">手机网站的布局:(使用媒体查询(原始方式))</h2><ul><li>@media 在设计响应式页面时是非常有用的。可以针对不同的屏幕尺寸设置不同的样式。使用该方式设计的页面，可以根据浏览器的大小实时地进行高度和宽度的渲染。</li><li>基本格式如下：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span>  mediatype  <span class="keyword">and</span>|<span class="keyword">not</span>|<span class="keyword">only</span>  (mediad feature)</span><br><span class="line">&#123;</span><br><span class="line">// CSS代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>碎碎念：这个东西好麻烦的感觉~</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> 前端设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端设计 </tag>
            
            <tag> 移动端网站设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>互联网单页设计与推广</title>
      <link href="post/5ff78d08.html"/>
      <url>post/5ff78d08.html</url>
      
        <content type="html"><![CDATA[<h2 id="竞价单页">竞价单页</h2><p><strong>概念：竞价单页通常都是由一个或几个HTML页面组成，由于HTML对搜索引擎的友好性，通过用来百度、google、搜狗等竞价排名来推广产品，由于大多数的竞价页面都是由一个页面组成，因此取名“竞价单页”。</strong></p><p>竞价产品以其高额的回报率成为近年来“网赚”的新宠，越来越多的“网客”加入竞价的行业，竞价产品的诞生不仅带动了多种行业的发展，更是营销方式的革新，更加促进了电子商务的发展。</p><ol><li>原理功效：主要介绍竞价产品<code>用途</code>、<code>功效</code>、<code>产地</code>，比如减肥的主要说该减肥产品的主要原材料，减肥效果等。</li><li>媒体报道：竞价产品一般都<code>主要靠媒体推广</code>等来营销的，引用主要媒体的视频、文章等来达到推广营销的目的，比如央视网、搜狐、新浪、网易、腾讯等主要媒体。</li><li>用户体验：以<code>图文并茂</code>的形式列举用户使用后的体验和感受，达到增强产品说服力的效果。</li><li>在线问答：<code>主要采取一问一答的方式</code>，网站客服在线回答用户的提问，主要包括产品功效、使用方法、付款方式、使用后的感受、产品运送方式等。</li><li>在线订单：<code>在线订单系统是竞价网页的核心部分，也是它的“灵魂”</code> ，主要用来在线收集用户的信息包括收货人名、购买产品类型、联系方式、收货地址、付款方式等。通过收集这些信息后以邮件方式或保存到数据库等方式供网站卖家查看、发货，达到营销的目的。</li><li>发货记录：发货记录也是竞价单页网站的主要组成部分，通常以循环滚动的方式不间断滚动展示发货信息，达到展示产品销售火爆的景象。</li></ol><h2 id="SEO">SEO</h2><p><strong>SEO优化英文全称：<code>Search Engine Optimization</code>，中文翻译为：<code>搜索引擎优化</code>，缩写为：<code>SEO</code>。关于SEO优化的简单的定义，就是从自然搜索结果获得网站流量的技术和过程，从而改进网站在搜索引擎中自然排名的一种技术。在搜索引擎里面搜索一个关键词，出现在搜索的结果中排名靠前的，广告除外，其余就是靠着SEO优化进行的。</strong></p><h3 id="SEO优化的范围">SEO优化的范围</h3><ul><li><p>SEO优化业务做的工作有网站结构优化、关键词竞争研究，如关键词选择、竞争程度判断、关键词拓展、关键词分布等、还有外链建设、页面优化，而目标都是为了提高网站的流量，即网站访问量。</p></li><li><p>据调查显示，有88% 的用户会利用搜索引擎服务查找需要的信息，而这之中有大部分的用户都会直接在搜索结果的自然排名的第一页信息中，查找选择所需要的信息，所以，如果网站的排名越靠前，那么被访问的几率也就越高，所能带来的业务也就越多。因此网站需要运用SEO进行网站优化，提高网站的排名。</p></li></ul><h4 id="内部优化">内部优化</h4><ol><li>meta标签优化：如：title, keywords, description等优化。</li><li>内部链接优化：如：相关性链接tag标签，锚文本链接，导航链接，图片链接等。</li><li>网站内容更新（主要是文字及内容的更新）</li></ol><h4 id="外部优化">外部优化</h4><ol><li>外部链接类别：友情链接、博客、论坛、新闻，贴吧、知道、百科等。</li><li>外链运营：每天增加一定数量的外部链接，使关键字排名稳步提升。</li><li>外链选择：与相关度比较高的网站交换友情链接。</li></ol><h3 id="SEO优化">SEO优化</h3><ul><li><p>SEO优化的<code>最终目的就是为了获得搜索流量</code>，因此关键词研究，针对有真实用户在搜索的关键词进行优化、文案写作等十分重要。SEO优化就是针对搜索引擎的搜索规则进行网站的优化。</p></li><li><p>SEO优化一般包括<code>站内优化</code>与<code>站外优化</code>两部分，站内优化是指网站本身的内容：更新的速度与质量、网站结构：标题标签，关键词，锚文本的分布、链接等。站外优化主要指外部链接。同时用户还可以结合一些SEO工具来帮助更好地进行网站的优化工作，例如：排名查询，权重查询，收录查询等。</p></li></ul><h3 id="SEO优化的走向">SEO优化的走向</h3><ul><li>流量最终的流向是网站，所以SEO最终目标是帮助网站完成流量转化，比如访问用户通过网站直接带来业务，提高公司业务、广告点击或品牌建设，提升知名度。</li></ul><h3 id="互联网站-网页-的权重排名">互联网站(网页)的权重排名</h3><h4 id="网站权重">网站权重</h4><ul><li>搜索引擎给网站(网页)赋予一定的权威值，对网站(网页)进行权威的评估评价。</li><li>一个网站的权重值越高，在搜索引擎所占的分量越大，排名就越靠前。提高网站的权重值，不但有利于网站（网页）在搜索引擎的排名更靠前，还能提高整站的流量，增加网站的可信度。权重就是网站在SE0中的重要性和权威性。英文名称：Page Strength。</li></ul><p><strong>需要注意的是：</strong></p><ol><li>权重不等于排名。</li><li>权重对排名有非常大的影响。</li><li>整站权重的提高有利于内页的排名。</li></ol><h4 id="权重的影响因素">权重的影响因素</h4><ol><li>网站架构：（优质的网页通常为扁平式包含：主页、栏目页、内容页等，同时包含tag标签，含留言、评论、文章搜索等功能）</li><li>域名类型：（gov, edu结尾类型的网站自身权重较高，可信度高。其次是com, net, org结尾的网站。注册域名越久权重越高）</li><li>导入链接：（关联信较高的友情链接，博客，论坛等）</li><li>网站内容：（优质的原创内容可以给搜索引擎提供新内容。如果不能原创，也尽量避免原封不动的照搬照抄）</li><li>收录数量</li><li>关键词排名</li><li>更新频率</li><li>开放式目录：（被大型公共网页目录：如DMOZ, YAHOO等收录）</li><li>内容页：是否与主页和网站主题有较为紧密的联系。也会参考：专业性和权威性。</li><li>网站的诚信度</li><li>网站服务器：（稳定的服务器）</li></ol><h2 id="单页推广技巧概述">单页推广技巧概述</h2><h3 id="head区的组成">head区的组成</h3><ol><li><p>标题(title):在搜索引擎中抓取的第一行内容就是title，地址栏上方的网页名称中显示的也是title，title就相当于一个人的名字，其重要性不言而喻。<br>title书写的注意事项：简洁精炼（10个字内为佳），包含网页核心关键词，且尽量靠前。如：“二手车行业领导者”和“领导买卖二手车行业”在搜索结果中的效果是不一样的。</p></li><li><p>meta 属性中的关键词(keywords)<br>关键字必须在内容中找到响应的匹配，才有利于排名。<br>如：“二手房中介”网站常用的关键词是：“二手房买卖”，“二手房交易”，“二手房过户”，“二手房贷款”等。</p></li><li><p>描述(description)描述的内容应该与正文的内容相关。浏览者可以在搜索结果中阅读相关的描述。控制长度，字符数（含空格）不宜超过200字。可以对title和keywords的内容进行补充。</p></li><li><p>其他meta标签属性:</p><ul><li>none：表示里面的文本内容或链接不可被查询。</li><li>from：表示页面上的链接可被查询。</li><li>nofrom：表示页面上的链接不可被查询。</li><li>author：涉及关于作者版权的搜索。</li><li>content部分常用命令：index、noindex、follow、nofollow，noarchive命令间以英文的“,”分隔。</li><li>index：允许查询、抓取本页。</li><li>follow：允许跟踪链接。</li><li>noindex：禁止查询、抓取本页。</li><li>nofollow：禁止跟踪链接。</li><li>noarchive：防止搜索引擎显示网站快照（网页快照）。</li><li>网站快照：搜索引擎在收录网页时，对网页进行备份，保存在自己（搜索引擎）的服务器缓存里，当用户在搜索引擎中点击“网页快照”链接时，搜索引擎将Spider系统当时所抓取并保存的网页内容展现出来，称为“网页快照”。</li></ul></li></ol><p><strong>例如:</strong></p><ol><li><code>&lt;meta name=&quot;robots&quot; content=&quot;noindex&quot;&gt;</code>作用：告诉搜索引擎不要抓取该页，如果该页已经收录，那么删除已经收录页面。</li><li><code>&lt;meta name=&quot;robots&quot; content=&quot;nofollow&quot;&gt;</code>作用：告诉搜索引擎不要跟踪该页所有链接。</li><li><code>&lt;meta name=&quot;robots&quot; content=&quot;noarchive&quot;&gt;</code>作用：告诉搜索引擎不要显示网站快照。<br>注意：<ul><li><code>meta name=&quot;robots&quot;</code>指所有的搜索引擎的，也可以指定某一个搜索引擎，例如：</li><li><code>meta name=&quot;Googlebot&quot;</code>(谷歌蜘蛛)</li><li><code>meta name=&quot;Baiduspider&quot;</code>(百度蜘蛛)<br>另外：</li><li><code>&lt;a rel=“nofollow” href=“url”&gt;</code>作用：告诉搜索引擎不要抓取该链接。</li></ul></li></ol><p><strong>补充：</strong></p><ol><li><p><code>&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//&quot;&gt;</code></p><ul><li>使用原理：在DNS 解析和浏览器加载原理上，解析单个域名同样的地点加上高并发（极端）难免有点堵塞，再加上部分浏览器对相同域名去DNS 解析的时候会异步，导致速度下降，虽然这些速度上咱们可能看不上，但蚊子再小也是肉，优化就讲究极致。DNS Prefetch 是一种DNS 预解析技术，当你浏览网页时，浏览器会在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行DNS 的解析，减少用户等待时间，提高用户体验。“//” 是为了适配  https 和 http。</li></ul></li><li><p><code>&lt;meta name=&quot;renderer&quot; content=&quot;浏览器内核类型&quot;&gt;</code>：</p><ul><li>用于告诉浏览器默认以哪种浏览器内核浏览当前网站，浏览器就会在读取到这个属性后，会立马切换到对应的模式。</li></ul></li><li><p>content的取值主要有三种浏览器内核，分别是：</p><ol><li>webkit：使用的webkit内核，属于极速模式，常用于网站的高速浏览，网站打开速度快，但某些网站在极速模式下可能出现兼容性问题，显示不正常； 如：<code>&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</code></li><li>ie-comp：使用IE兼容模式，就是用IE6，IE7，IE8的渲染模式，网站打开速度比极速模式略低，但网页兼容性问题较少，常用于网银、交易支付、旧版网站；如：<code>&lt;meta name=&quot;renderer&quot; content=&quot;ie-comp&quot;&gt;</code></li><li>ie-stand：属于IE标准模式，网站会使用IE9及以上版本的渲染方式渲染，支持硬件加速、支持IE9及以上版本全新的脚本渲染引擎；如：<code>&lt;meta name=&quot;renderer&quot; content=&quot;ie-stand&quot;&gt;</code></li></ol></li><li><p><code>&lt;meta name=&quot;viewport&quot; content=&quot;&quot;&gt;</code></p><ol><li>width：控制 viewport 的大小，可以指定的一个值，比如 800，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）</li><li>height：和 width 相对应，指定高度</li><li>initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例</li><li>maximum-scale：允许用户缩放到的最大比例</li><li>minimum-scale：允许用户缩放到的最小比例</li><li>user-scalable：用户是否可以手动缩放</li></ol></li></ol><h3 id="head区的标签注意事项">head区的标签注意事项</h3><ol><li>title长度：搜索引擎识别20个汉字或60个英文字母内，超出部分会被丢弃。</li><li>title的重要性：网页搜索中最重要的判断依据，是最重要的标签。</li><li>描述和关键词：在搜索结果中展示，其内容关系到能否吸引用户。</li><li>如何写好描述：真实，不浮夸，实事求是，有显著特点。</li><li>关键字标记的禁忌：重复堆砌相同的关键词可以让排名适当靠前，但是也容易受到搜索引擎的惩罚。</li></ol><h3 id="body区的组成">body区的组成</h3><ol><li><p>h标题标签：h1~h6代表段落标题权重的依次递减。<br><strong>如：h1代表网页的主标题，h2代表分段内容的标题，以此类推。即使h6也有一定的权重比，只是比较弱。</strong><br>例如：（权重依次递减）</p><blockquote><p>h1：亚洲旅游<br>h2：东亚旅游，东南亚旅游<br>h3：中国旅游，日本旅游，马来西亚旅游<br>…<br>h6：金殿旅游，云南野生动物园旅游</p></blockquote></li><li><p>标签的理解：每种标签都有对应的功能，如p标签不能做标题。</p></li><li><p>网页的命名：拼音或者英文单词的命名方式更容易被搜索引擎认可。如：qiche.html  与  123456.html对比，前者更容易被识别，因为其名称本身就是对网站的描述。</p></li><li><p>图片优化：alt=“”,如果图片无法加载，则显示友好提示。title=“”，利于搜索引擎识别。</p></li><li><p><code>&lt;header&gt;&lt;footer&gt;</code>标签的使用，利于搜索引擎自动识别页面内容和布局。</p></li></ol><p><strong>基本格式如下：</strong></p><blockquote><p><code>&lt;head&gt;</code>区域:</p><ol><li>设置合适的<code>&lt;title&gt;</code>：20个汉字以内</li><li>设置<code>&lt;meta name=&quot;keywords&quot; content=&quot;&quot;/&gt;</code></li><li>设置<code>&lt;meta name=&quot;description&quot; content=&quot;&quot;/&gt;</code></li><li>如果网站需要，可以写作者：<code>&lt;meta name=&quot;author&quot; content=&quot;&quot; /&gt;</code></li><li>版权设置<code>&lt;meta name=&quot;copyright&quot; content=&quot;&quot; /&gt;</code></li></ol></blockquote><blockquote><p><code>&lt;body&gt;</code>区域：</p><ol><li>页面主体设置<code>&lt;h1&gt;</code>标签：主标题</li><li>设置<code>&lt;h2&gt;</code>标签：副标题</li><li>图片的优化：<code>alt=&quot;&quot;， title=&quot;&quot;</code></li><li><code>&lt;header&gt;,&lt;footer&gt;</code>标签的使用</li></ol></blockquote><blockquote><p>网页命名：<br>尽量使用拼音或英文，利于搜索引擎识别和网页展示：xxx.html</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> 前端设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端设计 </tag>
            
            <tag> 单页设计与推广 </tag>
            
            <tag> SEO优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>互联网网店设计</title>
      <link href="post/90f8904c.html"/>
      <url>post/90f8904c.html</url>
      
        <content type="html"><![CDATA[<h2 id="店铺装修基础知识">店铺装修基础知识</h2><h3 id="了解店铺装修的重要性">了解店铺装修的重要性:</h3><p>网店装修一直是个非常热门的话题，开网店，也要把门面装修得漂亮点才能吸引客人。店铺的第一印象对于人的认知会产生相当的影响，对于网络店铺来说，装修更是店铺兴旺的制胜法宝，任何物品的任何信息我们都只能通过眼球来获得，所以更要在美观上下一些功夫。</p><h3 id="做好店铺装修前的准备">做好店铺装修前的准备:</h3><p>所谓网店装修，就是将原本平淡无奇的页面通过各种图片、动画、文字等元素进行美化，从而使网店变得更生动、形象。在对店铺进行装修前，首先应该做足准备，这样才可以达到事半功倍的效果。</p><ol><li>主营商品的性质</li><li>合适的装修风格</li><li>收集装修素材</li></ol><h2 id="商品图片的处理与美化">商品图片的处理与美化</h2><p>一张好图胜千言，在网络上，买家不能看到商品实物，都是通过图片才能了解商品，因此，如果商品图片制作精良、漂亮，必然会引起买家兴趣。</p><ol><li>调整商品图片的大小</li><li>商品图片的裁剪</li><li>图片的亮度、对比度与颜色调整</li></ol><h2 id="店铺公告模板设计">店铺公告模板设计</h2><p><strong>网店公告显示在普通店铺右上角，店主可以在此发布一些促销、公告信息。</strong></p><h3 id="店铺公告的设计原则与要求">店铺公告的设计原则与要求</h3><p>店铺公告信息是用来显示店铺的动态信息、商品促销、服务信息等内容的，普通店铺公告的位置一般显示在店面的右上角；普通店铺公告的位置、尺寸和播放方式都是固定设置的，只能在有限区域内发挥作用。</p><h3 id="定义公告中的文字样式">定义公告中的文字样式</h3><p>默认情况下，淘宝店铺公告中的文字是黑色的宋体字，可以通过编辑器的方式来对公告文字的字体、字号、颜色等进行设置。</p><h3 id="美观的图片形式公告栏的设计">美观的图片形式公告栏的设计</h3><p>除了简单的文字公告形式外，淘宝店铺还支持使用图片形式的公告，就是将公告制作成一张图片。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> 前端设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端设计 </tag>
            
            <tag> 网店设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站整站交互设计</title>
      <link href="post/db7dc918.html"/>
      <url>post/db7dc918.html</url>
      
        <content type="html"><![CDATA[<h2 id="网站设计方法">网站设计方法</h2><p>简介: 网站设计要能充分吸引访问者的注意力，让访问者产生视觉上的愉悦感。因此在网页创作的时候就必须将网站的整体设计与网页设计的相关原理紧密结合起来。网站设计是将策划案中的内容、网站的主题模式，以及结合自己的认识通过艺术的手法表现出来；而网页制作通常就是将网页设计师所设计出来的设计稿，按照W3C规范用html（标准通用标记语言下的一个应用）将其制作成网页格式。</p><h3 id="设计方法">设计方法:</h3><ol><li>确定网站目标</li><li>满足用户的设计心理</li><li>熟悉和识别模式</li><li>网络上的品牌符号要统一</li><li>心里激发</li><li>运用图像强化概念</li></ol><h2 id="网站的可用性">网站的可用性</h2><h3 id="如何判断网页的可用性？">如何判断网页的可用性？</h3><p><code>页面链接的点击率</code>是判断网站价值的一个指标。因此，可用性测试是否有助于提高网页价值的一个重要判断标准就是：在同等条件下，根据测试结果改进后的网页上的点击率是否也得到相应提升。不可否认，有时网站的商业目的与改善用户体验的测试目的并不完全一致，在项目中我们努力在两者之间寻找平衡点，希望在提升网站用户体验的同时，符合网站给出的判断标准。</p><h3 id="如何让提升网站可用性">如何让提升网站可用性?</h3><ol><li>寻找用户能够理解的方式来表达信息</li><li>让用户能够按照自己认为正确的方式操作</li></ol><h3 id="影响网站可用性的关键因素">影响网站可用性的关键因素:</h3><ol><li>是否直观。衡量新用户是否能不费力的了解该网站的主旨、内容、使用流程;</li><li>是否高效。衡量老用户（明确知道如何使用）使用该网站达成目标的过程是否高效;</li><li>是否容易记忆。衡量老用户（之前仅使用过一次）是否需要在第二次使用时重复探索、学习网站使用流程;</li><li>用户误操作的频率和严重性。衡量用户使用过程中是否经常误操作、这些误操作影响是否严重、用户如何自行纠正这些错误;</li><li>是否满意。用户的主观感受如何，是否对使用该网站达成目标的过程感到满意;</li></ol><h2 id="常见网站的错误设计">常见网站的错误设计</h2><ol><li>搜索引擎不友好</li><li>使用PDF文件做为在线阅读</li><li>未改变已访问链接的颜色</li><li>文字未排版</li><li>固定字体大小</li><li>网页标题搜索引擎不友好</li><li>所有的东西看起来都像广告</li><li>违反设计惯例</li><li>打开新的浏览器窗口</li><li>不回答用户的提问</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> 前端设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端设计 </tag>
            
            <tag> 整站交互设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yarn和npm常用命令</title>
      <link href="post/68889350.html"/>
      <url>post/68889350.html</url>
      
        <content type="html"><![CDATA[<h2 id="yarn和npm常用命令对比">yarn和npm常用命令对比</h2><table><thead><tr><th>作用</th><th>npm</th><th>yarn</th></tr></thead><tbody><tr><td>安装</td><td>npm install/i</td><td>yarn</td></tr><tr><td>卸载</td><td>npm unintall/un xxx</td><td>yarn remove xxx</td></tr><tr><td>全局安装</td><td>npm install/i xxx --global/-g</td><td>yarn global add xxx</td></tr><tr><td>安装包</td><td>npm install/i xxx --save/-S</td><td>yarn add xxx</td></tr><tr><td>开发模式安装包</td><td>npm install/i xxx --save-dev/-D</td><td>yarn add xxx -dev/-D</td></tr><tr><td>更新</td><td>npm update</td><td>yarn upgrade</td></tr><tr><td>全局更新</td><td>npm update -g</td><td>yarn global upgrade</td></tr><tr><td>清除缓存</td><td>npm cache clean</td><td>yarn cache clean</td></tr><tr><td>重装</td><td>rm -rf node_modules &amp;&amp; npm install</td><td>yarn upgrade</td></tr></tbody></table><h2 id="npm-install-常用命令">npm install 常用命令</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>npm install moduleName</td><td>安装模块到项目目录</td></tr><tr><td>npm install -g moduleName</td><td><code>-g</code> 意思是将模块安装到全局</td></tr><tr><td>npm install --save moduleName</td><td><code>--save</code> 的意思是将模块安装到项目目录下，并在package文件的<code>dependencies</code>节点写入依赖。</td></tr><tr><td>npm install --save-dev moduleName</td><td><code>--save-dev</code> 的意思是将模块安装到项目目录下，并在package文件的<code>devDependencies</code>节点写入依赖。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> NPM/YARN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的Git操作</title>
      <link href="post/643e8ed0.html"/>
      <url>post/643e8ed0.html</url>
      
        <content type="html"><![CDATA[<h2 id="Git-Push">Git Push</h2><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">方法一</button></li><li class="tab"><button type="button" data-href="#test1-2">方法二</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>此方法适用于已经在Github创建好仓库</strong></p><ul><li>把Github上面的仓库克隆到本地</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Github用户名/仓库名.git</span><br></pre></td></tr></table></figure><ul><li>进入项目文件夹</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 项目名</span><br></pre></td></tr></table></figure><ul><li>把文件夹下面的文件都添加进来</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><ul><li>提交信息</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit <span class="literal">-m</span> <span class="string">&quot;xxxxxx&quot;</span></span><br></pre></td></tr></table></figure><ul><li>把本地仓库push到github上面，此步骤需要输入帐号和密码</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push <span class="literal">-u</span> origin master(<span class="number">2020</span> 年 <span class="number">10</span> 月 <span class="number">1</span> 日起，在 Github 平台上创建的所有新的源代码仓库将默认命名为 <span class="string">&quot;main&quot;</span> ，不再是原先的 <span class="string">&quot;master&quot;</span> )</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>本方法需要先创建一个本地的版本库</strong></p><ul><li>通过命令行在桌面新建一个test文件夹</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdar test</span><br></pre></td></tr></table></figure><ul><li>通过init把这个文件夹变成Git可管理的仓库</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><ul><li><p>把你的项目粘贴到这个本地Git仓库里面</p></li><li><p>粘贴后你可以通过<code>git status</code>来查看你当前的状态</p></li><li><p>把刚才复制过来的项目全部添加到仓库</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><ul><li>提交到本地缓冲(注释？)</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit <span class="literal">-m</span> <span class="string">&quot;xxxxxx&quot;</span></span><br></pre></td></tr></table></figure><ul><li>在Github上创建好Git仓库</li><li>将本地仓库的代码提交远程github的仓库</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/Github用户名/仓库名.git</span><br></pre></td></tr></table></figure><ul><li>将远程仓库的代码 push到master分支上</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 由于新建的远程仓库是空的  所以要加上<span class="literal">-u</span>这个参数</span><br><span class="line">git push <span class="literal">-u</span> origin master</span><br><span class="line"></span><br><span class="line">- 等远程仓库里面有了内容之后，下次再从本地库上传内容的时候不需要了</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Git-版本发布">Git-版本发布</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">Git-版本发布</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><ul><li>创建Github一个版本发布</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br><span class="line">git tag <span class="literal">-a</span> v1.<span class="number">0.0</span> <span class="literal">-m</span> <span class="string">&quot;xxxxxx&quot;</span></span><br></pre></td></tr></table></figure><ul><li>查看某标签的信息</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show v1.<span class="number">0.0</span></span><br></pre></td></tr></table></figure><ul><li>推送到远程库</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin v1.<span class="number">0.0</span></span><br></pre></td></tr></table></figure><ul><li>删除标签</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag <span class="literal">-d</span> v1.<span class="number">0.0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> Git/SVN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在昆明，没有一个矮子能笑着走出地铁</title>
      <link href="post/20d94337.html"/>
      <url>post/20d94337.html</url>
      
        <content type="html"><![CDATA[<div class="note warning flat"><p>长图预警 长图预警 长图预警</p></div><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img1.jpg" alt="img1"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img2.jpg" alt="img2"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img3.jpg" alt="img3"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img4.jpg" alt="img4"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img5.jpg" alt="img5"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img6.jpg" alt="img6"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img7.jpg" alt="img7"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img8.jpg" alt="img8"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img9.jpg" alt="img9"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img10.jpg" alt="img10"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img11.jpg" alt="img11"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img12.jpg" alt="img12"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img13.jpg" alt="img13"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img14.jpg" alt="img14"><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-kunming-subway-img15.jpg" alt="img15"></p><div class="note danger flat"><p>图源网络</p></div>]]></content>
      
      
      <categories>
          
          <category> 事件簿 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 昆明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly主题魔改记录</title>
      <link href="post/68a0812f.html"/>
      <url>post/68a0812f.html</url>
      
        <content type="html"><![CDATA[<h2 id="取其精华">取其精华</h2><p><strong>2021-01-20</strong></p><ul><li>基于<a href="https://www.antmoe.com/posts/a811d614/index.html">butterfly主题优雅魔改系列</a>进行精简,去除自己不需要的功能。</li></ul><hr><h2 id="首页置顶轮播">首页置顶轮播</h2><table><thead><tr><th style="text-align:left">时间</th><th style="text-align:left">2020-01-18</th></tr></thead><tbody><tr><td style="text-align:left"><strong>作者</strong></td><td style="text-align:left"><strong><a href="https://akilar.top/">Akilarの糖果屋</a></strong></td></tr><tr><td style="text-align:left"><strong>链接</strong></td><td style="text-align:left"><a href="https://akilar.top/posts/8e1264d1/"><strong>首页置顶轮播图</strong></a></td></tr></tbody></table><h2 id="留言板动态弹出信封样式">留言板动态弹出信封样式</h2><table><thead><tr><th style="text-align:left"><strong>时间</strong></th><th style="text-align:left"><strong>2020-01-17</strong></th></tr></thead><tbody><tr><td style="text-align:left"><strong>作者</strong></td><td style="text-align:left"><strong><a href="https://akilar.top/">Akilarの糖果屋</a></strong></td></tr><tr><td style="text-align:left"><strong>链接</strong></td><td style="text-align:left"><strong><a href="https://akilar.top/posts/f99b208/#%E7%95%99%E8%A8%80%E6%9D%BF%E5%8A%A8%E6%80%81%E5%BC%B9%E5%87%BA%E4%BF%A1%E5%B0%81%E6%A0%B7%E5%BC%8F">留言板动态弹出信封样式</a></strong></td></tr></tbody></table><h2 id="butterfly主题优雅魔改系列">butterfly主题优雅魔改系列</h2><table><thead><tr><th style="text-align:left"><strong>时间</strong></th><th style="text-align:left"><strong>2020-01-04</strong></th></tr></thead><tbody><tr><td style="text-align:left"><strong>作者</strong></td><td style="text-align:left"><strong><a href="https://www.antmoe.com/">小康（Dreamy.TZK）</a></strong></td></tr><tr><td style="text-align:left"><strong>链接</strong></td><td style="text-align:left"><strong><a href="https://www.antmoe.com/posts/a811d614/index.html">butterfly主题优雅魔改系列</a></strong></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
            <tag> hexo </tag>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怀念-Mc</title>
      <link href="post/2b43fca2.html"/>
      <url>post/2b43fca2.html</url>
      
        <content type="html"><![CDATA[<p>纪念一下曾经那些无数个孤独生存的日子.</p><p>如今很少有时间能静下心来好好玩一款游戏了。</p><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/1603892818463.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/mc1.png" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/1603892818469.jpg" alt=""></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 往事如烟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> Minecrift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-罗马数字转整数</title>
      <link href="post/fba23db0.html"/>
      <url>post/fba23db0.html</url>
      
        <content type="html"><![CDATA[<h2 id="罗马数字转整数">罗马数字转整数</h2><p><strong>罗马数字包含以下七种字符: <code>I</code>， <code>V</code>， <code>X</code>， <code>L</code>，<code>C</code>，<code>D</code> 和 <code>M</code>。</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符          数值</span><br><span class="line">I             1</span><br><span class="line">V             5</span><br><span class="line">X             10</span><br><span class="line">L             50</span><br><span class="line">C             100</span><br><span class="line">D             500</span><br><span class="line">M             1000</span><br></pre></td></tr></table></figure><p><strong>例如， 罗马数字 <code>2</code> 写做 <code>II</code> ，即为两个并列的 <code>1</code>。<code>12</code> 写做 <code>XII</code> ，即为 <code>X + II</code> 。 <code>27</code> 写做  <code>XXVII</code>, 即为 <code>XX + V + II</code> 。</strong></p><p><strong>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 <code>4</code> 不写做 <code>IIII</code>，而是 <code>IV</code>。数字 <code>1</code> 在数字 <code>5</code> 的左边，所表示的数等于大数 <code>5</code> 减小数 <code>1</code> 得到的数值 <code>4</code> 。同样地，数字 <code>9</code> 表示为 <code>IX</code>。这个特殊的规则只适用于以下六种情况：</strong></p><p><code>I</code> 可以放在 <code>V (5)</code> 和 <code>X (10)</code> 的左边，来表示 <code>4</code> 和 <code>9</code>。<br><code>X</code> 可以放在 <code>L (50)</code> 和 <code>C (100)</code> 的左边，来表示 <code>40</code> 和 <code>90</code>。 <br><code>C</code> 可以放在 <code>D (500)</code> 和 <code>M (1000)</code> 的左边，来表示 <code>400</code>和 <code>900</code>。<br>给定一个罗马数字，将其转换成整数。输入确保在 <code>1</code> 到 <code>3999</code>的范围内。</p><h4 id="示例-1">示例 1:</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;III&quot;</span><br><span class="line">输出: 3</span><br></pre></td></tr></table></figure><h4 id="示例-2">示例 2:</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">输入: &quot;IV&quot;</span></span><br><span class="line"><span class="section">输出: 4</span></span><br></pre></td></tr></table></figure><h4 id="示例-3">示例 3:</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">输入: &quot;IX&quot;</span></span><br><span class="line"><span class="section">输出: 9</span></span><br></pre></td></tr></table></figure><h4 id="示例-4">示例 4:</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: <span class="string">&quot;LVIII&quot;</span></span><br><span class="line">输出: <span class="number">58</span></span><br><span class="line">解释: L = <span class="number">50</span>, V= <span class="number">5</span>, III = <span class="number">3.</span></span><br></pre></td></tr></table></figure><h4 id="示例-5">示例 5:</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: <span class="string">&quot;MCMXCIV&quot;</span></span><br><span class="line">输出: <span class="number">1994</span></span><br><span class="line">解释: M = <span class="number">1000</span>, CM = <span class="number">900</span>, XC = <span class="number">90</span>, IV = <span class="number">4.</span></span><br></pre></td></tr></table></figure><h4 id="提示：">提示：</h4><ul><li>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。</li><li>IC 和 IM 这样的例子并不符合题目要求，<code>49</code> 应该写作 <code>XLIX</code>，<code>999</code> 应该写作 <code>CMXCIX</code> 。</li><li>关于罗马数字的详尽书写规则，可以参考<a href="https://b2b.partcommunity.com/community/knowledge/zh_CN/detail/10753/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97#knowledge_article">罗马数字 - Mathematics</a>。</li></ul><h2 id="解题思路">解题思路</h2><p><strong>仔细分析罗马数字的规律，会发现，罗马字母(<code>XII</code>)正常是从左到右按从大到小排列，当代表小数字(<code>I</code>)的字母在代表大数字的字母(<code>V</code>)左边时，这意味着两个字母代表一个数，而且是大数字减小数字的最终结果（<code>V-I</code>）。</strong></p><p><strong>所以，在做计算时，只需遍历判断下标为<code>i</code>的字母是否大于下标为<code>i+1</code>的字母，如果大于，则相加，如果小于，则需要减去当前这个数。</strong></p><h4 id="代码">代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">s</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> romanToInt = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = &#123;</span><br><span class="line">        <span class="string">&#x27;I&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;V&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">&#x27;X&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;L&#x27;</span>: <span class="number">50</span>,</span><br><span class="line">        <span class="string">&#x27;C&#x27;</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="string">&#x27;D&#x27;</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="string">&#x27;M&#x27;</span>: <span class="number">1000</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>, len=s.length; i&lt;len; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> left = s[i],</span><br><span class="line">            right = s[i+<span class="number">1</span>],</span><br><span class="line">            newNum = obj[left]&lt;obj[right]? <span class="number">0</span> - obj[left]: obj[left];</span><br><span class="line">        num += newNum</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 触发器</title>
      <link href="post/87f78bf4.html"/>
      <url>post/87f78bf4.html</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL-触发器">MySQL 触发器</h2><h4 id="触发器定义与用法实例">触发器定义与用法实例</h4><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> 触发器名称             <span class="comment">--触发器必须有名字，最多64个字符，可能后面会附有分隔符.它和MySQL中其他对象的命名方式基本相象.</span></span><br><span class="line">&#123; <span class="keyword">BEFORE</span> | <span class="keyword">AFTER</span> &#125;                   <span class="comment">--触发器有执行的时间设置：可以设置为事件发生前或后。</span></span><br><span class="line">&#123; <span class="keyword">INSERT</span> | <span class="keyword">UPDATE</span> | <span class="keyword">DELETE</span> &#125;         <span class="comment">--同样也能设定触发的事件：它们可以在执行insert、update或delete的过程中触发。</span></span><br><span class="line"><span class="keyword">ON</span> 表名称                            <span class="comment">--触发器是属于某一个表的:当在这个表上执行插入、 更新或删除操作的时候就导致触发器的激活. 我们不能给同一张表的同一个事件安排两个触发器。</span></span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span>                         <span class="comment">--触发器的执行间隔：FOR EACH ROW子句通知触发器 每隔一行执行一次动作，而不是对整个表执行一次。</span></span><br><span class="line">&lt;触发器<span class="keyword">SQL</span>语句&gt;                      <span class="comment">--触发器包含所要触发的SQL语句：这里的语句可以是任何合法的语句， 包括复合语句，但是这里的语句受的限制和函数的一样。</span></span><br></pre></td></tr></table></figure><p><strong>实例准备工作</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表tab1</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> tab1;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab1(</span><br><span class="line">  tab1_id <span class="built_in">varchar</span>(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 创建表tab2</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> tab2;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab2(</span><br><span class="line">  tab2_id <span class="built_in">varchar</span>(<span class="number">11</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>实例1：新增一条，触发另外一张表的新增</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建触发器:t_afterinsert_on_tab1</span></span><br><span class="line"><span class="comment">-- 作用：增加tab1表记录后自动将记录增加到tab2表中</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> t_afterinsert_on_tab1;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> t_afterinsert_on_tab1</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">INSERT</span> <span class="keyword">ON</span> tab1</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   <span class="keyword">insert</span> <span class="keyword">into</span> tab2(tab2_id) <span class="keyword">values</span>(new.tab1_id);</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="comment">-- 测试一下</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab1(tab1_id) <span class="keyword">values</span>(<span class="string">&#x27;0001&#x27;</span>);</span><br><span class="line"><span class="comment">-- 看看结果</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab1;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab2</span><br></pre></td></tr></table></figure><ul><li>实例2：删除一条，触发另外一张表的删除</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建触发器:t_afterdelete_on_tab1</span></span><br><span class="line"><span class="comment">-- 作用：删除tab1表记录后自动将tab2表中对应的记录删去</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> t_afterdelete_on_tab1;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> t_afterdelete_on_tab1</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">DELETE</span> <span class="keyword">ON</span> tab1</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   <span class="keyword">delete</span> <span class="keyword">from</span> tab2 <span class="keyword">where</span> tab2_id=old.tab1_id;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="comment">-- 测试一下</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tab1 <span class="keyword">WHERE</span> tab1_id=<span class="string">&#x27;0001&#x27;</span>;</span><br><span class="line"><span class="comment">-- 看看结果</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab1;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab2;</span><br></pre></td></tr></table></figure><ul><li>实例3：更新一条，触发另外一张表的更新</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建触发器:t_afterupdate_on_tab1</span></span><br><span class="line"><span class="comment">-- 作用：修改tab1表记录后自动将tab2表中对应的记录更新</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> t_afterupdate_on_tab1;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> t_afterupdate_on_tab1</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">UPDATE</span> <span class="keyword">ON</span> tab1</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   <span class="keyword">update</span> tab2 <span class="keyword">set</span> tab2_id=new.tab1_id <span class="keyword">where</span> tab2_id=old.tab1_id;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="comment">-- 测试一下</span></span><br><span class="line"><span class="keyword">update</span> tab1 <span class="keyword">set</span> tab1_id=<span class="string">&#x27;0002&#x27;</span> <span class="keyword">WHERE</span> tab1_id=<span class="string">&#x27;0001&#x27;</span>;</span><br><span class="line"><span class="comment">-- 看看结果</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab1;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab2;</span><br></pre></td></tr></table></figure><h4 id="课后习题">课后习题</h4><blockquote><p>1、在 product 表上分别创建 BEFORE INSERT 、 AFTER UPDATE 和 AFTER DELETE 3 个触<br>发器，触发器名称分别为 product_bf_insert 、 product_af_update 和 product_af_del 。执行语句部分都是向 operate 表插入操作方法和操作时间。<br>2、对 product 表分别执行 INSERT 、 UPDATE 和 DELETE 操作<br>3、删除 product_bf_insert 和 product_af_update 这两个触发器</p></blockquote><h4 id="题解代码">题解代码</h4><p><strong>建立 operate和product表 并向product表中插入数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表 operate</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`operate`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`operate`</span> (</span><br><span class="line">  <span class="string">`Op_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">  <span class="string">`Op_type`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;操作方式&#x27;</span>,</span><br><span class="line">  <span class="string">`Op_time`</span> <span class="built_in">time</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;操作时间&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`Op_id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`Op_id`</span> (<span class="string">`Op_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建表 product</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`product`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`product`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;产品编号&#x27;</span>,</span><br><span class="line">  <span class="string">`Name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;产品名称&#x27;</span>,</span><br><span class="line">  <span class="string">`Function`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;产品功能&#x27;</span>,</span><br><span class="line">  <span class="string">`Company`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;生产厂家&#x27;</span>,</span><br><span class="line">  <span class="string">`Address`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`id`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> product(<span class="keyword">id</span>,<span class="string">`NAME`</span>,<span class="string">`Function`</span>,Company,Address) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;Strawberry&#x27;</span>,<span class="string">&#x27;通便&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;Watermelon&#x27;</span>,<span class="string">&#x27;利尿&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;杭州&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;cherry&#x27;</span>,<span class="string">&#x27;养颜驻容&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>触发器的创建</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建 BEFORE INSERT 触发器</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> product_bf_insert</span><br><span class="line"><span class="keyword">BEFORE</span> <span class="keyword">INSERT</span> <span class="keyword">on</span> product</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> operate <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">&#x27;数据插入成功！&#x27;</span>,<span class="built_in">TIME</span>(<span class="keyword">NOW</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> product(<span class="keyword">id</span>,<span class="string">`NAME`</span>,<span class="string">`Function`</span>,Company,Address) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">4</span>,<span class="string">&#x27;peach&#x27;</span>,<span class="string">&#x27;补益气血，养阴生津&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建 AFTER UPDATE 触发器</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> product_af_update</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">UPDATE</span> <span class="keyword">on</span> product</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> operate <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">&#x27;数据更新成功！&#x27;</span>,<span class="built_in">TIME</span>(<span class="keyword">NOW</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更新数据</span></span><br><span class="line"><span class="keyword">UPDATE</span> product <span class="keyword">SET</span> Address=<span class="string">&#x27;北京海淀区&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建 AFTER DELETE 触发器</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> product_af_del</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">DELETE</span> <span class="keyword">on</span> product</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> operate <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">&#x27;数据删除成功！&#x27;</span>,<span class="built_in">TIME</span>(<span class="keyword">NOW</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> product <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p><strong>删除触发器</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除 product_bf_insert 和 product_af_update 触发器</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> product_bf_insert;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> product_af_update;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Trigger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-爬楼梯</title>
      <link href="post/b0fdf7c6.html"/>
      <url>post/b0fdf7c6.html</url>
      
        <content type="html"><![CDATA[<h2 id="爬楼梯">爬楼梯</h2><p>假设你正在爬楼梯。需要<code>n</code>阶你才能到达楼顶。<br>每次你可以爬<code>1</code>或<code>2</code>个台阶。你有多少种不同的方法可以爬到楼顶呢？</p><p>注意：给定<code>n</code>是一个正整数。</p><p><strong>示例 1：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入： 2</span><br><span class="line">输出： 2</span><br><span class="line">解释： 有两种方法可以爬到楼顶。</span><br><span class="line">1.  1 阶 + 1 阶</span><br><span class="line">2.  2 阶</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入： 3</span><br><span class="line">输出： 3</span><br><span class="line">解释： 有三种方法可以爬到楼顶。</span><br><span class="line">1.  1 阶 + 1 阶 + 1 阶</span><br><span class="line">2.  1 阶 + 2 阶</span><br><span class="line">3.  2 阶 + 1 阶</span><br></pre></td></tr></table></figure><h4 id="解题思路">解题思路</h4><p><strong>斐波那契数列</strong></p><p><code>current_step = step1 + step2</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 第n层，等于第n-1层+第n-2层</span></span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> step1 = <span class="number">1</span>, step2 = <span class="number">2</span>, temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        temp = step1;</span><br><span class="line">        step1 = step2;</span><br><span class="line">        step2 = temp + step1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> step2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-两数之和</title>
      <link href="post/812420b3.html"/>
      <url>post/812420b3.html</url>
      
        <content type="html"><![CDATA[<h2 id="两数之和">两数之和</h2><p>给定一个整数数组<code>nums</code>和一个目标值<code>target</code>请你在该数组中找出和为目标值的那两个整数,并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。<br><strong>示例:</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">给定 nums = [2, 7, 11, 15], target = 9</span><br><span class="line">因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class="line">所以返回 [0, 1]</span><br></pre></td></tr></table></figure><h4 id="解题思路">解题思路</h4><p><strong>无序数组的两数之和</strong></p><p>代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">twoSum</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> target, <span class="keyword">int</span>* returnSize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> count[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; numsSize - <span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = i + <span class="number">1</span>;j &lt; numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] + nums[j] == target)</span><br><span class="line">            &#123;</span><br><span class="line">                count[<span class="number">0</span>] = i;</span><br><span class="line">                count[<span class="number">1</span>] = j;</span><br><span class="line">                * returnSize = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">return</span> count;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    * returnSize = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 视图与索引</title>
      <link href="post/f5a946ac.html"/>
      <url>post/f5a946ac.html</url>
      
        <content type="html"><![CDATA[<h2 id="视图">视图</h2><h3 id="基本概念">基本概念</h3><p><strong>视图本身是一张虚拟表，不存放任何数据。在使用SQL语句访问视图的时候，获取的数据是MySQL从其它表中生成的，视图和表在同一个命名空间。视图查询数据相对安全，视图可以隐藏一些数据和结构，只让用户看见权限内的数据，使复杂的查询易于理解和使用。</strong></p><h3 id="视图用法">视图用法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 基本语法</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> view_name </span><br><span class="line"><span class="keyword">AS</span> select_statement</span><br></pre></td></tr></table></figure><p><strong>注意事项：表和视图共享数据库中相同的名称空间，因此，数据库不能包含具有相同名称的表和视图。</strong></p><h4 id="视图调用">视图调用</h4><p><strong>和MySQL的表查询基本一致，可以使用各种查询条件。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> user_order_view <span class="keyword">WHERE</span> user_name=<span class="string">&#x27;Cicada&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="查看视图">查看视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">VIEW</span> user_order_view ;</span><br></pre></td></tr></table></figure><h4 id="修改视图">修改视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> view_name <span class="keyword">AS</span> select_statement ;</span><br></pre></td></tr></table></figure><h4 id="删除视图">删除视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] view_name ;</span><br></pre></td></tr></table></figure><h3 id="视图更新">视图更新</h3><p><strong>在指定条件允许的情况下，可以通过在视图上操作更新，删除，甚至写入数据，进而更新视图所涉及的相关表。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> user_order_view <span class="keyword">SET</span> user_name=<span class="string">&#x27;smile&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li><p>如果视图定义时使用聚合函数，分组等特殊操作，则无法更新。</p></li><li><p>MySQL不支持在视图上创建触发器。</p></li></ul><h3 id="注意事项">注意事项</h3><ul><li>MySQL并不支持在视图中创建索引，使用视图的时候可能会引发很多查询性能问题</li></ul><h2 id="索引">索引</h2><h3 id="索引的优缺点">索引的优缺点</h3><h4 id="优点">优点</h4><ul><li>索引大大减小了服务器需要扫描的数据量</li><li>索引可以帮助服务器避免排序和临时表</li><li>索引对于InnoDB（对索引支持行级锁）非常重要，因为它可以让查询锁更少的元组。</li></ul><h4 id="缺点">缺点</h4><ul><li>虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。因为更新表时，MySQL不仅要保存数据，还要保存索引文件。</li><li>建立索引会占用磁盘空间的索引文件。</li><li>如果某个数据列包含许多重复的内容，为它建立索引就没有太大的实际效果。</li><li>对于非常小的表，大部分情况下简单的全表扫描更高效；</li></ul><h3 id="索引创建语法">索引创建语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">index</span> index1 <span class="keyword">on</span> student (<span class="keyword">id</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 唯一索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> index2 <span class="keyword">on</span> student(<span class="keyword">id</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 全文索引</span></span><br><span class="line"><span class="keyword">CREATE</span> FULLTEXT <span class="keyword">INDEX</span> index3 <span class="keyword">on</span> student(adress(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建单列索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> INDEX5 <span class="keyword">on</span> student(<span class="keyword">name</span>(<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 联合索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> INDEX6 <span class="keyword">ON</span> student (<span class="keyword">name</span>,<span class="keyword">id</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">INDEX</span> index1(<span class="keyword">id</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> index2(<span class="keyword">id</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 全文索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">add</span> FULLTEXT <span class="keyword">INDEX</span> index3 (<span class="keyword">NAME</span>(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 单列索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">INDEX</span> index4 (adress(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 联合索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">INDEX</span> INDEX5 (<span class="keyword">name</span>,<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据库 </tag>
            
            <tag> View </tag>
            
            <tag> index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 存储过程事务处理</title>
      <link href="post/47c80ad2.html"/>
      <url>post/47c80ad2.html</url>
      
        <content type="html"><![CDATA[<h2 id="存储过程">存储过程</h2><h3 id="简介">简介</h3><p>存储程序是被存储在服务器中的组合SQL语句，经编译创建并保存在数据库中，用户可通过存储过程的名字调用执行。存储过程核心思想就是数据库SQL语言层面的封装与重用性。使用存储过程可以较少应用系统的业务复杂性，但是会增加数据库服务器系统的负荷。</p><h3 id="基本语法">基本语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> sp_name ([proc_parameter[,...]])</span><br><span class="line">    [characteristic ...] routine_body</span><br></pre></td></tr></table></figure><h3 id="案例">案例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询学生表中性别为男的学生总数</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> u_pro(<span class="keyword">IN</span> v_sex <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 ,<span class="keyword">OUT</span> <span class="keyword">num</span> <span class="built_in">INT</span>)</span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> <span class="keyword">num</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> v_sex=sex;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> u_pro(<span class="string">&#x27;男&#x27;</span>,@<span class="keyword">num</span>);</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">num</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 计算1+到n的值</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> addresult(<span class="keyword">IN</span> n <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> i <span class="built_in">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> <span class="keyword">sum</span> <span class="built_in">INT</span>;</span><br><span class="line">  <span class="keyword">SET</span> <span class="keyword">sum</span> =<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">SET</span> i =<span class="number">1</span>;</span><br><span class="line">  </span><br><span class="line">  WHILE i&lt;n DO</span><br><span class="line">  <span class="keyword">SET</span> <span class="keyword">sum</span>=<span class="keyword">sum</span>+i;</span><br><span class="line">  <span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">sum</span> ;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> addresult(<span class="number">50</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 计算1+到n的值</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> addresult2(<span class="keyword">in</span> n <span class="built_in">INT</span>,<span class="keyword">out</span> <span class="keyword">sum</span> <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> i <span class="built_in">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> <span class="keyword">sum</span> <span class="built_in">INT</span>;</span><br><span class="line">  <span class="keyword">SET</span> <span class="keyword">sum</span> =<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">SET</span> i =<span class="number">1</span>;</span><br><span class="line">  </span><br><span class="line">  WHILE i&lt;n DO</span><br><span class="line">  <span class="keyword">SET</span> <span class="keyword">sum</span>=<span class="keyword">sum</span>+i;</span><br><span class="line">  <span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">sum</span> ;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> addresult2(<span class="number">50</span>,@<span class="keyword">sum</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 判断变量</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> user_main_pro3(INOUT v_id <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="comment"># 定义变量</span></span><br><span class="line">  <span class="keyword">DECLARE</span> v_count <span class="built_in">INT</span>(<span class="number">11</span>);</span><br><span class="line">  <span class="comment"># 判断</span></span><br><span class="line">  IF v_id &gt; 3 THEN</span><br><span class="line">     <span class="keyword">SET</span> v_count = <span class="number">100</span>;</span><br><span class="line">  ELSE </span><br><span class="line">     <span class="keyword">SET</span> v_count = <span class="number">500</span>;</span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">  <span class="comment"># 返回赋值</span></span><br><span class="line">  <span class="keyword">SET</span> v_id = v_count;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> @v_id=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">call</span> user_main_pro3(@v_id);</span><br><span class="line"><span class="keyword">SELECT</span> @v_id;</span><br></pre></td></tr></table></figure><h2 id="事务处理">事务处理</h2><h3 id="注意点">注意点</h3><p><strong>MySQL中Innodb支持事务，而MyISAM不支持事务</strong></p><h3 id="事务的特性：">事务的特性：</h3><ol><li>原子性（Atomicity）：事务开始后的所有操作，要么全部做完，要么全部不做。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。</li><li>一致性（Consistency）：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到。</li><li>隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。</li><li>持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。</li></ol><h3 id="并发问题">并发问题</h3><ol><li>脏读：事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据</li><li>不可重复读：事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果 不一致。</li><li>幻读：系统管理员A将数据库中所有学生的成绩从具体分数改为ABCDE等级，但是系统管理员B就在这个时候插入了一条具体分数的记录，当系统管理员A改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这时就叫幻读。</li></ol><p><strong>注:不可重复读的和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表</strong></p><h3 id="事务隔离级别">事务隔离级别</h3><table><thead><tr><th style="text-align:left">事务隔离级别</th><th style="text-align:right">脏读</th><th style="text-align:center">不可重复读</th><th style="text-align:center">幻读</th></tr></thead><tbody><tr><td style="text-align:left">读未提交（read-uncommitted）</td><td style="text-align:right">是</td><td style="text-align:center">是</td><td style="text-align:center">是</td></tr><tr><td style="text-align:left">不可重复读（read-committed）</td><td style="text-align:right">否</td><td style="text-align:center">是</td><td style="text-align:center">是</td></tr><tr><td style="text-align:left">可重复读（repeatable-read）</td><td style="text-align:right">否</td><td style="text-align:center">否</td><td style="text-align:center">是</td></tr><tr><td style="text-align:left">串行化（serializable）</td><td style="text-align:right">否</td><td style="text-align:center">否</td><td style="text-align:center">否</td></tr></tbody></table><p><strong>设置隔离级别：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">SESSION</span> <span class="keyword">TRANSACTION</span> <span class="keyword">ISOLATION</span> <span class="keyword">LEVEL</span> <span class="keyword">READ</span> UNCOMMITTED;</span><br></pre></td></tr></table></figure><p>只有增删改语句才支持事务</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 存储过程 </tag>
            
            <tag> 视图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 查询</title>
      <link href="post/89bbd8d4.html"/>
      <url>post/89bbd8d4.html</url>
      
        <content type="html"><![CDATA[<h2 id="连接查询">连接查询</h2><p><strong>在数据库中join操作被称为连接，作用是能连接多个表的数据（通过连接条件），从多个表中获取数据合并在一起作为结果集返回给客户端。</strong></p><h3 id="交叉连接">交叉连接</h3><p><strong>交叉连接：将两张表的数据与另外一张表彼此交叉</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">cross</span> <span class="keyword">join</span> 表<span class="number">2</span></span><br><span class="line">eg：</span><br><span class="line"><span class="keyword">select</span> class.cname, student.sname <span class="keyword">from</span> student <span class="keyword">cross</span> <span class="keyword">join</span> <span class="keyword">class</span> <span class="keyword">on</span> class.cid =</span><br><span class="line">student.classid;</span><br><span class="line"><span class="comment">--其中的on代表两个表的连接条件</span></span><br></pre></td></tr></table></figure><h3 id="内连接">内连接</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-mysql-inner-join.png" alt="inner-join"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方式一：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表<span class="number">1</span>,表<span class="number">2</span> <span class="keyword">where</span> 表<span class="number">1.</span>列=表<span class="number">2.</span>列</span><br><span class="line">方式二：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 表<span class="number">1.</span>列=表<span class="number">2.</span>列</span><br></pre></td></tr></table></figure><h3 id="外连接">外连接</h3><h4 id="左连接">左连接</h4><p>左连接基础语法是 <code>a left outer join b </code>，其中的 <code>outer</code> 可以省略，与内连接相比就是在与内连接相<br>同条件下，在内连接的结果集中添加<code>a</code>表在<code>b</code>表中找不到匹配的记录，换句话说就是，结果集中会包含<code>a</code>表中的所有记录，如果<code>b</code>表中有匹配的记录就出现在结果集，否则使用 <code>NULL</code> 代替，也就是把<code>a</code>表看成根本，不可缺失记录。<br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-mysql-left-join.png" alt="left-join"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 表<span class="number">1.</span>列=表<span class="number">2.</span>列</span><br></pre></td></tr></table></figure><h4 id="右连接">右连接</h4><p>右外连接基础语法是 <code>a right outer join b </code>，其中的 <code>outer</code> 可以省略，与内连接相比就是在与内连<br>接相同条件下，在内连接的结果集中添加b表在a表中找不到匹配的记录，换句话说就是，结果集中会包含b表中的所有记录，如果a表中有匹配的记录就出现在结果集，否则使用 NULL 代替，也就是把b表看成根本，不可缺失记录，作用与左外连接恰好相反。<br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-mysql-right-join.png" alt="right-join"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> 表<span class="number">2</span> <span class="keyword">on</span> 表<span class="number">1.</span>列=表<span class="number">2.</span>列</span><br></pre></td></tr></table></figure><h3 id="自连接">自连接</h3><p>自连接就是表与它自身相关联，进行自连接时通过给表起不同的别名来区分一个表的两个实例。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 表.字段<span class="number">1</span>,表.字段<span class="number">2</span>,表.字段<span class="number">3</span> </span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">as</span> 别名,表<span class="number">2</span> <span class="keyword">as</span> 别名 </span><br><span class="line"><span class="keyword">where</span> 别名.字段<span class="number">2</span>=别名<span class="number">2.</span>字段<span class="number">3</span>；</span><br></pre></td></tr></table></figure><h2 id="子查询">子查询</h2><p>子查询指嵌套在查询内部，且必须始终出现在圆括号。子查询可以包含多个关键字或条件，如<br><code>DISTINCT</code>、<code>GROUP BY</code>、<code>ORDER BY</code>、<code>LIMIT</code>、<code>函数</code>等。<br>子查询的外层查询可以是：<code>SELECT</code>，<code>INSERT</code>，<code>UPDATE</code>，<code>SET或DO</code>。<br>子查询可以返回标量，一行，一列或子查询。</p><h3 id="将子查询作为派生表">将子查询作为派生表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">where</span> 字段<span class="number">1</span> = （<span class="keyword">select</span> 字段<span class="number">2</span> <span class="keyword">from</span> 表<span class="number">2</span>）;</span><br></pre></td></tr></table></figure><h3 id="把子查询用在where子句中">把子查询用在where子句中</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eg：</span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal&gt;(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">form</span> emp);</span><br></pre></td></tr></table></figure><h3 id="在from语句中使用子查询">在from语句中使用子查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">eg：</span><br><span class="line"><span class="keyword">select</span> t.deptno,t.avgsal,s.grade</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> deptno,<span class="keyword">avg</span>(sal) <span class="keyword">as</span> avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) t</span><br><span class="line"><span class="keyword">join</span> salgrade s</span><br><span class="line"><span class="keyword">on</span> t.avgsal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br></pre></td></tr></table></figure><h2 id="集合操作-UNION">集合操作(UNION)</h2><p><strong>union  作用：合并查询结果集</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Eg：</span><br><span class="line"><span class="keyword">select</span> ename,job <span class="keyword">from</span> emp <span class="keyword">where</span> job=<span class="string">&#x27;manager&#x27;</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> ename,job <span class="keyword">from</span> emp <span class="keyword">where</span> job=<span class="string">&#x27;salesman&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>limit</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">limit 起始下标，长度</span><br><span class="line">如果起始下标没有指定，默认从0开始，0表示表中第一条记录。</span><br><span class="line">Eg：</span><br><span class="line"><span class="comment">--按照工资降序排列取前5个</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p><strong>通用的分页SQL(只适用于mysql数据库管理系统)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t.* <span class="keyword">from</span> t</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> t.x <span class="keyword">desc</span>/<span class="keyword">asc</span></span><br><span class="line"><span class="keyword">limit</span> (pageNo<span class="number">-1</span>)*pageSize,pageSize;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 数据库基本操作</title>
      <link href="post/e82256d5.html"/>
      <url>post/e82256d5.html</url>
      
        <content type="html"><![CDATA[<h2 id="数据库和表操作">数据库和表操作</h2><h3 id="创建数据库">创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名称;</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><ol><li><strong>information_schema是MySQL自带的数据库，存储MySQL服务器管理的信息；</strong></li><li><strong>mysql是MySQL的系统数据库；</strong></li><li><strong>test是用户学习和测试练习使用的数据库；</strong></li><li><strong>MySQL中的数据库名称不能超过64字符，不能由纯数字组成，不能包含：“/”、“:”、“*”、“?”、“&gt;”、“&lt;”等符号；</strong></li><li><strong>如果要创建的数据库名称已经存在，也会发生错误。（可以用”if exists 数据库名称 ”来判断是否存在，以避免发生错误）。Eg:</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 判断student数据库存在就删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">exists</span> student; </span><br><span class="line"><span class="comment">-- 重新创建student数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> student;</span><br><span class="line"><span class="comment">-- 创建数据库后，如果需要使用数据库，使用：”use 数据库名；”如：use student;</span></span><br></pre></td></tr></table></figure><h3 id="删除数据库">删除数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名称；</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Eg： <span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">user</span>; <span class="comment">-- 删除了名叫“user”的数据库；</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">exists</span> <span class="keyword">user</span>; <span class="comment">-- 也可以用if exists做判断，避免发生错误；</span></span><br></pre></td></tr></table></figure><h3 id="创建表">创建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">  字段名称<span class="number">1</span> 数据类型 [ <span class="literal">null</span> / <span class="keyword">not</span> <span class="literal">null</span> ] [ <span class="keyword">DEFAULT</span> 默认值 ] [ AUTO_INCREMENT ] [ PRIMARY_KEY ] [ <span class="keyword">COMMENT</span> ‘注释内容’ ] ,</span><br><span class="line">......</span><br><span class="line">  字段名称N 数据类型 [ <span class="literal">null</span> / <span class="keyword">not</span> <span class="literal">null</span> ] [ <span class="keyword">DEFAULT</span> 默认值 ] [ AUTO_INCREMENT ] [ PRIMARY_KEY ] [ <span class="keyword">COMMENT</span> ‘注释内容’ ]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Eg:</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> teacher ; <span class="comment">-- 首先判断是否存在teacher表，如果存在就删除</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> teacher(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span> ,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 创建了teacher表，里面有int、 name两个字段, 其中id是主键，非空，自增</span></span><br><span class="line"><span class="comment">-- 创建数据库后，如果需要使用数据库，使用：”use 数据库名；”如：use teacher;</span></span><br></pre></td></tr></table></figure><h3 id="删除表">删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Eg: <span class="keyword">drop</span> <span class="keyword">table</span> teacher;</span><br><span class="line">或者删除多个表格： <span class="keyword">drop</span> <span class="keyword">table</span> teacher, student;</span><br></pre></td></tr></table></figure><h3 id="复制表">复制表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">完全复制的格式：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表<span class="number">02</span> <span class="keyword">select</span> * <span class="keyword">from</span> 表<span class="number">01</span>;</span><br><span class="line">Eg: <span class="keyword">create</span> <span class="keyword">table</span> teacher02 <span class="keyword">select</span> * <span class="keyword">from</span> teacher;</span><br><span class="line"><span class="comment">-- 复制一张和teacher表完全一样的teacher02表；</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制指定列的格式：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表<span class="number">02</span> <span class="keyword">select</span> 字段a，字段b，...... <span class="keyword">from</span> 表<span class="number">01</span>;</span><br><span class="line">Eg: <span class="keyword">create</span> <span class="keyword">table</span> teacher02 <span class="keyword">select</span> <span class="keyword">id</span>, <span class="keyword">name</span> <span class="keyword">from</span> teacher;</span><br><span class="line"><span class="comment">-- 复制一张teacher02表，里面包含teacher表里的id，name；</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">完全复制表结构（包括键key），但是不复制里面的内容，格式是：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表<span class="number">02</span> <span class="keyword">like</span> 表<span class="number">01</span>;</span><br><span class="line">Eg: <span class="keyword">create</span> <span class="keyword">table</span> teacher02 <span class="keyword">like</span> teacher;</span><br><span class="line"><span class="comment">-- 复制一张teacher02表，其结构和teacher表相同，但没有teacher里的内容；</span></span><br></pre></td></tr></table></figure><h3 id="修改表">修改表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. 增加字段：add</span><br><span class="line">Eg: <span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">add</span> age <span class="built_in">int</span> <span class="literal">null</span>; <span class="comment">-- 添加age列，int类型，可以为null；  </span></span><br><span class="line"></span><br><span class="line">2. 删除字段：<span class="keyword">drop</span></span><br><span class="line">Eg: <span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">drop</span> age; <span class="comment">-- 删除age列；  </span></span><br><span class="line"></span><br><span class="line">3.修改字段：<span class="keyword">change</span></span><br><span class="line">Eg: <span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">change</span> <span class="keyword">name</span> teacher_name <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="literal">null</span>;</span><br><span class="line"><span class="comment">-- 修改name列为teacher_name，varchar类型最大30个字符，不能为null；</span></span><br><span class="line"></span><br><span class="line">4. 增加主键：add primary key()</span><br><span class="line">Eg: <span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">add</span> primary <span class="keyword">key</span>(<span class="keyword">id</span>); <span class="comment">-- 设置id为主键（id是已有字段）；</span></span><br><span class="line"></span><br><span class="line">5. 修改表名：<span class="keyword">rename</span> <span class="keyword">to</span></span><br><span class="line">Eg: <span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">rename</span> <span class="keyword">to</span> <span class="keyword">user</span>; <span class="comment">-- 把teacher表改名为user；</span></span><br></pre></td></tr></table></figure><h2 id="数据完整性">数据完整性</h2><p><code>数据完整性的概念：确保数据正确性和一致性的机制。</code></p><ol><li>域完整性：即列的完整性。如：年龄不能超过150岁，id不能为null。</li><li>实体完整性：即行的完整性。如：实体“张三”具有区别于实体“李四”的特征。</li><li>参照完整性：主关系表（被参照表）和从关系表（参照表）中数据的一致性。</li><li>用户定义完整性：用户根据具体需求来定义约束条件。</li></ol><h2 id="使用SQL语句为表创建和删除约束">使用SQL语句为表创建和删除约束</h2><p>如果要修改已创建的约束，最简单实用的方式就是先删除已有的约束，再建立同名的约束。</p><h3 id="添加约束：">添加约束：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> [<span class="keyword">constraint</span>] [约束名称] 约束类型（约束内容[可多个字段]）;</span><br></pre></td></tr></table></figure><h4 id="主键约束">主键约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">主键约束: </span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> <span class="keyword">constraint</span> PK_user_id primary <span class="keyword">key</span>(<span class="keyword">id</span>);</span><br><span class="line"><span class="comment">-- 把user表的id添加主键约束，约束名称是PK_user_id。（PK是主键的简写）</span></span><br><span class="line"></span><br><span class="line">设置联合主键的方式：</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> primary <span class="keyword">key</span>(<span class="keyword">id</span>，<span class="keyword">name</span>);</span><br><span class="line"><span class="comment">-- 设置了联合主键id和name； 补充： 在创建表的时候也可以直接设置主键约束。</span></span><br></pre></td></tr></table></figure><h4 id="唯一约束">唯一约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">唯一约束：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> [<span class="keyword">constraint</span>] <span class="keyword">unique</span>(<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure><h4 id="默认约束">默认约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">默认约束：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">alter</span> <span class="keyword">column</span>列名 <span class="keyword">set</span> <span class="keyword">DEFAULT</span> 默认值;</span><br><span class="line"><span class="comment">-- 默认值可以为常量或者为空（null）；</span></span><br></pre></td></tr></table></figure><h4 id="检查约束">检查约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">检查约束：（与SQL Server中的检查约束有语法区别）可以使用**枚举**。</span><br><span class="line">Eg：<span class="keyword">create</span> <span class="keyword">table</span> student ( ...... sex **enum**(‘男’, ‘女’) <span class="keyword">not</span></span><br><span class="line"><span class="literal">null</span> <span class="comment">-- 学员性别 );</span></span><br><span class="line"><span class="comment">-- 默认值可以为常量或者为空（null）；</span></span><br></pre></td></tr></table></figure><h4 id="外键约束">外键约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">外键约束： 格式：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 约束名称 约束类型;</span><br><span class="line">(外键约束简称为“FK”)</span><br><span class="line">Eg：<span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> <span class="keyword">constraint</span> FK_student_class_classid <span class="keyword">foreign</span> <span class="keyword">key</span> (classid) <span class="keyword">references</span> <span class="keyword">class</span>(classid);</span><br><span class="line"><span class="comment">-- 为student表所在的班级字段classid设置了外键约束。</span></span><br><span class="line"></span><br><span class="line">创建时设置外键：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student ( </span><br><span class="line">...... </span><br><span class="line">classid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>, <span class="keyword">foreign</span> <span class="keyword">key</span>(classid) <span class="keyword">references</span> <span class="keyword">class</span>(classid) </span><br><span class="line"><span class="comment">-- 设置名称为classid的外键，指向class表的classid； </span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="设置级联操作">设置级联操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">设置级联操作：</span><br><span class="line">restrict和no action表示在子表有关联记录的情况下父表不能更新；</span><br><span class="line">cascade 表示父表在更新或者删除时，同时更新或删除子表对应的记录；</span><br><span class="line"><span class="keyword">set</span> <span class="literal">null</span> 表示父表在更新或者删除时，子表对应的字段设置为<span class="literal">null</span>；</span><br><span class="line"></span><br><span class="line">Eg：</span><br><span class="line">(<span class="number">1</span>).alter <span class="keyword">table</span> student <span class="keyword">add</span> <span class="keyword">constraint</span> FK_student_class_classid <span class="keyword">foreign</span> <span class="keyword">key</span> (classid) <span class="keyword">references</span> <span class="keyword">class</span>(classid) <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">set</span> <span class="literal">null</span>;</span><br><span class="line"><span class="comment">-- 如：删除class表中classid=1对应的字段时，student表中的classid字段的值设置为null</span></span><br><span class="line"></span><br><span class="line">(2).alter table student add constraint FK_student_class_classid foreign key (classid) references class(classid) on <span class="keyword">delete</span> <span class="keyword">set</span> <span class="keyword">cascade</span>;</span><br><span class="line"><span class="comment">-- 如：删除class表中classid=1对应的字段时，同时删除student表中所有classid=1的该行数据。</span></span><br></pre></td></tr></table></figure><h3 id="删除约束">删除约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> [<span class="keyword">constraint</span>] 约束名称;</span><br><span class="line"><span class="comment">-- constraint关键字可省略 -- 如果将表删除了，那么相关的约束也就删除了。</span></span><br><span class="line"></span><br><span class="line">Eg01: <span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line"><span class="comment">-- 存在一个主键约束，可用此操作；</span></span><br><span class="line"></span><br><span class="line">Eg02: <span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> FK_class_student_id；</span><br><span class="line"><span class="comment">-- 删除外键</span></span><br></pre></td></tr></table></figure><h2 id="数据操作">数据操作</h2><h3 id="插入数据：">插入数据：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--（最常用）</span></span><br><span class="line"><span class="comment">-- 插入值的顺序必须与表中字段的顺序完全一致。</span></span><br><span class="line">1. &quot;insert...values&quot;</span><br><span class="line">语法：<span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(值);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入一行数据</span></span><br><span class="line">Eg01: <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="number">1</span>, ‘zhangsan’ );</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入多行数据，用逗号隔开；</span></span><br><span class="line">Eg02: <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="number">2</span>,‘jack’)，(<span class="number">3</span>, ‘rose’);</span><br><span class="line"></span><br><span class="line">补充：当插入的记录会引发主键或唯一约束冲突时，可以用 **on duplicate key update** 条件。</span><br><span class="line">Eg: <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> (<span class="number">1</span>, ‘mike’ ) **<span class="keyword">on</span> <span class="keyword">duplicate</span> <span class="keyword">key</span> <span class="keyword">update</span> <span class="keyword">id</span> =<span class="number">10</span>**;</span><br><span class="line"><span class="comment">-- 由于id是主键，id=1与上面zhangsan行冲突，所以自动把zhangsan的id设置为10，然后再把id=1的mike数据插入进去；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照每一列对应的值插入数据</span></span><br><span class="line">2. ”insert...set”</span><br><span class="line">语法：<span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">set</span> 列名<span class="number">1</span>=值<span class="number">1</span>, 列名<span class="number">2</span>=值<span class="number">2</span>,......;</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入的数据是：id为5，姓名’abc’ 3）”insert...select”</span></span><br><span class="line"><span class="comment">-- 把从其他表查询到的数据插入到该表中，类似于like属性 Eg01: insert into user</span></span><br><span class="line">Eg01: <span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">set</span> <span class="keyword">id</span> =<span class="number">5</span>, <span class="keyword">name</span>=’abc’;</span><br><span class="line"></span><br><span class="line"><span class="comment">--把从student中查询到的数据插入到user中；</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="更新数据">更新数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：<span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名<span class="number">1</span>=值<span class="number">1</span> [,列名<span class="number">2</span>=值<span class="number">2</span>,......] [where...] [<span class="keyword">order</span> by...] [<span class="keyword">limit</span> 行数]</span><br><span class="line"><span class="comment">--把id=3的列的name改为wangwu；</span></span><br><span class="line">eg： <span class="keyword">update</span> student <span class="keyword">set</span> <span class="keyword">name</span> = <span class="string">&#x27;wangwu&#x27;</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">003</span>;</span><br></pre></td></tr></table></figure><h3 id="删除数据">删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：<span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 列名=值；</span><br><span class="line"><span class="comment">--删除id＝３的列的数据。</span></span><br><span class="line">eg：<span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">3</span>；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 增删改查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 存储引擎和数据类型</title>
      <link href="post/afb0e9ab.html"/>
      <url>post/afb0e9ab.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、MySQL的存储引擎">一、MySQL的存储引擎</h2><p><strong>在MySQL这种关系型数据库来说，数据是以表的方式来存储的，因此，简单点来说，存储引擎就是存储和操作此表的类型。</strong></p><h3 id="存储引擎的种类">存储引擎的种类</h3><ol><li><code>InnoDB</code>存储引擎 <code>事务型</code>数据库引擎，提供了<code>事务</code>、<code>回滚</code>、<code>崩溃修复</code>能力、<code>多版本并发控制的事务安全</code>。在<code>MySQL 5.5版本开始</code>成为默认存储引擎。</li><li><code>MyISAM</code>存储引擎 MyISAM存储引擎是MySQL中常见的存储引擎，是<code>MySQL 5.0之前</code>版本的<code>默认</code>存储引擎。<code>不支持事务</code>。</li><li><code>MEMORY</code>存储引擎 MEMORY存储引擎是MySQL中的一个特殊的存储引擎。所有数据放在<code>内存</code>中，拥有极高的<code>插入</code>、<code>更新</code>、<code>查询效率</code>。会占用与数据量成正比的内存空间。MySQL<code>重启后数据会丢失</code>。</li></ol><h2 id="二、MySQL-数据类型">二、MySQL 数据类型</h2><table><thead><tr><th>分类</th><th>数据类型</th><th>范例格式</th></tr></thead><tbody><tr><td>整型</td><td>int</td><td>100</td></tr><tr><td>浮点型</td><td>double</td><td>9.9</td></tr><tr><td>字符串型</td><td>varchar (20)</td><td>‘云南省昆明市’</td></tr><tr><td>日期类型</td><td>date</td><td>‘2019-09-09’</td></tr><tr><td>datetime (timestamp)</td><td></td><td>‘2019-09-09 10:20:30’</td></tr></tbody></table><h2 id="三、MySQL-数据类型属性">三、MySQL 数据类型属性</h2><table><thead><tr><th>属性名称</th><th>作用</th><th>使用的数据类型范</th></tr></thead><tbody><tr><td>PRIMARY KEY</td><td>主键，确保该行的唯一性。（常与 AUTO_INCREMENT合用）</td><td>所有数据类型</td></tr><tr><td>AUTO_INCREMENT</td><td>为新插入的行赋上唯一的整数标识符。</td><td>整数（如ID）</td></tr><tr><td>UNIQUE</td><td>确保该列所有值都不同。(NULL值可以重复)</td><td>所有数据类型</td></tr><tr><td>NOT NULL</td><td>不允许该列为NULL。 —&gt;null 表示该列不存在值</td><td>所有数据类型</td></tr><tr><td>NULL</td><td>允许该列为NULL。</td><td>所有数据类型</td></tr><tr><td>ZEROFILL</td><td>用0填充剩余字段空间，如INT类型的表示为： 0000000008</td><td>所有数据类型</td></tr><tr><td>BINARY</td><td>对字符串以区分大小写的方式排序。（按照ASCII 表）</td><td>CHAR, VARCHAR</td></tr><tr><td>DEFAULT</td><td>在没有任何值的情况下，赋予某个常量。</td><td>BLOB和TEXT列*不 可用</td></tr><tr><td>INDEX</td><td>为该列创建一个索引。（有序的键值组）</td><td>所有数据类型</td></tr><tr><td>NATIONAL</td><td>确保该列使用默认字符集。</td><td>CHAR, VARCHAR</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 存储引擎 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好像很久没真正快乐过了…</title>
      <link href="post/28c4837c.html"/>
      <url>post/28c4837c.html</url>
      
        <content type="html"><![CDATA[    <div id="aplayer-lLztQOoB" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="425570055" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h2 id="好像很久没真正快乐过了">好像很久没真正快乐过了</h2><p>以前，总认为生活中的一切好，都可以在努力之后得到，后来发现，自己用尽一切努力都得不到的东西，总有人能够很轻松拥有，所以，不那么相信努力的意义了。</p><p>以前总觉得会有真诚的朋友，会用真心换来真心，后来发现，自己所看中的朋友只是那些在集赞，砍价，投票时能够给我随手传发一个链接的人，仅此而已。我好像不那么需要朋友了。</p><p>以前总是很容易被人看穿，听不懂言外之意，也不用去揣摩别人的心思，而现在，要做一个懂得倾听，学会伪装，喜怒不形于色，不那么轻易被人看穿的人，这样才不会被轻易利用和欺骗，多了钝感力，也多了共情力和同理心，只是不想那么单纯，那么真实了。</p><p>我怀恋的，是那个对朋友毫无保留的我，是那个可以很直接表现自己不满意的我，是那个不用听懂别人言外之意的我，是那个在雪地里用冻僵的手给他回复消息，给他打电话的我，那个快乐的我。</p><p>可是现在，我只想成为一个懂得保护自己，成为一个不那么轻易受伤的人。</p><p>快乐，从来都是奢侈品，不难过已经是难得。</p><p>好像很久没真正快乐过了…</p>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逝去的大一时光</title>
      <link href="post/25f8a447.html"/>
      <url>post/25f8a447.html</url>
      
        <content type="html"><![CDATA[<h2 id="日月忽其不淹兮，春与秋其代序">日月忽其不淹兮，春与秋其代序</h2><p>大学时间真的很短暂、很让人难以忘怀啊，不知不觉大一就已经过去了，让我不得不感叹时间的力量，感觉自己还什么都没做，就已经浑浑噩噩的度过了一个学期。正像大家所说的“高中忙的理所应当，大学忙的不知所以”。</p><p>现在去回忆过去的一年的点点滴滴，学习什么的似乎也没学到什么，甚至已经忘了上学期的内容,忘了曾经的信誓旦旦,忘了曾说过的要改变自己…</p><h2 id="怀念那年的夏天还是怀念那年的人">怀念那年的夏天还是怀念那年的人</h2><p>一次高考，考散了一拨人，可能这辈子都无法再见到。曾经无时无刻不想要挣脱的被自己在心里骂了一万遍的高中，现在发现却是我们再也回不去的天堂。</p><p>现在的我是真的很怀念高中生活。虽然高中的时候每天困到不行，六七点就要起床，十一二点才下晚自习，但那时生活却是充实、简单，快乐的。不用为了不挂科焦头烂额，只要努力学习考个好成绩就能开心很久。不像现在的生活，忙忙碌碌，无所事事，没有目标。</p><h2 id="日常美好生活碎片">日常美好生活碎片</h2><ul><li>时常开心，认真记录，发现光芒！</li></ul><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img1.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img2.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img3.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img4.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img5.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img7.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img8.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img9.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img10.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img11.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img12.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img13.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img14.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/usocute/gallery/raw/master/img/miraitowa-d1-img15.jpg" alt=""></p>          </div><h2 id="岁月匆匆，惟愿总相逢">岁月匆匆，惟愿总相逢</h2><p>或许对于以后的我们来说这些东西都是微不足道的小事，但现在对于我们来说都十分重要，因为我们内心一直一直存有温柔，存有善意，存有美好一直小心翼翼的守护着自己最宝贵的东西。</p>]]></content>
      
      
      <categories>
          
          <category> 往事如烟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>18岁，成年了呀~</title>
      <link href="post/fae8.html"/>
      <url>post/fae8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>  我一直知道有人爱我。十八年前的冬天，有人在漫天飞雪的日子里满心欢喜地期待着我。期待于冬日结果。生日的意义不是提醒我又长大一岁，而是温柔的告诉我，要好好的，毕竟有人曾经有人那么温柔的等待着我。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 闲言碎语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活记录 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="post/4a17b156.html"/>
      <url>post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<h2 id="HELLO-WORLD">HELLO WORLD</h2><ul><li><p>已经记不清楚这是第几次写<code>hello world</code>了，从最早的emlog博客,到后来的typecho,再到后来的WordPress。基本没有写出什么有意义的东西。写的东西也基本都因为忘记导出数据库,忘记备份而丢失了…</p></li><li><p>在这之前,一直使用<a href="http://yunloli.com/">云上萝莉</a>的<code>香港免备案主机</code>,然而速度并不理想,又买不起昂贵的服务器,而最近阿里云做活动以很便宜的价格购买了服务器。</p></li><li><p>有时候，有些bug以我的能力确实也无法解决，但是现在可是互联网时代了呢建立博客后我们可以一起进步一起成长！</p></li><li><p>2019年11月3日，我的个人网站正式开始运行啦！！！</p></li><li><p>哈哈哈还是很开心的呢，毕竟也花费了不少的心血和心思呢…</p></li></ul><h2 id="站点历史">站点历史</h2><div class="timeline"><div class="timenode"><div class="meta"><p><p>2017年某天</p></p></div><div class="body"><p>有了建一个属于自己的个人网站的想法…</p></div></div><div class="timenode"><div class="meta"><p><p>2018年2月</p></p></div><div class="body"><p>使用白嫖的域名和免费主机+Emlog程序搭建了我的第一个博客…</p></div></div><div class="timenode"><div class="meta"><p><p>2018年3月</p></p></div><div class="body"><p>主机商跑路，博客数据丢失…</p></div></div><div class="timenode"><div class="meta"><p><p>2018年3月17日</p></p></div><div class="body"><p>在腾讯云购买域名<code>murmured.xyz</code></p></div></div><div class="timenode"><div class="meta"><p><p>2018年3月21日</p></p></div><div class="body"><p>在云上萝莉购买香港免备案主机。使用<code>typecho</code>程序+<code>Practice01</code>主题重新搭建博客(嗯…然后,疯狂更换主题)</p></div></div><div class="timenode"><div class="meta"><p><p>2018年5月</p></p></div><div class="body"><p>购买域名<code>minemine.xyz</code>。使用<code>wordpress</code>程序+<code>sakura</code>主题搭建博客镜像站</p></div></div><div class="timenode"><div class="meta"><p><p>2019年3月</p></p></div><div class="body"><p>续费免备案主机…</p></div></div><div class="timenode"><div class="meta"><p><p>2019年5月</p></p></div><div class="body"><p>域名<code>minemine.xyz</code>到期，没有续费，购买并更换新域名<code>Eliauk.cc</code></p></div></div><div class="timenode"><div class="meta"><p><p>2019年10月</p></p></div><div class="body"><p>网站数据库出问题，无法解决。一怒之下删了数据库(看来以后要好好学习数据库了)…</p></div></div><div class="timenode"><div class="meta"><p><p>2019年11月2日</p></p></div><div class="body"><p>决定重建博客，最后选用<code>HEXO</code>(我才不会说是因为不需要数据库)+<a href="https://github.com/theme-nexmoe/hexo-theme-nexmoe">Nexmoe</a>主题，默认路线部署于Coding，海外路线部署于Github</p></div></div><div class="timenode"><div class="meta"><p><p>2019年11月9日</p></p></div><div class="body"><p>更换主题为<a href="https://github.com/amehime/hexo-theme-shoka">Shoka</a>…</p></div></div><div class="timenode"><div class="meta"><p><p>2019年12月</p></p></div><div class="body"><p>更换主题为<a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a>…</p></div></div><div class="timenode"><div class="meta"><p><p>2020年11月</p></p></div><div class="body"><p>误点升级了<code>Coding pages</code>,网站变得奇慢无比，转投<a href="https://vercel.com/">Vercel</a>门下。</p></div></div><div class="timenode"><div class="meta"><p><p>2021年1月10日</p></p></div><div class="body"><p>购买并更换网站域名为<code>miraitowa.cc</code>…</p></div></div><div class="timenode"><div class="meta"><p><p>持续更新中</p></p></div><div class="body"><p>持续更新中…</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 事件簿 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
