{
    "version": "https://jsonfeed.org/version/1",
    "title": "寻梦启事 • All posts by \"javascript\" tag",
    "description": "",
    "home_page_url": "http://eliauk.cc",
    "items": [
        {
            "id": "http://eliauk.cc/Roman-numerals/",
            "url": "http://eliauk.cc/Roman-numerals/",
            "title": "算法入门-罗马数字转整数",
            "date_published": "2020-10-13T09:59:02.099Z",
            "content_html": "<h2 id=\"罗马数字转整数\"><a class=\"markdownIt-Anchor\" href=\"#罗马数字转整数\">#</a> 罗马数字转整数</h2>\n<p><strong>罗马数字包含以下七种字符:  <code>I</code> ，  <code>V</code> ，  <code>X</code> ，  <code>L</code> ， <code>C</code> ， <code>D</code>  和  <code>M</code> 。</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">字符          数值<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000<br></code></pre></td></tr></table></figure>\n<p><strong>例如， 罗马数字  <code>2</code>  写做  <code>II</code>  ，即为两个并列的  <code>1</code> 。 <code>12</code>  写做  <code>XII</code>  ，即为  <code>X + II</code>  。  <code>27</code>  写做   <code>XXVII</code> , 即为  <code>XX + V + II</code>  。</strong></p>\n<p><strong>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如  <code>4</code>  不写做  <code>IIII</code> ，而是  <code>IV</code> 。数字  <code>1</code>  在数字  <code>5</code>  的左边，所表示的数等于大数  <code>5</code>  减小数  <code>1</code>  得到的数值  <code>4</code>  。同样地，数字  <code>9</code>  表示为  <code>IX</code> 。这个特殊的规则只适用于以下六种情况：</strong></p>\n<p><code>I</code>  可以放在  <code>V (5)</code>  和  <code>X (10)</code>  的左边，来表示  <code>4</code>  和  <code>9</code> 。<br>\n <code>X</code>  可以放在  <code>L (50)</code>  和  <code>C (100)</code>  的左边，来表示  <code>40</code>  和  <code>90</code> 。 <br>\n <code>C</code>  可以放在  <code>D (500)</code>  和  <code>M (1000)</code>  的左边，来表示  <code>400</code>  和  <code>900</code> 。<br>\n给定一个罗马数字，将其转换成整数。输入确保在  <code>1</code>  到  <code>3999</code>  的范围内。</p>\n<h4 id=\"示例-1\"><a class=\"markdownIt-Anchor\" href=\"#示例-1\">#</a> 示例 1:</h4>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">输入: &quot;III&quot;<br>输出: 3<br></code></pre></td></tr></table></figure>\n<h4 id=\"示例-2\"><a class=\"markdownIt-Anchor\" href=\"#示例-2\">#</a> 示例 2:</h4>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入: &quot;IV&quot;</span><br><span class=\"hljs-section\">输出: 4</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"示例-3\"><a class=\"markdownIt-Anchor\" href=\"#示例-3\">#</a> 示例 3:</h4>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入: &quot;IX&quot;</span><br><span class=\"hljs-section\">输出: 9</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"示例-4\"><a class=\"markdownIt-Anchor\" href=\"#示例-4\">#</a> 示例 4:</h4>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\">输入: <span class=\"hljs-string\">&quot;LVIII&quot;</span><br>输出: <span class=\"hljs-number\">58</span><br>解释: L = <span class=\"hljs-number\">50</span>, V= <span class=\"hljs-number\">5</span>, III = <span class=\"hljs-number\">3.</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"示例-5\"><a class=\"markdownIt-Anchor\" href=\"#示例-5\">#</a> 示例 5:</h4>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\">输入: <span class=\"hljs-string\">&quot;MCMXCIV&quot;</span><br>输出: <span class=\"hljs-number\">1994</span><br>解释: M = <span class=\"hljs-number\">1000</span>, CM = <span class=\"hljs-number\">900</span>, XC = <span class=\"hljs-number\">90</span>, IV = <span class=\"hljs-number\">4.</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"提示\"><a class=\"markdownIt-Anchor\" href=\"#提示\">#</a> 提示：</h4>\n<ul>\n<li>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。</li>\n<li>IC 和 IM 这样的例子并不符合题目要求， <code>49</code>  应该写作  <code>XLIX</code> ， <code>999</code>  应该写作  <code>CMXCIX</code>  。</li>\n<li>关于罗马数字的详尽书写规则，可以参考<a href=\"https://b2b.partcommunity.com/community/knowledge/zh_CN/detail/10753/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97#knowledge_article\">罗马数字 - Mathematics</a>。</li>\n</ul>\n<h2 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h2>\n<p><strong>仔细分析罗马数字的规律，会发现，罗马字母 ( <code>XII</code> ) 正常是从左到右按从大到小排列，当代表小数字 ( <code>I</code> ) 的字母在代表大数字的字母 ( <code>V</code> ) 左边时，这意味着两个字母代表一个数，而且是大数字减小数字的最终结果（ <code>V-I</code> ）。</strong></p>\n<p><strong>所以，在做计算时，只需遍历判断下标为 <code>i</code>  的字母是否大于下标为 <code>i+1</code>  的字母，如果大于，则相加，如果小于，则需要减去当前这个数。</strong></p>\n<h4 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">&#123;string&#125;</span> <span class=\"hljs-variable\">s</span></span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return <span class=\"hljs-type\">&#123;number&#125;</span></span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">var</span> romanToInt = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">let</span> obj = &#123;<br>        <span class=\"hljs-string\">&#x27;I&#x27;</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">&#x27;V&#x27;</span>: <span class=\"hljs-number\">5</span>,<br>        <span class=\"hljs-string\">&#x27;X&#x27;</span>: <span class=\"hljs-number\">10</span>,<br>        <span class=\"hljs-string\">&#x27;L&#x27;</span>: <span class=\"hljs-number\">50</span>,<br>        <span class=\"hljs-string\">&#x27;C&#x27;</span>: <span class=\"hljs-number\">100</span>,<br>        <span class=\"hljs-string\">&#x27;D&#x27;</span>: <span class=\"hljs-number\">500</span>,<br>        <span class=\"hljs-string\">&#x27;M&#x27;</span>: <span class=\"hljs-number\">1000</span><br>    &#125;<br>    <span class=\"hljs-keyword\">let</span> num = <span class=\"hljs-number\">0</span>;<br><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>, len=s.length; i&lt;len; i++) &#123;<br>        <span class=\"hljs-keyword\">let</span> left = s[i],<br>            right = s[i+<span class=\"hljs-number\">1</span>],<br>            newNum = obj[left]&lt;obj[right]? <span class=\"hljs-number\">0</span> - obj[left]: obj[left];<br>        num += newNum<br>    &#125;<br><br>    <span class=\"hljs-keyword\">return</span> num;<br>&#125;;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "算法",
                "leetcode",
                "javascript"
            ]
        }
    ]
}