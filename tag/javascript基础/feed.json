{
    "version": "https://jsonfeed.org/version/1",
    "title": "Miraitowa • All posts by \"javascript基础\" tag",
    "description": "永远期待明亮的未来,一个收藏回忆记录成长的地方...",
    "home_page_url": "https://miraitowa.cc",
    "items": [
        {
            "id": "https://miraitowa.cc/post/49eef7dc.html",
            "url": "https://miraitowa.cc/post/49eef7dc.html",
            "title": "javascript基础②-本地对象",
            "date_published": "2021-03-14T10:24:02.000Z",
            "content_html": "<h2 id=\"Date对象的创建\">Date对象的创建</h2>\n<h3 id=\"获取当前日期及时间\">获取当前日期及时间</h3>\n<pre><code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> 变量名 = <span class=\"keyword\">new</span>  <span class=\"built_in\">Date</span>();</span><br></pre></td></tr></table></figure>\n</code></pre>\n<h3 id=\"设置指定时间\">设置指定时间</h3>\n<pre><code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> 变量名 = <span class=\"keyword\">new</span>  <span class=\"built_in\">Date</span>(年，月，日);</span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量名 = <span class=\"keyword\">new</span>  <span class=\"built_in\">Date</span>(年，月，日，时，分，秒，毫秒);</span><br></pre></td></tr></table></figure>\n</code></pre>\n<h2 id=\"Date对象中的常用方法\">Date对象中的常用方法</h2>\n<ol>\n<li>\n<p>to方法组:(<code>转换</code>)</p>\n<ul>\n<li><code>toString()</code>把日期转换成字符串</li>\n<li><code>toLocaleString()</code>把日期转换成本地时间(年月日时分秒)</li>\n<li><code>toLocaleDateString()</code>把日期转换成本地时间(年月日)</li>\n<li><code>toLocaleTimeString()</code>把日期转换成本地时间(时分秒)</li>\n</ul>\n</li>\n<li>\n<p>get方法组:(<code>获取</code>)</p>\n<ul>\n<li><code>getDate()</code>获取一个月的某一天日期(1-31)</li>\n<li><code>getDay()</code>获取一周中的某一天(0-6)—(星期天是0)</li>\n<li><code>getMonth()</code>获取月份(0-11)</li>\n<li><code>getFullYear()</code>获取四位数字的年份</li>\n<li><code>getHours()</code>获取小时数(0-23)</li>\n<li><code>getMinutes()</code>获取分钟数(0-59)</li>\n<li><code>getSeconds()</code>获取秒数(0-59)</li>\n</ul>\n</li>\n<li>\n<p>set方法组:(<code>设置</code>)</p>\n<ul>\n<li><code>setDate()</code>设置一个月的某一天日期(1-31)</li>\n<li><code>setMonth()</code>设置月份(0-11)</li>\n<li><code>setFullYear()</code>设置四位数字的年份</li>\n<li><code>setHours()</code>设置小时数(0-23)</li>\n<li><code>setDay</code>(这个真<code>没有!!!!</code>,<code>星期是通过设定日期自动计算的</code>)</li>\n<li><code>setFullYear(year，month，day)</code>\n<blockquote>\n<ul>\n<li><code>year</code>:<code>必需</code>表示年份的四位整数。</li>\n<li><code>month</code>:<code>可选</code>,介于 <code>0 ~ 11</code> 之间。如果不填，取系统当月-1为去年的最后一个月,12为明年的第一个月,13为明年的第二个月。</li>\n<li><code>day</code>:<code>可选</code>，表示月中某一天的数值。如果不填，取系统当日本地时间表示。介于 1 ~ 31 之间,0 为上个月最后一天,-1 为上个月最后一天之前的天数,如果当月有31天: 32 为下个月的第一天,如果当月有30天: 32 为下一个月的第二天。</li>\n</ul>\n</blockquote>\n</li>\n<li><code>setHours</code>(<code>hour</code>,<code>min</code>,<code>sec</code>,<code>millisec</code>)\n<blockquote>\n<ul>\n<li>可以有4个参数</li>\n<li>hour:小时</li>\n<li>min:分钟</li>\n<li>sec:秒</li>\n<li>millisec:毫秒</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"字符串的常用方法\">字符串的常用方法</h2>\n<ol>\n<li>\n<p><code>length</code>: 获取字符串的长度</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;中华人民共和国&quot;</span>;</span><br><span class=\"line\">alert( str.length);\t<span class=\"comment\">// 7</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>slice(start[,end])</code>截取字符串，<code>start</code>–开始索引 <code>end</code>–结束索引<br>\n<strong>返回:包含开始位置，不包含结束位置(含头不含尾)</strong></p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;中华人民共和国&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = str.slice(<span class=\"number\">2</span>,<span class=\"number\">4</span>);<span class=\"comment\">//人民</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>substring(start [,end])</code>截取字符串，<code>start</code>:开始的索引位置,<code>end</code>: 结束的索引位置(不写到末尾)</p>\n<p><strong>返回:包含开始位置，不包含结束位置(含头不含尾)</strong></p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;中华人民共和国&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = str.substr(<span class=\"number\">2</span>,<span class=\"number\">4</span>);\t<span class=\"comment\">//人民</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>substr(start[,length])</code>，<code>start</code>:开始的索引位置,取<code>length</code>个字符(不写到末尾)</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;中华人民共和国&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = str.substr(<span class=\"number\">2</span>,<span class=\"number\">5</span>);\t<span class=\"comment\">//人民共和国</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>split()</code>，按条件分割字符串，返回一个字符串数组</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;中华人民共和国&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">&quot;&quot;</span>);\t <span class=\"comment\">//[&quot;中&quot;, &quot;华&quot;, &quot;人&quot;, &quot;民&quot;, &quot;共&quot;, &quot;和&quot;,&quot;国&quot;]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&quot;杏|石|口|路|81|号&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = str1.split(<span class=\"string\">&quot;|&quot;</span>);\t <span class=\"comment\">//[&quot;杏&quot;, &quot;石&quot;, &quot;口&quot;, &quot;路&quot;, &quot;81&quot;, &quot;号&quot;]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>indexOf()</code>:在父串中首次出现的位置索引，从0开始！没有就返回-1</p>\n</li>\n<li>\n<p><code>lastIndexOf()</code>:倒序查找</p>\n</li>\n<li>\n<p><code>charAt(index)</code>:获取指定索引的字符</p>\n</li>\n<li>\n<p><code>toLowerCase()</code>:转小写</p>\n</li>\n<li>\n<p><code>toUpperCase()</code>:转大写</p>\n</li>\n</ol>\n<h2 id=\"数组\">数组</h2>\n<blockquote>\n<p>Array (数组)对象用于在单个的变量中存储多个值。数组可存放任意数据类型，并通过索引来访问每个元素。</p>\n</blockquote>\n<h3 id=\"数组的声明\">数组的声明</h3>\n<ol>\n<li>\n<p>先声明再赋值:</p>\n<ul>\n<li>声明方式1:var arr = new Array();  // 可根据需要在( )中指定长度</li>\n<li>声明方式2:var arr = [];</li>\n</ul>\n<blockquote>\n<p>赋值:数组名[索引] = 值;   // arr[0] = 10;</p>\n</blockquote>\n</li>\n<li>\n<p>直接声明并赋值</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(“值<span class=\"number\">1</span>”,,,,,,“值N”);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"数组的长度-数组名-length\">数组的长度:<code>数组名.length</code></h3>\n<h3 id=\"数组的遍历方式\">数组的遍历方式</h3>\n<ol>\n<li>\n<p>循环遍历</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.write(arr[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>直接输出数组名</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.write(arr);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"数组的常用方法\">数组的常用方法:</h3>\n<ol>\n<li>\n<p><code>join()</code>: 用指定的元素对数组进行分割。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">10</span>,<span class=\"number\">20</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(arr.join(“*”));  <span class=\"comment\">// 10*20*30</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>indexOf</code>:搜索一个指定的元素的位置，如未找到返回 -1；</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">10</span>,<span class=\"number\">20</span>,<span class=\"string\">&quot;30&quot;</span>,<span class=\"string\">&quot;abc&quot;</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.indexOf(<span class=\"number\">10</span>)); <span class=\"comment\">//元素10的索引为0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.indexOf(<span class=\"number\">30</span>)); <span class=\"comment\">//元素30未找到，返回-1</span></span><br><span class=\"line\"><span class=\"comment\">//注意:数字30和字符串&quot;30&quot;是不同元素</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>concat()</code>:把当前的数组 和 另一个数组连接起来，并返回一个新的 数组；</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> newArr = arr1.concat(arr2,<span class=\"string\">&quot;再次添加&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr); <span class=\"comment\">//[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,1,2,3,&quot;再次添加&quot;];</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1); <span class=\"comment\">//[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>push()</code>:向数组的末尾添加若干元素</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pop(): 把数组的最后一个元素删除掉</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">arr.push(<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">//[1,2,&quot;a&quot;,&quot;b&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr.pop(); <span class=\"comment\">//返回“b”;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[1,2,&quot;a&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr.pop();</span><br><span class=\"line\">arr.pop();</span><br><span class=\"line\">arr.pop();  <span class=\"comment\">//连续3次pop，空数组继续pop不会报错</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//打印[]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>unshift()</code>: 向数组前面添加若干元素</p>\n</li>\n<li>\n<p><code>shift()</code>: 则把数组的第一个元素删除掉</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">arr.unshift(<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>); <span class=\"comment\">//返回新长度 4</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">//打印[&quot;a&quot;,&quot;b&quot;,1,2]</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr.shift();<span class=\"comment\">//返回&quot;a&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//打印[&quot;b&quot;,1,2]</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr.shift();arr.shift();arr.shift(); <span class=\"comment\">//连续3次</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//打印[]</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr.shift(); <span class=\"comment\">//空数组继续删除不报错，返回undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//打印[]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>slice()</code>: 截取数组的部分元素，然后返回一个新的数组</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>,<span class=\"string\">&quot;d&quot;</span>,<span class=\"string\">&quot;e&quot;</span>,<span class=\"string\">&quot;f&quot;</span>,<span class=\"string\">&quot;g&quot;</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.slice(<span class=\"number\">0</span>,<span class=\"number\">3</span>)); <span class=\"comment\">//从索引0开始，到索引3结束，但不包括3:[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.slice(<span class=\"number\">3</span>));  <span class=\"comment\">//从索引3开始到结束:&quot;d&quot;,&quot;e&quot;,&quot;f&quot;,&quot;g&quot;</span></span><br><span class=\"line\">如果不给slice()传递任何参数，他就会从头到尾截取所有元素。利用这一点，可以很容易的复制一份新的数组</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> aCopy = arr.slice();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(aCopy); <span class=\"comment\">//[1,2,3]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>sort()</code>: 可以对当前数组排序</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>,<span class=\"string\">&quot;a&quot;</span>];</span><br><span class=\"line\">arr.sort();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">//[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>reverse()</code>: 把整个数组的元素给掉个个，也就是反转</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&quot;one&quot;</span>,<span class=\"string\">&quot;two&quot;</span>,<span class=\"string\">&quot;three&quot;</span>];</span><br><span class=\"line\">arr.reverse();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[&quot;three&quot;,&quot;two&quot;,&quot;one&quot;]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>join()</code>: 把数组的每个元素用指定的字符串连接起来，然后新的字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">arr.join(<span class=\"string\">&quot;-&quot;</span>); <span class=\"comment\">//&quot;a-b-c-1-2-3&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>splice()</code>: 是修改数组的“万能方法”，他可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//splice(索引值，删除数量，&quot;值1&quot;，&quot;值2&quot;);</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&quot;苹果&quot;</span>,<span class=\"string\">&quot;橘子&quot;</span>,<span class=\"string\">&quot;香蕉&quot;</span>,<span class=\"string\">&quot;芋头&quot;</span>,<span class=\"string\">&quot;桂圆&quot;</span>,<span class=\"string\">&quot;山楂&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//从索引2开始删除3个元素，然后再添加两个元素</span></span><br><span class=\"line\">arr.splice(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"string\">&quot;白梨&quot;</span>,<span class=\"string\">&quot;西瓜&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// &quot;苹果&quot;,&quot;橘子&quot;,&quot;白梨&quot;,&quot;西瓜&quot;,&quot;山楂&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//只删除，不添加</span></span><br><span class=\"line\">arr.splice(<span class=\"number\">2</span>,<span class=\"number\">2</span>);  <span class=\"comment\">//&quot;白梨&quot;,&quot;西瓜&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//&quot;苹果&quot;,&quot;橘子&quot;,&quot;山楂&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//只添加，不删除</span></span><br><span class=\"line\">arr.splice(<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"string\">&quot;白梨&quot;</span>,<span class=\"string\">&quot;西瓜&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">// &quot;苹果&quot;,&quot;橘子&quot;,&quot;白梨&quot;,&quot;西瓜&quot;,&quot;山楂&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Math的常用方法\">Math的常用方法</h2>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>abs()</td>\n<td>绝对值 （去除正负）</td>\n</tr>\n<tr>\n<td>random()</td>\n<td>随机数，0-1之间的随机数，1不会出现</td>\n</tr>\n<tr>\n<td>round()</td>\n<td>四舍五入</td>\n</tr>\n<tr>\n<td>floor(x)</td>\n<td>下舍入(向下取整)–地板</td>\n</tr>\n<tr>\n<td>ceil(x)</td>\n<td>上舍入(向上取整)–天花板</td>\n</tr>\n<tr>\n<td>max(x,y)</td>\n<td>x 和 y 中的最大值</td>\n</tr>\n<tr>\n<td>min(x,y)</td>\n<td>x 和 y 中的最小值</td>\n</tr>\n<tr>\n<td>cos(x)</td>\n<td>的余弦</td>\n</tr>\n<tr>\n<td>sin(x)</td>\n<td>x的正弦</td>\n</tr>\n<tr>\n<td>sqrt(x)</td>\n<td>返回x的平方根</td>\n</tr>\n<tr>\n<td>pow(3,4)</td>\n<td>返回3的4次方</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Math函数的属性：<code>PI</code>  圆周率。使用方法：<code>Math.PI</code></strong></p>\n<h2 id=\"全局对象中的常用方法（强制转换）\">全局对象中的常用方法（强制转换）</h2>\n<ol>\n<li><code>isNaN()</code>:判断是否是数字，不是数字返回true，是数字返回false;(<code>isNaN:is not a number</code>)</li>\n<li><code>eval()</code>把字符串里面的数字进行计算</li>\n<li><code>parseFloat()</code>把字符串转换为小数</li>\n<li><code>parseInt()</code>把字符串转换为整数</li>\n</ol>\n<h2 id=\"函数的定义、调用\">函数的定义、调用</h2>\n<ol>\n<li>函数的概念</li>\n</ol>\n<blockquote>\n<p>函数是ECMAScript的核心，包含一些代码，只有被调用以后才会执行。函数是对象数据类型的一种。</p>\n</blockquote>\n<ol start=\"2\">\n<li>\n<p>定义函数的语法：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> 函数名(<span class=\"params\">参数</span>)</span>&#123;</span><br><span class=\"line\">函数体(也称为：方法体);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>函数的调用</p>\n<blockquote>\n<p>函数名(参数值);</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"正则表达式\">正则表达式</h2>\n<ol>\n<li>\n<p>正则表达式的概念</p>\n<blockquote>\n<p><code>RegExp</code>（正则表达式）是一个对象，就是用一个“字符串”来描述一个特征，然后去校验另一个“字符串”是否符合该特征。主要实现对<code>字符串的匹配</code>、<code>分割</code>、<code>查找</code>、<code>替换</code>、<code>校验</code>等操作。</p>\n</blockquote>\n</li>\n<li>\n<p>元字符<br>\n<strong>正则模式当中的元字符，通常都具有特殊的含义</strong></p>\n<table>\n<thead>\n<tr>\n<th>元字符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a-z</td>\n<td>英文小写字母</td>\n</tr>\n<tr>\n<td>A-Z</td>\n<td>英文大写字母</td>\n</tr>\n<tr>\n<td>0-9</td>\n<td>数字</td>\n</tr>\n<tr>\n<td>\\r  \\n \\t</td>\n<td>非打印字符</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>数字，相当于0-9</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>\\d  取反</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>字母 数字 下划线</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>\\w  取反</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>空白字符</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>非空白字符</td>\n</tr>\n<tr>\n<td>[  ]</td>\n<td>任意匹配[ ]中单个字符</td>\n</tr>\n<tr>\n<td>.</td>\n<td>匹配任意字符（换行符除外）</td>\n</tr>\n<tr>\n<td>{n}</td>\n<td>匹配n次</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td>匹配至少n次</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td>至少n次，最多m次</td>\n</tr>\n<tr>\n<td>*</td>\n<td>匹配0个或多个，相当于{0,}</td>\n</tr>\n<tr>\n<td>+</td>\n<td>匹配1个或多个，相当于{1,}</td>\n</tr>\n<tr>\n<td>?</td>\n<td>匹配0个或1个，相当于{0,1}</td>\n</tr>\n<tr>\n<td>^</td>\n<td>1、匹配正则开头  2、放在[^]，内容取反</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配正则结尾</td>\n</tr>\n<tr>\n<td>|</td>\n<td>匹配 | 两侧任选其一</td>\n</tr>\n<tr>\n<td>(  )</td>\n<td>1.  分组 2.子存储</td>\n</tr>\n</tbody>\n</table>\n<p>**注意：**正则需要转义字符： ( ) { } ? * + . [ ] \\ / ^ $ |</p>\n</li>\n<li>\n<p>正则的定义：</p>\n<ol>\n<li>方式1：var re = /正则内容/;</li>\n<li>方式2：var re = new RegExp(正则内容);</li>\n</ol>\n</li>\n<li>\n<p>test方法：检索字符串中指定的值。返回 true 或 false。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  txt=<span class=\"string\">&quot;this a cat, that a dog&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span>  re=<span class=\"regexp\">/cat/</span>;</span><br><span class=\"line\">alert(re.test(txt));   <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "js",
                "JavaScript基础"
            ]
        }
    ]
}