{
    "version": "https://jsonfeed.org/version/1",
    "title": "Miraitowa • All posts by \"jquery\" tag",
    "description": "永远期待明亮的未来,一个收藏回忆记录成长的地方...",
    "home_page_url": "https://miraitowa.cc",
    "items": [
        {
            "id": "https://miraitowa.cc/post/970c811f.html",
            "url": "https://miraitowa.cc/post/970c811f.html",
            "title": "jQuery 基础拾遗",
            "date_published": "2021-05-07T11:04:03.000Z",
            "content_html": "<h2 id=\"核心概念和知识点\">核心概念和知识点</h2>\n<h3 id=\"什么是jQuery\">什么是jQuery</h3>\n<ul>\n<li>jQuery 是对javascript的一种封装–js的函数库。</li>\n<li>用于客户端的开发，由美国人在2001年1月推出。</li>\n</ul>\n<h3 id=\"jQuery与javascript的区别\">jQuery与javascript的区别</h3>\n<ol>\n<li>本质上的区别：jQuery是一个函数库，基于js语言编写出来的框架，实质上还是属于js。</li>\n<li>代码书写不同，jq更简单。</li>\n<li>使用方法不同：使用jQuery和javascript分别加载DOM,<code>js只执行一次</code>，<code>jq可以执行多次</code>。</li>\n<li>获取class的方法不同。js没有默认的获取方式，jq可以通过<code>$(&quot;.类名&quot;)</code>来获取</li>\n</ol>\n<h3 id=\"jQuery的优势\">jQuery的优势</h3>\n<ol>\n<li>轻量级</li>\n<li>对浏览器的兼容性好</li>\n<li>强大的选择器</li>\n<li>完善的ajax</li>\n<li>丰富的API文档和插件等</li>\n</ol>\n<h3 id=\"熟悉使用jQuery\">熟悉使用jQuery</h3>\n<ol>\n<li>\n<p>获取相关的js文件</p>\n<ul>\n<li>jquery-xxx.js 与 jquery-xxx.min.js区别：\n<ol>\n<li>jquery-xxx.js：开发版本。给程序员看的，有良好的缩进和注释。体积大一些</li>\n<li>jquery-xxx.min.js：生产版本。没有缩进。体积小一些。程序加载更快</li>\n</ol>\n</li>\n<li>引用 在页面上引用js文件</li>\n<li>基本使用语法:$(“选择器名”).操作</li>\n<li>jQuery的文档就绪(加载)三种写法：</li>\n</ul>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*方法1*/</span></span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  选择对象进行操作</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*方法2*/</span></span><br><span class=\"line\">$().ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;              </span><br><span class=\"line\">  选择对象进行操作</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*方法3*/</span></span><br><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;   <span class=\"comment\">// 此方法最简洁</span></span><br><span class=\"line\">  选择对象进行操作</span><br><span class=\"line\">&#125;); </span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"window-onload和-function-区别\">window.onload和$(function)区别</h3>\n<ul>\n<li>window.onload 只能定义一次,如果定义多次，后边的会将前边的覆盖掉。</li>\n<li>$(function)可以定义多次的。</li>\n</ul>\n<h3 id=\"jQuery对象与DOM对象的异同\">jQuery对象与DOM对象的异同</h3>\n<h4 id=\"什么是jQuery对象\">什么是jQuery对象?</h4>\n<blockquote>\n<p>通过jQuery包装DOM(文档)对象后产生的对象，凡是在$(“”)中的都属于jQuery对象。</p>\n</blockquote>\n<h4 id=\"什么是DOM对象？\">什么是DOM对象？</h4>\n<blockquote>\n<p>页面中元素的集合就是文档对象。</p>\n</blockquote>\n<div class=\"note orange no-icon flat\"><p>注意 🐟<br>\n1. jQuery对象与文档对象不能混合使用。<br>\n2. jQuery对象不能使用文档对象的属性及方法，同理文档对象也是。</p>\n</div>\n<div class=\"note orange no-icon flat\"><p>注意 🐱<br>\nDOM(文档)对象与jQuery对象是可以相互转换的<br>\njs转jq：在dom对象的最外层用$()进行包裹即可。<br>\njq转js：先获取jq对象:var $jq=$(“选择器名”); $jq.get(索引);</p>\n</div>\n<h3 id=\"jQuery库与其他库出现冲突问题-释放-的控制权\">jQuery库与其他库出现冲突问题(释放$的控制权)</h3>\n<ol>\n<li>\n<p>方法一：在代码的第一行加入:<code>jQuery.noConflict()</code>;释放了jQuery的$含义，如果仍需使用，需把$改为jQuery。</p>\n</li>\n<li>\n<p>方法二</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> $jq=jQuery.noConflict();   <span class=\"comment\">/*赋值为一个变量*/</span></span><br><span class=\"line\">$jq(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;     </span><br><span class=\"line\">    正常使用</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"jQuery-选择器\">jQuery 选择器</h2>\n<h3 id=\"jQuery选择器与CSS选择器的区别\">jQuery选择器与CSS选择器的区别</h3>\n<ol>\n<li>jQuery与CSS是两种不同的语言，jQuery是一个js框架，CSS是层叠样式表，所以两者本质上是不同的。</li>\n<li>两者有一定交集，都是被网页或浏览器解析的语言，而jQuery可以通过修改浏览器的dom对象来实现对CSS的修改或控制。</li>\n</ol>\n<div class=\"note orange no-icon flat\"><p>总结，jQuery选择器应用于js中，CSS选择器用于CSS中，只是两者有时使用相同的id标识来选择对象。<br>\njQuery选择器包含了CSS 1, CSS 2, CSS 3 中的绝大多数选择器。</p>\n</div>\n<h3 id=\"jQuery选择器的优点\">jQuery选择器的优点</h3>\n<ol>\n<li>写法简洁</li>\n<li>继承了CSS选择器的风格，支持CSS1–CSS3选择器</li>\n<li>完善的处理机制可以避免浏览器报错，比单纯的CSS功能更强大，还可兼容不同的浏览器。</li>\n</ol>\n<h3 id=\"jQuery选择器的分类\">jQuery选择器的分类</h3>\n<ul>\n<li>基本选择器</li>\n<li>层次选择器</li>\n<li>过滤选择器</li>\n<li>表单选择器</li>\n</ul>\n<h3 id=\"基本选择器\">基本选择器</h3>\n<table>\n<thead>\n<tr>\n<th>选择器名</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id选择器：  #id</td>\n<td>根据id获取元素</td>\n<td>$(“#test”)</td>\n</tr>\n<tr>\n<td>类选择器：  .class</td>\n<td>根据类名获取元素</td>\n<td>$(“.test”)</td>\n</tr>\n<tr>\n<td>元素选择器:  element</td>\n<td>根据元素名称获取元素</td>\n<td>$(“p”)</td>\n</tr>\n<tr>\n<td>所有元素选择器： *</td>\n<td>获取所有元素</td>\n<td>$(“*”)</td>\n</tr>\n<tr>\n<td>并集选择器： s1,s2…</td>\n<td>将选择的所有元素合并</td>\n<td>$(“div, span”)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery的层次选择器\">jQuery的层次选择器</h3>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>语法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>后代选择器</td>\n<td><code>$(&quot;A  B &quot;)</code></td>\n<td style=\"text-align:left\">选择A元素内部的所有B元素</td>\n</tr>\n<tr>\n<td>子选择器</td>\n<td><code>$(&quot;A &gt; B&quot;)</code></td>\n<td style=\"text-align:left\">选择A元素内部的所有B子元素</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery的属性选择器\">jQuery的属性选择器</h3>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>语法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>属性名称选择器</td>\n<td>$(“A[属性名]”)</td>\n<td style=\"text-align:left\">包含指定属性的选择器</td>\n</tr>\n<tr>\n<td>属性选择器</td>\n<td>$(“A[属性名=‘值’]”)</td>\n<td style=\"text-align:left\">包含指定属性等于指定值的选择器</td>\n</tr>\n<tr>\n<td>复合属性选择器</td>\n<td>$(“A[属性名=‘值’][]…”)</td>\n<td style=\"text-align:left\">包含多个属性条件的选择器</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery-过滤选择器\">jQuery 过滤选择器</h3>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>语法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>首元素选择器</td>\n<td>:first</td>\n<td>获得选择的元素中的第一个元素</td>\n</tr>\n<tr>\n<td>尾元素选择器</td>\n<td>:last</td>\n<td>获得选择的元素中的最后一个元素&lt;</td>\n</tr>\n<tr>\n<td>非元素选择器</td>\n<td>:not(selector)</td>\n<td>不包括指定内容的元素</td>\n</tr>\n<tr>\n<td>偶数选择器</td>\n<td>:even</td>\n<td>偶数，从 0 开始计数</td>\n</tr>\n<tr>\n<td>奇数选择器</td>\n<td>:odd</td>\n<td>奇数，从 0 开始计数</td>\n</tr>\n<tr>\n<td>等于索引选择器</td>\n<td>:eq(index)</td>\n<td>指定索引元素</td>\n</tr>\n<tr>\n<td>大于索引选择器</td>\n<td>:gt(index)</td>\n<td>大于指定索引元素</td>\n</tr>\n<tr>\n<td>小于索引选择器</td>\n<td>:lt(index)</td>\n<td>小于指定索引元素</td>\n</tr>\n<tr>\n<td>标题选择器</td>\n<td>:header</td>\n<td>获得标题（h1~h6）元素，固定写法</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jquery-表单过滤选择器\">jquery 表单过滤选择器</h3>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>语法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>可用元素选择器</td>\n<td>:enabled</td>\n<td>获得可用元素</td>\n</tr>\n<tr>\n<td>不可用元素选择器</td>\n<td>:disabled</td>\n<td>获得不可用元素</td>\n</tr>\n<tr>\n<td>单选/复选框选中选择器</td>\n<td>:checked</td>\n<td>获得单选/复选框选中的元素</td>\n</tr>\n<tr>\n<td>下拉框选中选择器</td>\n<td>:selected</td>\n<td>获得下拉框选中的元素</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery表单选择器\">jQuery表单选择器</h3>\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$(“:input”)</td>\n<td>选取所有的<code>&lt;input&gt;</code>,<code>&lt;textarea&gt;</code>,<code>&lt;select&gt;</code>,<code>&lt;button&gt;</code>元素</td>\n</tr>\n<tr>\n<td>$(“:text”)</td>\n<td>选取所有的单行文本框</td>\n</tr>\n<tr>\n<td>$(“:password”)</td>\n<td>选取所有的密码框</td>\n</tr>\n<tr>\n<td>$(“:radio”)</td>\n<td>选取所有的单选框</td>\n</tr>\n<tr>\n<td>$(“:checkbox”)</td>\n<td>选取所有的多选框</td>\n</tr>\n<tr>\n<td>$(“:submit”)</td>\n<td>选取所有的提交按钮</td>\n</tr>\n<tr>\n<td>$(“:button”)</td>\n<td>选取所有的按钮</td>\n</tr>\n<tr>\n<td>$(“:hidden”)</td>\n<td>选取所有的不可见元素</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"jQuery-DOM操作\">jQuery DOM操作</h2>\n<h3 id=\"jQuery节点添加与删除\">jQuery节点添加与删除</h3>\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>append()</td>\n<td>对象1.append(对象2)</td>\n<td>将对象2添加到对象1元素内部，并且在末尾</td>\n</tr>\n<tr>\n<td>appendTo()</td>\n<td>对象1.appendTo(对象2):</td>\n<td>将对象1添加到对象2内部，并且在末尾</td>\n</tr>\n<tr>\n<td>prepend()</td>\n<td>对象1.prepend(对象2):</td>\n<td>将对象2添加到对象1元素内部，并且在开头</td>\n</tr>\n<tr>\n<td>prependTo()</td>\n<td>对象1.prependTo(对象2):</td>\n<td>将对象1添加到对象2内部，并且在开头</td>\n</tr>\n<tr>\n<td>empty()</td>\n<td>对象.empty():</td>\n<td>将对象的后代元素全部清空，但是保留当前对象以及其属性节点</td>\n</tr>\n<tr>\n<td>after()</td>\n<td>对象1.after(对象2)</td>\n<td>将对象2添加到对象1后边。对象1和对象2是兄弟关系</td>\n</tr>\n<tr>\n<td>before()</td>\n<td>对象1.before(对象2)</td>\n<td>将对象2添加到对象1前边。对象1和对象2是兄弟关系</td>\n</tr>\n<tr>\n<td>insertAfter()</td>\n<td>对象1.insertAfter(对象2)</td>\n<td>将对象1添加到对象2后边。对象1和对象2是兄弟关系</td>\n</tr>\n<tr>\n<td>insertBefore()</td>\n<td>对象1.insertBefore(对象2)</td>\n<td>将对象1添加到对象2前边。对象1和对象2是兄弟关系</td>\n</tr>\n<tr>\n<td>remove()</td>\n<td>对象.remove()</td>\n<td>将对象删除掉</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery节点的复制、替换、包裹\">jQuery节点的复制、替换、包裹</h3>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>对象A.clone()</td>\n<td>复制A对象</td>\n</tr>\n<tr>\n<td>对象A.replaceWith(对象B)</td>\n<td>把&quot;A对象&quot;替换为&quot;B对象&quot;</td>\n</tr>\n<tr>\n<td>对象A.replaceAll(对象B)</td>\n<td>使用&quot;A对象&quot;替换&quot;B对象&quot;</td>\n</tr>\n<tr>\n<td>标签A.wrap(标签B)</td>\n<td>B标签分别包裹住每一个A标签</td>\n</tr>\n<tr>\n<td>标签A.wrapAll(标签B)</td>\n<td>B标签包裹住所有A标签</td>\n</tr>\n<tr>\n<td>标签A.wrapInner(标签B)</td>\n<td>B标签分别包裹住A标签内的所有文本内容</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery-节点属性操作\">jQuery 节点属性操作</h3>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>attr(“属性名”)</td>\n<td>获取属性值</td>\n</tr>\n<tr>\n<td>attr(“属性名”,“属性值”)</td>\n<td>设置属性值</td>\n</tr>\n<tr>\n<td>removeAttr(“属性名”)</td>\n<td>移除属性</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery-节点样式操作\">jQuery 节点样式操作</h3>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>addClass(样式名)</td>\n<td>添加样式</td>\n</tr>\n<tr>\n<td>removeClass(样式名)</td>\n<td>删除样式</td>\n</tr>\n<tr>\n<td>toggleClass(样式名)</td>\n<td>切换样式</td>\n</tr>\n<tr>\n<td>css(“样式名”,“属性”)</td>\n<td>添加单个样式</td>\n</tr>\n<tr>\n<td>css({“样式名1”:“属性1” , “样式名2”:“属性2”…})</td>\n<td>添加多个样式</td>\n</tr>\n<tr>\n<td>hasClass(样式名)</td>\n<td>判断样式是否存在</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery-html-text-val-方法\">jQuery html(),  text(),  val()方法</h3>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>html()方法</td>\n<td>用于设置或获取某个元素中的html内容</td>\n</tr>\n<tr>\n<td>text()方法</td>\n<td>用于设置或获取某个元素中的文本内容</td>\n</tr>\n<tr>\n<td>val()方法</td>\n<td>用于设置或获取某个元素的值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"遍历节点\">遍历节点</h3>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children()</td>\n<td>获取当前的元素的子元素集合(父亲找儿子)</td>\n</tr>\n<tr>\n<td>find()</td>\n<td>获取当前的元素的所有后代元素集合(祖宗找后代)</td>\n</tr>\n<tr>\n<td>parent()</td>\n<td>获取当前元素的父元素集合(儿子找父亲)</td>\n</tr>\n<tr>\n<td>parents()</td>\n<td>获取当前元素的所有前辈元素集合(后辈找前辈)</td>\n</tr>\n<tr>\n<td>siblings()</td>\n<td>获取当前元素的所有同级元素集合(同辈找同辈)</td>\n</tr>\n<tr>\n<td>next()</td>\n<td>获取当前元素的下一个同级元素</td>\n</tr>\n<tr>\n<td>prev()</td>\n<td>获取当前元素的上一个同级元素</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jQuery-CSS的DOM操作\">jQuery CSS的DOM操作</h3>\n<table>\n<thead>\n<tr>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>css()方法</td>\n<td>设置或获取元素的样式属性</td>\n</tr>\n<tr>\n<td>height(),width()</td>\n<td>设置或获取高度、宽度属性</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"jQuery中的事件与动画\">jQuery中的事件与动画</h2>\n<h3 id=\"jQuery中的遍历补充\">jQuery中的遍历补充</h3>\n<ol>\n<li>\n<p>jQuery对象.each(callback)<br>\n语法：<code>jQuery对象.each(function(index,element)&#123;&#125;)</code>;</p>\n<ul>\n<li>index:就是元素在集合中的索引</li>\n<li>element：就是集合中的每一个元素对象</li>\n<li>this：获取到的当前元素对象</li>\n<li>callback：回调函数</li>\n</ul>\n</li>\n<li>\n<p><code>$.each(object, [callback])</code></p>\n</li>\n<li>\n<p>for…of:<code>for(元素对象 of 容器对象)</code></p>\n</li>\n</ol>\n<h3 id=\"jQuery中的事件绑定\">jQuery中的事件绑定</h3>\n<ol>\n<li>jQuery的标准绑定方式\n<ul>\n<li>jQuery对象.事件方法(回调函数)；</li>\n<li>注意：如果调用事件方法，不传递回调函数，则会触发浏览器默认行为。</li>\n<li>补充： 表单对象.submit();//让表单提交</li>\n</ul>\n</li>\n<li>on()或者bind()绑定事件和off()或者unbind()解除绑定\n<ul>\n<li>jQuery对象.on(“事件名称”,回调函数)</li>\n<li>jQuery对象.off(“事件名称”)</li>\n<li>如果off方法不传递任何参数，则将组件上的所有事件全部解绑</li>\n</ul>\n</li>\n<li>事件切换1：toggle(fn1,fn2,…)方法：模拟鼠标连续点击事件，对里面的函数进行切换。\n<ul>\n<li>jQuery对象.toggle(fn1,fn2…)</li>\n<li>当单击jQuery对象对应的组件后，会执行fn1.第二次点击会执行fn2…</li>\n<li>注意：1.9版本之后 .toggle() 方法删除,jQuery Migrate（迁移）插件可以恢复此功能。</li>\n</ul>\n</li>\n<li>事件切换2：hover(enter,leave)方法：模拟鼠标悬停事件，鼠标移到元素上触发第一个enter()函数，鼠标移除触发leave()函数</li>\n</ol>\n<h3 id=\"jQuery中的动画\">jQuery中的动画</h3>\n<ol>\n<li>显示/隐藏：show() / hide()组合方法：toggle()</li>\n<li>淡入/淡出：fadeIn() / fadeOut()组合方法：fadeToggle()</li>\n<li>滑入/滑出：slideUp() / slideDown()组合方法：slideToggle()</li>\n<li>自定义动画：animate()</li>\n</ol>\n",
            "tags": [
                "js",
                "jQuery"
            ]
        }
    ]
}