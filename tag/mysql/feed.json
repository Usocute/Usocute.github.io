{
    "version": "https://jsonfeed.org/version/1",
    "title": "脆弱星球 • All posts by \"mysql\" tag",
    "description": "立于皓月之边,不弱星光之势",
    "home_page_url": "https://eliauk.cc",
    "items": [
        {
            "id": "https://eliauk.cc/post/87f78bf4.html",
            "url": "https://eliauk.cc/post/87f78bf4.html",
            "title": "MySQL 触发器",
            "date_published": "2020-09-30T07:01:04.000Z",
            "content_html": "<h2 id=\"mysql-触发器\"><a class=\"markdownIt-Anchor\" href=\"#mysql-触发器\">#</a> MySQL 触发器</h2>\n<h4 id=\"触发器定义与用法实例\"><a class=\"markdownIt-Anchor\" href=\"#触发器定义与用法实例\">#</a> 触发器定义与用法实例</h4>\n<p><strong>语法</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> 触发器名称  <span class=\"hljs-comment\">--触发器必须有名字，最多64个字符，可能后面会附有分隔符.它和MySQL中其他对象的命名方式基本相象.</span><br>&#123; <span class=\"hljs-keyword\">BEFORE</span> | <span class=\"hljs-keyword\">AFTER</span> &#125;  <span class=\"hljs-comment\">--触发器有执行的时间设置：可以设置为事件发生前或后。</span><br>&#123; <span class=\"hljs-keyword\">INSERT</span> | <span class=\"hljs-keyword\">UPDATE</span> | <span class=\"hljs-keyword\">DELETE</span> &#125;  <span class=\"hljs-comment\">--同样也能设定触发的事件：它们可以在执行insert、update或delete的过程中触发。</span><br><span class=\"hljs-keyword\">ON</span> 表名称  <span class=\"hljs-comment\">--触发器是属于某一个表的:当在这个表上执行插入、 更新或删除操作的时候就导致触发器的激活. 我们不能给同一张表的同一个事件安排两个触发器。</span><br><span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span>  <span class=\"hljs-comment\">--触发器的执行间隔：FOR EACH ROW子句通知触发器 每隔一行执行一次动作，而不是对整个表执行一次。</span><br>&lt;触发器<span class=\"hljs-keyword\">SQL</span>语句&gt;  <span class=\"hljs-comment\">--触发器包含所要触发的SQL语句：这里的语句可以是任何合法的语句， 包括复合语句，但是这里的语句受的限制和函数的一样。</span><br></code></pre></td></tr></table></figure>\n<p><strong>实例准备工作</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 创建表tab1</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> tab1;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> tab1(<br>  tab1_id <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">11</span>)<br>);<br><span class=\"hljs-comment\">-- 创建表tab2</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> tab2;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> tab2(<br>  tab2_id <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">11</span>)<br>);<br></code></pre></td></tr></table></figure>\n<ul>\n<li>实例 1：新增一条，触发另外一张表的新增</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 创建触发器:t_afterinsert_on_tab1</span><br><span class=\"hljs-comment\">-- 作用：增加tab1表记录后自动将记录增加到tab2表中</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TRIGGER</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> t_afterinsert_on_tab1;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> t_afterinsert_on_tab1<br><span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">ON</span> tab1<br><span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span><br><span class=\"hljs-keyword\">BEGIN</span><br>   <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> tab2(tab2_id) <span class=\"hljs-keyword\">values</span>(new.tab1_id);<br><span class=\"hljs-keyword\">END</span>;<br><span class=\"hljs-comment\">-- 测试一下</span><br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> tab1(tab1_id) <span class=\"hljs-keyword\">values</span>(<span class=\"hljs-string\">&#x27;0001&#x27;</span>);<br><span class=\"hljs-comment\">-- 看看结果</span><br><span class=\"hljs-keyword\">SELECT</span> * <span class=\"hljs-keyword\">FROM</span> tab1;<br><span class=\"hljs-keyword\">SELECT</span> * <span class=\"hljs-keyword\">FROM</span> tab2<br></code></pre></td></tr></table></figure>\n<ul>\n<li>实例 2：删除一条，触发另外一张表的删除</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 创建触发器:t_afterdelete_on_tab1</span><br><span class=\"hljs-comment\">-- 作用：删除tab1表记录后自动将tab2表中对应的记录删去</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TRIGGER</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> t_afterdelete_on_tab1;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> t_afterdelete_on_tab1<br><span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">ON</span> tab1<br><span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span><br><span class=\"hljs-keyword\">BEGIN</span><br>   <span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">from</span> tab2 <span class=\"hljs-keyword\">where</span> tab2_id=old.tab1_id;<br><span class=\"hljs-keyword\">END</span>;<br><span class=\"hljs-comment\">-- 测试一下</span><br><span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">FROM</span> tab1 <span class=\"hljs-keyword\">WHERE</span> tab1_id=<span class=\"hljs-string\">&#x27;0001&#x27;</span>;<br><span class=\"hljs-comment\">-- 看看结果</span><br><span class=\"hljs-keyword\">SELECT</span> * <span class=\"hljs-keyword\">FROM</span> tab1;<br><span class=\"hljs-keyword\">SELECT</span> * <span class=\"hljs-keyword\">FROM</span> tab2;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>实例 3：更新一条，触发另外一张表的更新</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 创建触发器:t_afterupdate_on_tab1</span><br><span class=\"hljs-comment\">-- 作用：修改tab1表记录后自动将tab2表中对应的记录更新</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TRIGGER</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> t_afterupdate_on_tab1;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> t_afterupdate_on_tab1<br><span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-keyword\">UPDATE</span> <span class=\"hljs-keyword\">ON</span> tab1<br><span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span><br><span class=\"hljs-keyword\">BEGIN</span><br>   <span class=\"hljs-keyword\">update</span> tab2 <span class=\"hljs-keyword\">set</span> tab2_id=new.tab1_id <span class=\"hljs-keyword\">where</span> tab2_id=old.tab1_id;<br><span class=\"hljs-keyword\">END</span>;<br><span class=\"hljs-comment\">-- 测试一下</span><br><span class=\"hljs-keyword\">update</span> tab1 <span class=\"hljs-keyword\">set</span> tab1_id=<span class=\"hljs-string\">&#x27;0002&#x27;</span> <span class=\"hljs-keyword\">WHERE</span> tab1_id=<span class=\"hljs-string\">&#x27;0001&#x27;</span>;<br><span class=\"hljs-comment\">-- 看看结果</span><br><span class=\"hljs-keyword\">SELECT</span> * <span class=\"hljs-keyword\">FROM</span> tab1;<br><span class=\"hljs-keyword\">SELECT</span> * <span class=\"hljs-keyword\">FROM</span> tab2;<br></code></pre></td></tr></table></figure>\n<h4 id=\"课后习题\"><a class=\"markdownIt-Anchor\" href=\"#课后习题\">#</a> 课后习题</h4>\n<blockquote>\n<p>1、在 product 表上分别创建 BEFORE INSERT 、 AFTER UPDATE 和 AFTER DELETE 3 个触<br>\n发器，触发器名称分别为 product_bf_insert 、 product_af_update 和 product_af_del 。执行语句部分都是向 operate 表插入操作方法和操作时间。<br>\n2、对 product 表分别执行 INSERT 、 UPDATE 和 DELETE 操作<br>\n 3、删除 product_bf_insert 和 product_af_update 这两个触发器</p>\n</blockquote>\n<h4 id=\"题解代码\"><a class=\"markdownIt-Anchor\" href=\"#题解代码\">#</a> 题解代码</h4>\n<p><strong>建立 operate 和 product 表 并向 product 表中插入数据</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 建表 operate</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> <span class=\"hljs-string\">`operate`</span>;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`operate`</span> (<br>  <span class=\"hljs-string\">`Op_id`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;编号&#x27;</span>,<br>  <span class=\"hljs-string\">`Op_type`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;操作方式&#x27;</span>,<br>  <span class=\"hljs-string\">`Op_time`</span> <span class=\"hljs-built_in\">time</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;操作时间&#x27;</span>,<br>  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`Op_id`</span>),<br>  <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">KEY</span> <span class=\"hljs-string\">`Op_id`</span> (<span class=\"hljs-string\">`Op_id`</span>)<br>) <span class=\"hljs-keyword\">ENGINE</span>=<span class=\"hljs-keyword\">InnoDB</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">CHARSET</span>=utf8;<br><br><span class=\"hljs-comment\">-- 建表 product</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> <span class=\"hljs-string\">`product`</span>;<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`product`</span> (<br>  <span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;产品编号&#x27;</span>,<br>  <span class=\"hljs-string\">`Name`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;产品名称&#x27;</span>,<br>  <span class=\"hljs-string\">`Function`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;产品功能&#x27;</span>,<br>  <span class=\"hljs-string\">`Company`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;生产厂家&#x27;</span>,<br>  <span class=\"hljs-string\">`Address`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">COMMENT</span> <span class=\"hljs-string\">&#x27;家庭住址&#x27;</span>,<br>  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>),<br>  <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">KEY</span> <span class=\"hljs-string\">`id`</span> (<span class=\"hljs-string\">`id`</span>)<br>) <span class=\"hljs-keyword\">ENGINE</span>=<span class=\"hljs-keyword\">InnoDB</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">CHARSET</span>=utf8;<br><br><span class=\"hljs-comment\">-- 插入数据</span><br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> product(<span class=\"hljs-keyword\">id</span>,<span class=\"hljs-string\">`NAME`</span>,<span class=\"hljs-string\">`Function`</span>,Company,Address) <span class=\"hljs-keyword\">VALUES</span><br>\t\t\t\t(<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">&#x27;百度网盘&#x27;</span>,<span class=\"hljs-string\">&#x27;数据存储&#x27;</span>,<span class=\"hljs-string\">&#x27;中国&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>),<br>\t\t\t\t(<span class=\"hljs-number\">2</span>,<span class=\"hljs-string\">&#x27;钉钉&#x27;</span>,<span class=\"hljs-string\">&#x27;协同办公&#x27;</span>,<span class=\"hljs-string\">&#x27;中国&#x27;</span>,<span class=\"hljs-string\">&#x27;杭州&#x27;</span>),<br>\t\t\t\t(<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">&#x27;微信&#x27;</span>,<span class=\"hljs-string\">&#x27;聊天通讯&#x27;</span>,<span class=\"hljs-string\">&#x27;中国&#x27;</span>,<span class=\"hljs-string\">&#x27;深圳&#x27;</span>);<br></code></pre></td></tr></table></figure>\n<p><strong>触发器的创建</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 创建 BEFORE INSERT 触发器</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> product_bf_insert<br><span class=\"hljs-keyword\">BEFORE</span> <span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">on</span> product<br><span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span><br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> operate <span class=\"hljs-keyword\">VALUES</span>(<span class=\"hljs-literal\">NULL</span>,<span class=\"hljs-string\">&#x27;数据插入成功！&#x27;</span>,<span class=\"hljs-built_in\">TIME</span>(<span class=\"hljs-keyword\">NOW</span>()));<br><br><span class=\"hljs-comment\">-- 插入数据</span><br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> product(<span class=\"hljs-keyword\">id</span>,<span class=\"hljs-string\">`NAME`</span>,<span class=\"hljs-string\">`Function`</span>,Company,Address) <span class=\"hljs-keyword\">VALUES</span><br>\t\t\t(<span class=\"hljs-number\">4</span>,<span class=\"hljs-string\">&#x27;抖音&#x27;</span>,<span class=\"hljs-string\">&#x27;影音视听&#x27;</span>,<span class=\"hljs-string\">&#x27;中国&#x27;</span>,<span class=\"hljs-string\">&#x27;北京&#x27;</span>);<br><br><span class=\"hljs-comment\">-- 创建 AFTER UPDATE 触发器</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> product_af_update<br><span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-keyword\">UPDATE</span> <span class=\"hljs-keyword\">on</span> product<br><span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span><br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> operate <span class=\"hljs-keyword\">VALUES</span>(<span class=\"hljs-literal\">NULL</span>,<span class=\"hljs-string\">&#x27;数据更新成功！&#x27;</span>,<span class=\"hljs-built_in\">TIME</span>(<span class=\"hljs-keyword\">NOW</span>()));<br><br><span class=\"hljs-comment\">-- 更新数据</span><br><span class=\"hljs-keyword\">UPDATE</span> product <span class=\"hljs-keyword\">SET</span> Address=<span class=\"hljs-string\">&#x27;北京海淀区&#x27;</span> <span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">id</span>=<span class=\"hljs-number\">1</span>;<br><br><span class=\"hljs-comment\">-- 创建 AFTER DELETE 触发器</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TRIGGER</span> product_af_del<br><span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">on</span> product<br><span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">EACH</span> <span class=\"hljs-keyword\">ROW</span><br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> operate <span class=\"hljs-keyword\">VALUES</span>(<span class=\"hljs-literal\">NULL</span>,<span class=\"hljs-string\">&#x27;数据删除成功！&#x27;</span>,<span class=\"hljs-built_in\">TIME</span>(<span class=\"hljs-keyword\">NOW</span>()));<br><br><span class=\"hljs-comment\">-- 删除数据</span><br><span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">FROM</span> product <span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">id</span>=<span class=\"hljs-number\">4</span>;<br></code></pre></td></tr></table></figure>\n<p><strong>删除触发器</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 删除 product_bf_insert 和 product_af_update 触发器</span><br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TRIGGER</span> product_bf_insert;<br><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TRIGGER</span> product_af_update;<br></code></pre></td></tr></table></figure>",
            "tags": [
                "MySQL",
                "学习笔记",
                "Trigger"
            ]
        },
        {
            "id": "https://eliauk.cc/post/f5a946ac.html",
            "url": "https://eliauk.cc/post/f5a946ac.html",
            "title": "MySQL 视图与索引",
            "date_published": "2020-09-24T07:50:11.000Z",
            "content_html": "<h2>视图</h2> \n### 基本概念\n视图本身是一张虚拟表，不存放任何数据。在使用SQL语句访问视图的时候，获取的数据是MySQL从其它表中生成的，视图和表在同一个命名空间。视图查询数据相对安全，视图可以隐藏一些数据和结构，只让用户看见权限内的数据，使复杂的查询易于理解和使用。\n<h3 id=\"视图用法\"><a class=\"markdownIt-Anchor\" href=\"#视图用法\">#</a> 视图用法</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">#### 基本语法</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">OR</span> <span class=\"hljs-keyword\">REPLACE</span> <span class=\"hljs-keyword\">VIEW</span> view_name <br><span class=\"hljs-keyword\">AS</span> select_statement<br></code></pre></td></tr></table></figure>\n<p><strong>注意事项：表和视图共享数据库中相同的名称空间，因此，数据库不能包含具有相同名称的表和视图。</strong></p>\n<h4 id=\"视图调用\"><a class=\"markdownIt-Anchor\" href=\"#视图调用\">#</a> 视图调用</h4>\n<p><strong>和 MySQL 的表查询基本一致，可以使用各种查询条件。</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span> * <span class=\"hljs-keyword\">FROM</span> user_order_view <span class=\"hljs-keyword\">WHERE</span> user_name=<span class=\"hljs-string\">&#x27;Cicada&#x27;</span>;<br></code></pre></td></tr></table></figure>\n<h4 id=\"查看视图\"><a class=\"markdownIt-Anchor\" href=\"#查看视图\">#</a> 查看视图</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">VIEW</span> user_order_view ;<br></code></pre></td></tr></table></figure>\n<h4 id=\"修改视图\"><a class=\"markdownIt-Anchor\" href=\"#修改视图\">#</a> 修改视图</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">VIEW</span> view_name <span class=\"hljs-keyword\">AS</span> select_statement ;<br></code></pre></td></tr></table></figure>\n<h4 id=\"删除视图\"><a class=\"markdownIt-Anchor\" href=\"#删除视图\">#</a> 删除视图</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">VIEW</span> [<span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span>] view_name ;<br></code></pre></td></tr></table></figure>\n<h3 id=\"视图更新\"><a class=\"markdownIt-Anchor\" href=\"#视图更新\">#</a> 视图更新</h3>\n<p>** 在指定条件允许的情况下，可以通过在视图上操作更新，删除，甚至写入数据，进而更新视图所涉及的相关表。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">UPDATE</span> user_order_view <span class=\"hljs-keyword\">SET</span> user_name=<span class=\"hljs-string\">&#x27;smile&#x27;</span> <span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">id</span>=<span class=\"hljs-string\">&#x27;1&#x27;</span>;<br></code></pre></td></tr></table></figure>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> 如果视图定义时使用聚合函数，分组等特殊操作，则无法更新。</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> MySQL 不支持在视图上创建触发器。</label></p>\n</li>\n</ul>\n<h3 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\">#</a> 注意事项</h3>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\"><label for=\"cbx_2\"> MySQL 并不支持在视图中创建索引，使用视图的时候可能会引发很多查询性能问题</label></li>\n</ul>\n<h2 id=\"索引\"><a class=\"markdownIt-Anchor\" href=\"#索引\">#</a> 索引</h2>\n<h3 id=\"索引的优缺点\"><a class=\"markdownIt-Anchor\" href=\"#索引的优缺点\">#</a> 索引的优缺点</h3>\n<h4 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h4>\n<ul>\n<li>索引大大减小了服务器需要扫描的数据量</li>\n<li>索引可以帮助服务器避免排序和临时表</li>\n<li>索引对于 InnoDB（对索引支持行级锁）非常重要，因为它可以让查询锁更少的元组。</li>\n</ul>\n<h4 id=\"缺点\"><a class=\"markdownIt-Anchor\" href=\"#缺点\">#</a> 缺点</h4>\n<ul>\n<li>虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行 INSERT、UPDATE 和 DELETE。因为更新表时，MySQL 不仅要保存数据，还要保存索引文件。</li>\n<li>建立索引会占用磁盘空间的索引文件。</li>\n<li>如果某个数据列包含许多重复的内容，为它建立索引就没有太大的实际效果。</li>\n<li>对于非常小的表，大部分情况下简单的全表扫描更高效；</li>\n</ul>\n<h3 id=\"索引创建语法\"><a class=\"markdownIt-Anchor\" href=\"#索引创建语法\">#</a> 索引创建语法</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 普通索引</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">index</span> index1 <span class=\"hljs-keyword\">on</span> student (<span class=\"hljs-keyword\">id</span>);<br><br><span class=\"hljs-comment\">-- 唯一索引</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">INDEX</span> index2 <span class=\"hljs-keyword\">on</span> student(<span class=\"hljs-keyword\">id</span>);<br><br><span class=\"hljs-comment\">-- 全文索引</span><br><span class=\"hljs-keyword\">CREATE</span> FULLTEXT <span class=\"hljs-keyword\">INDEX</span> index3 <span class=\"hljs-keyword\">on</span> student(adress(<span class=\"hljs-number\">20</span>));<br><br><span class=\"hljs-comment\">-- 创建单列索引</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">INDEX</span> INDEX5 <span class=\"hljs-keyword\">on</span> student(<span class=\"hljs-keyword\">name</span>(<span class=\"hljs-number\">10</span>));<br><br><span class=\"hljs-comment\">-- 联合索引</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">INDEX</span> INDEX6 <span class=\"hljs-keyword\">ON</span> student (<span class=\"hljs-keyword\">name</span>,<span class=\"hljs-keyword\">id</span>); <br><br><br><span class=\"hljs-comment\">-- 普通索引</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> student <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">INDEX</span> index1(<span class=\"hljs-keyword\">id</span>);<br><br><span class=\"hljs-comment\">-- 唯一索引</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> student <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">INDEX</span> index2(<span class=\"hljs-keyword\">id</span>);<br><br><span class=\"hljs-comment\">-- 全文索引</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> student <span class=\"hljs-keyword\">add</span> FULLTEXT <span class=\"hljs-keyword\">INDEX</span> index3 (<span class=\"hljs-keyword\">NAME</span>(<span class=\"hljs-number\">20</span>));<br><br><span class=\"hljs-comment\">-- 单列索引</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> student <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">INDEX</span> index4 (adress(<span class=\"hljs-number\">20</span>));<br><br><span class=\"hljs-comment\">-- 联合索引</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> student <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">INDEX</span> INDEX5 (<span class=\"hljs-keyword\">name</span>,<span class=\"hljs-keyword\">id</span>);<br></code></pre></td></tr></table></figure>",
            "tags": [
                "MySQL",
                "数据库",
                "View",
                "index"
            ]
        },
        {
            "id": "https://eliauk.cc/post/47c80ad2.html",
            "url": "https://eliauk.cc/post/47c80ad2.html",
            "title": "MySQL 存储过程事务处理",
            "date_published": "2020-09-19T02:24:11.000Z",
            "content_html": "<h2 id=\"存储过程\"><a class=\"markdownIt-Anchor\" href=\"#存储过程\">#</a> 存储过程</h2>\n<h3 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h3>\n<p>存储程序是被存储在服务器中的组合 SQL 语句，经编译创建并保存在数据库中，用户可通过存储过程的名字调用执行。存储过程核心思想就是数据库 SQL 语言层面的封装与重用性。使用存储过程可以较少应用系统的业务复杂性，但是会增加数据库服务器系统的负荷。</p>\n<h3 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\">#</a> 基本语法</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">PROCEDURE</span> sp_name ([proc_parameter[,...]])<br>    [characteristic ...] routine_body<br></code></pre></td></tr></table></figure>\n<h3 id=\"案例\"><a class=\"markdownIt-Anchor\" href=\"#案例\">#</a> 案例</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 查询学生表中性别为男的学生总数</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">PROCEDURE</span> u_pro(<span class=\"hljs-keyword\">IN</span> v_sex <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\">5</span>) <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8 ,<span class=\"hljs-keyword\">OUT</span> <span class=\"hljs-keyword\">num</span> <span class=\"hljs-built_in\">INT</span>)<br>\t<span class=\"hljs-keyword\">BEGIN</span><br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">COUNT</span>(*) <span class=\"hljs-keyword\">INTO</span> <span class=\"hljs-keyword\">num</span> <span class=\"hljs-keyword\">FROM</span> student <span class=\"hljs-keyword\">WHERE</span> v_sex=sex;<br>  <span class=\"hljs-keyword\">end</span><br><br><span class=\"hljs-keyword\">CALL</span> u_pro(<span class=\"hljs-string\">&#x27;男&#x27;</span>,@<span class=\"hljs-keyword\">num</span>);<br><span class=\"hljs-keyword\">SELECT</span> @<span class=\"hljs-keyword\">num</span>;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 计算1+到n的值</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">PROCEDURE</span> addresult(<span class=\"hljs-keyword\">IN</span> n <span class=\"hljs-built_in\">INT</span>)<br><span class=\"hljs-keyword\">BEGIN</span><br>\t<span class=\"hljs-keyword\">DECLARE</span> i <span class=\"hljs-built_in\">INT</span>;<br>\t<span class=\"hljs-keyword\">DECLARE</span> <span class=\"hljs-keyword\">sum</span> <span class=\"hljs-built_in\">INT</span>;<br>\t<span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">sum</span> =<span class=\"hljs-number\">0</span>;<br>\t<span class=\"hljs-keyword\">SET</span> i =<span class=\"hljs-number\">1</span>;<br>\t<br>\tWHILE i&lt;n DO<br>\t<span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">sum</span>=<span class=\"hljs-keyword\">sum</span>+i;<br>\t<span class=\"hljs-keyword\">SET</span> i=i+<span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">WHILE</span>;<br>\t<br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">sum</span> ;<br><span class=\"hljs-keyword\">END</span><br><br><span class=\"hljs-keyword\">call</span> addresult(<span class=\"hljs-number\">50</span>);<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 计算1+到n的值</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">PROCEDURE</span> addresult2(<span class=\"hljs-keyword\">in</span> n <span class=\"hljs-built_in\">INT</span>,<span class=\"hljs-keyword\">out</span> <span class=\"hljs-keyword\">sum</span> <span class=\"hljs-built_in\">INT</span>)<br><span class=\"hljs-keyword\">BEGIN</span><br>\t<span class=\"hljs-keyword\">DECLARE</span> i <span class=\"hljs-built_in\">INT</span>;<br>\t<span class=\"hljs-keyword\">DECLARE</span> <span class=\"hljs-keyword\">sum</span> <span class=\"hljs-built_in\">INT</span>;<br>\t<span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">sum</span> =<span class=\"hljs-number\">0</span>;<br>\t<span class=\"hljs-keyword\">SET</span> i =<span class=\"hljs-number\">1</span>;<br>\t<br>\tWHILE i&lt;n DO<br>\t<span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">sum</span>=<span class=\"hljs-keyword\">sum</span>+i;<br>\t<span class=\"hljs-keyword\">SET</span> i=i+<span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">WHILE</span>;<br>\t<br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">sum</span> ;<br><span class=\"hljs-keyword\">END</span><br><br><span class=\"hljs-keyword\">call</span> addresult2(<span class=\"hljs-number\">50</span>,@<span class=\"hljs-keyword\">sum</span>);<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 判断变量</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">PROCEDURE</span> user_main_pro3(INOUT v_id <span class=\"hljs-built_in\">INT</span>)<br><span class=\"hljs-keyword\">BEGIN</span><br>  <span class=\"hljs-comment\"># 定义变量</span><br>  <span class=\"hljs-keyword\">DECLARE</span> v_count <span class=\"hljs-built_in\">INT</span>(<span class=\"hljs-number\">11</span>);<br>  <span class=\"hljs-comment\"># 判断</span><br>  IF v_id &gt; 3 THEN<br>     <span class=\"hljs-keyword\">SET</span> v_count = <span class=\"hljs-number\">100</span>;<br>  ELSE <br>     <span class=\"hljs-keyword\">SET</span> v_count = <span class=\"hljs-number\">500</span>;<br>  <span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">IF</span>;<br>  <span class=\"hljs-comment\"># 返回赋值</span><br>  <span class=\"hljs-keyword\">SET</span> v_id = v_count;<br><span class=\"hljs-keyword\">END</span><br><br><span class=\"hljs-keyword\">SET</span> @v_id=<span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">call</span> user_main_pro3(@v_id);<br><span class=\"hljs-keyword\">SELECT</span> @v_id;<br></code></pre></td></tr></table></figure>\n<h2 id=\"事务处理\"><a class=\"markdownIt-Anchor\" href=\"#事务处理\">#</a> 事务处理</h2>\n<h3 id=\"注意点\"><a class=\"markdownIt-Anchor\" href=\"#注意点\">#</a> 注意点</h3>\n<p><strong>MySQL 中 Innodb 支持事务，而 MyISAM 不支持事务</strong></p>\n<h3 id=\"事务的特性\"><a class=\"markdownIt-Anchor\" href=\"#事务的特性\">#</a> 事务的特性：</h3>\n<ul>\n<li>原子性（Atomicity）：事务开始后的所有操作，要么全部做完，要么全部不做。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。</li>\n<li>一致性（Consistency）：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如 A 向 B 转账，不可能 A 扣了钱，B 却没收到。</li>\n<li>隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如 A 正在从一张银行卡中取钱，在 A 取钱的过程结束前，B 不能向这张卡转账。</li>\n<li>持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。</li>\n</ul>\n<h3 id=\"并发问题\"><a class=\"markdownIt-Anchor\" href=\"#并发问题\">#</a> 并发问题</h3>\n<ul>\n<li>\n<p>脏读：事务 A 读取了事务 B 更新的数据，然后 B 回滚操作，那么 A 读取到的数据是脏数据</p>\n</li>\n<li>\n<p>不可重复读：事务 A 多次读取同一数据，事务 B 在事务 A 多次读取的过程中，对数据作了更新并提交，导致事务 A 多次读取同一数据时，结果 不一致。</p>\n</li>\n<li>\n<p>幻读：系统管理员 A 将数据库中所有学生的成绩从具体分数改为 ABCDE 等级，但是系统管理员 B 就在这个时候插入了一条具体分数的记录，当系统管理员 A 改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这时就叫幻读。</p>\n</li>\n</ul>\n<p><span class=\"rainbow\">注：不可重复读的和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表</span></p>\n<h3 id=\"事务隔离级别\"><a class=\"markdownIt-Anchor\" href=\"#事务隔离级别\">#</a> 事务隔离级别</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事务隔离级别</th>\n<th style=\"text-align:right\">脏读</th>\n<th style=\"text-align:center\">不可重复读</th>\n<th>幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">读未提交（read-uncommitted）</td>\n<td style=\"text-align:right\">是</td>\n<td style=\"text-align:center\">是</td>\n<td>是</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">不可重复读（read-committed）</td>\n<td style=\"text-align:right\">否</td>\n<td style=\"text-align:center\">是</td>\n<td>是</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">可重复读（repeatable-read）</td>\n<td style=\"text-align:right\">否</td>\n<td style=\"text-align:center\">否</td>\n<td>是</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">串行化（serializable）</td>\n<td style=\"text-align:right\">否</td>\n<td style=\"text-align:center\">否</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p><strong>设置隔离级别：</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">SESSION</span> <span class=\"hljs-keyword\">TRANSACTION</span> <span class=\"hljs-keyword\">ISOLATION</span> <span class=\"hljs-keyword\">LEVEL</span> <span class=\"hljs-keyword\">READ</span> UNCOMMITTED;<br></code></pre></td></tr></table></figure>\n<p><span class=\"rainbow\">只有增删改语句才支持事务</span></p>\n",
            "tags": [
                "MySQL",
                "数据库",
                "存储过程",
                "视图"
            ]
        },
        {
            "id": "https://eliauk.cc/post/89bbd8d4.html",
            "url": "https://eliauk.cc/post/89bbd8d4.html",
            "title": "MySQL 查询",
            "date_published": "2020-09-14T11:04:03.000Z",
            "content_html": "<h2 id=\"连接查询\"><a class=\"markdownIt-Anchor\" href=\"#连接查询\">#</a> 连接查询</h2>\n<p><strong>在数据库中 join 操作被称为连接，作用是能连接多个表的数据（通过连接条件），从多个表中获取数据合并在一起作为结果集返回给客户端。</strong></p>\n<h3 id=\"交叉连接\"><a class=\"markdownIt-Anchor\" href=\"#交叉连接\">#</a> 交叉连接</h3>\n<p><strong>交叉连接：将两张表的数据与另外一张表彼此交叉</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">cross</span> <span class=\"hljs-keyword\">join</span> 表<span class=\"hljs-number\">2</span><br>eg：<br><span class=\"hljs-keyword\">select</span> class.cname, student.sname <span class=\"hljs-keyword\">from</span> student <span class=\"hljs-keyword\">cross</span> <span class=\"hljs-keyword\">join</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">on</span> class.cid =<br>student.classid;<br><span class=\"hljs-comment\">--其中的on代表两个表的连接条件</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"内连接\"><a class=\"markdownIt-Anchor\" href=\"#内连接\">#</a> 内连接</h3>\n<p><img src=\"https://usocute.oss-cn-chengdu.aliyuncs.com/hexo/inner-join.png\" alt=\"inner-join\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">方式一：<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">1</span>,表<span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">where</span> 表<span class=\"hljs-number\">1.</span>列=表<span class=\"hljs-number\">2.</span>列<br>方式二：<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">inner</span> <span class=\"hljs-keyword\">join</span> 表<span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">on</span> 表<span class=\"hljs-number\">1.</span>列=表<span class=\"hljs-number\">2.</span>列<br></code></pre></td></tr></table></figure>\n<h3 id=\"外连接\"><a class=\"markdownIt-Anchor\" href=\"#外连接\">#</a> 外连接</h3>\n<h4 id=\"左连接\"><a class=\"markdownIt-Anchor\" href=\"#左连接\">#</a> 左连接</h4>\n<p>左连接基础语法是  <code>a left outer join b </code> ，其中的  <code>outer</code>  可以省略，与内连接相比就是在与内连接相<br>\n同条件下，在内连接的结果集中添加 <code>a</code>  表在 <code>b</code>  表中找不到匹配的记录，换句话说就是，结果集中会包含 <code>a</code>  表中的所有记录，如果 <code>b</code>  表中有匹配的记录就出现在结果集，否则使用  <code>NULL</code>  代替，也就是把 <code>a</code>  表看成根本，不可缺失记录。<br>\n<img src=\"https://usocute.oss-cn-chengdu.aliyuncs.com/hexo/left-join.png\" alt=\"left-join\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">left</span> <span class=\"hljs-keyword\">join</span> 表<span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">on</span> 表<span class=\"hljs-number\">1.</span>列=表<span class=\"hljs-number\">2.</span>列<br></code></pre></td></tr></table></figure>\n<h4 id=\"右连接\"><a class=\"markdownIt-Anchor\" href=\"#右连接\">#</a> 右连接</h4>\n<p>右外连接基础语法是  <code>a right outer join b </code> ，其中的  <code>outer</code>  可以省略，与内连接相比就是在与内连<br>\n接相同条件下，在内连接的结果集中添加 b 表在 a 表中找不到匹配的记录，换句话说就是，结果集中会包含 b 表中的所有记录，如果 a 表中有匹配的记录就出现在结果集，否则使用 NULL 代替，也就是把 b 表看成根本，不可缺失记录，作用与左外连接恰好相反。<br>\n<img src=\"https://usocute.oss-cn-chengdu.aliyuncs.com/hexo/right-join.png\" alt=\"right-join\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">right</span> <span class=\"hljs-keyword\">join</span> 表<span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">on</span> 表<span class=\"hljs-number\">1.</span>列=表<span class=\"hljs-number\">2.</span>列<br></code></pre></td></tr></table></figure>\n<h3 id=\"自连接\"><a class=\"markdownIt-Anchor\" href=\"#自连接\">#</a> 自连接</h3>\n<p>自连接就是表与它自身相关联，进行自连接时通过给表起不同的别名来区分一个表的两个实例。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> 表.字段<span class=\"hljs-number\">1</span>,表.字段<span class=\"hljs-number\">2</span>,表.字段<span class=\"hljs-number\">3</span> <br><span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">as</span> 别名,表<span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">as</span> 别名 <br><span class=\"hljs-keyword\">where</span> 别名.字段<span class=\"hljs-number\">2</span>=别名<span class=\"hljs-number\">2.</span>字段<span class=\"hljs-number\">3</span>；<br></code></pre></td></tr></table></figure>\n<h2 id=\"子查询\"><a class=\"markdownIt-Anchor\" href=\"#子查询\">#</a> 子查询</h2>\n<p>子查询指嵌套在查询内部，且必须始终出现在圆括号。子查询可以包含多个关键字或条件，如<br>\n <code>DISTINCT</code> 、 <code>GROUP BY</code> 、 <code>ORDER BY</code> 、 <code>LIMIT</code> 、 <code>函数</code> 等。<br>\n子查询的外层查询可以是： <code>SELECT</code> ， <code>INSERT</code> ， <code>UPDATE</code> ， <code>SET或DO</code> 。<br>\n子查询可以返回标量，一行，一列或子查询。</p>\n<h3 id=\"将子查询作为派生表\"><a class=\"markdownIt-Anchor\" href=\"#将子查询作为派生表\">#</a> 将子查询作为派生表</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">where</span> 字段<span class=\"hljs-number\">1</span> = （<span class=\"hljs-keyword\">select</span> 字段<span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">2</span>）;<br></code></pre></td></tr></table></figure>\n<h3 id=\"把子查询用在where子句中\"><a class=\"markdownIt-Anchor\" href=\"#把子查询用在where子句中\">#</a> 把子查询用在 where 子句中</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">eg：<br><span class=\"hljs-keyword\">select</span> ename,sal <span class=\"hljs-keyword\">from</span> emp <span class=\"hljs-keyword\">where</span> sal&gt;(<span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">avg</span>(sal) <span class=\"hljs-keyword\">form</span> emp);<br></code></pre></td></tr></table></figure>\n<h3 id=\"在from语句中使用子查询\"><a class=\"markdownIt-Anchor\" href=\"#在from语句中使用子查询\">#</a> 在 from 语句中使用子查询</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">eg：<br><span class=\"hljs-keyword\">select</span> t.deptno,t.avgsal,s.grade<br><span class=\"hljs-keyword\">from</span> (<span class=\"hljs-keyword\">select</span> deptno,<span class=\"hljs-keyword\">avg</span>(sal) <span class=\"hljs-keyword\">as</span> avgsal <span class=\"hljs-keyword\">from</span> emp <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> deptno) t<br><span class=\"hljs-keyword\">join</span> salgrade s<br><span class=\"hljs-keyword\">on</span> t.avgsal <span class=\"hljs-keyword\">between</span> s.losal <span class=\"hljs-keyword\">and</span> s.hisal;<br></code></pre></td></tr></table></figure>\n<h2 id=\"集合操作union\"><a class=\"markdownIt-Anchor\" href=\"#集合操作union\">#</a> 集合操作 (UNION)</h2>\n<p><strong>union  作用：合并查询结果集</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">Eg：<br><span class=\"hljs-keyword\">select</span> ename,job <span class=\"hljs-keyword\">from</span> emp <span class=\"hljs-keyword\">where</span> job=<span class=\"hljs-string\">&#x27;manager&#x27;</span><br><span class=\"hljs-keyword\">union</span><br><span class=\"hljs-keyword\">select</span> ename,job <span class=\"hljs-keyword\">from</span> emp <span class=\"hljs-keyword\">where</span> job=<span class=\"hljs-string\">&#x27;salesman&#x27;</span>;<br></code></pre></td></tr></table></figure>\n<p><strong>limit</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">limit 起始下标，长度<br>如果起始下标没有指定，默认从0开始，0表示表中第一条记录。<br>Eg：<br><span class=\"hljs-comment\">--按照工资降序排列取前5个</span><br><span class=\"hljs-keyword\">select</span> ename,sal <span class=\"hljs-keyword\">from</span> emp <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> sal <span class=\"hljs-keyword\">desc</span> <span class=\"hljs-keyword\">limit</span> <span class=\"hljs-number\">5</span>;<br></code></pre></td></tr></table></figure>\n<p><strong>通用的分页 SQL (只适用于 mysql 数据库管理系统)</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> t.* <span class=\"hljs-keyword\">from</span> t<br><span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> t.x <span class=\"hljs-keyword\">desc</span>/<span class=\"hljs-keyword\">asc</span><br><span class=\"hljs-keyword\">limit</span> (pageNo<span class=\"hljs-number\">-1</span>)*pageSize,pageSize;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "MySQL",
                "数据库",
                "查询"
            ]
        },
        {
            "id": "https://eliauk.cc/post/e82256d5.html",
            "url": "https://eliauk.cc/post/e82256d5.html",
            "title": "mysql 数据库基本操作",
            "date_published": "2020-09-10T10:24:02.000Z",
            "content_html": "<h2 id=\"数据库和表操作\"><a class=\"markdownIt-Anchor\" href=\"#数据库和表操作\">#</a> 数据库和表操作</h2>\n<h3 id=\"创建数据库\"><a class=\"markdownIt-Anchor\" href=\"#创建数据库\">#</a> 创建数据库</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> 数据库名称;<br></code></pre></td></tr></table></figure>\n<p><strong>注意事项：</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">1）information_schema是MySQL自带的数据库，存储MySQL服务器管理的信息；<br>2）mysql是MySQL的系统数据库；<br>3）test是用户学习和测试练习使用的数据库；<br>4）MySQL中的数据库名称不能超过64字符，不能由纯数字组成，不能包<br>含：“/”、“:”、“*”、“?”、“**”**”、“&lt;”等符号；<br>5）如果要创建的数据库名称已经存在，也会发生错误。（可以用”if exists 数据库名称 ”来判断是否存<br>在，以避免发生错误）。<br>如：drop database if exists student; -- 判断student数据库存在就删除<br>create database student; -- 重新创建student数据库<br>-- 创建数据库后，如果需要使用数据库，使用：”use 数据库名；”如：use student;<br></code></pre></td></tr></table></figure>\n<h3 id=\"删除数据库\"><a class=\"markdownIt-Anchor\" href=\"#删除数据库\">#</a> 删除数据库</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">database</span> 数据库名称；<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">Eg： <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">database</span> <span class=\"hljs-keyword\">user</span>; <span class=\"hljs-comment\">-- 删除了名叫“user”的数据库；</span><br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">database</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">exists</span> <span class=\"hljs-keyword\">user</span>; <span class=\"hljs-comment\">-- 也可以用if exists做判断，避免发生错误；</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"创建表\"><a class=\"markdownIt-Anchor\" href=\"#创建表\">#</a> 创建表</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> 表名<br>( 字<br>段名称<span class=\"hljs-number\">1</span> 数据类型 [ <span class=\"hljs-literal\">null</span> / <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span> ] [ <span class=\"hljs-keyword\">DEFAULT</span> 默认值 ] [ AUTO_INCREMENT ]<br>[ PRIMARY_KEY ] [ <span class=\"hljs-keyword\">COMMENT</span> ‘注释内容’ ] ,<br>......<br>字段名称N 数据类型 [ <span class=\"hljs-literal\">null</span> / <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span> ] [ <span class=\"hljs-keyword\">DEFAULT</span> 默认值 ] [ AUTO_INCREMENT ]<br>[ PRIMARY_KEY ] [ <span class=\"hljs-keyword\">COMMENT</span> ‘注释内容’ ]<br>)；<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">Eg:<br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">exists</span> teacher ; <span class=\"hljs-comment\">-- 首先判断是否存在teacher表，如果存在就删除</span><br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> teacher<br>(<br><span class=\"hljs-keyword\">id</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span> auto_increment primary <span class=\"hljs-keyword\">key</span> ,<br><span class=\"hljs-keyword\">name</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span><br>);<br><span class=\"hljs-comment\">-- 创建了teacher表，里面有int、 name两个字段, 其中id是主键，非空，自增</span><br><span class=\"hljs-comment\">-- 创建数据库后，如果需要使用数据库，使用：”use 数据库名；”如：use teacher;</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"删除表\"><a class=\"markdownIt-Anchor\" href=\"#删除表\">#</a> 删除表</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> 表名;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">Eg: <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> teacher;<br>或者删除多个表格： <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> teacher, student;<br></code></pre></td></tr></table></figure>\n<h3 id=\"复制表\"><a class=\"markdownIt-Anchor\" href=\"#复制表\">#</a> 复制表</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">完全复制的格式：<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> 表<span class=\"hljs-number\">02</span> <span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">01</span>;<br>Eg: <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> teacher02 <span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> teacher;<br><span class=\"hljs-comment\">-- 复制一张和teacher表完全一样的teacher02表；</span><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">复制指定列的格式：<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> 表<span class=\"hljs-number\">02</span> <span class=\"hljs-keyword\">select</span> 字段a，字段b，...... <span class=\"hljs-keyword\">from</span> 表<span class=\"hljs-number\">01</span>;<br>Eg: <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> teacher02 <span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">id</span>, <span class=\"hljs-keyword\">name</span> <span class=\"hljs-keyword\">from</span> teacher;<br><span class=\"hljs-comment\">-- 复制一张teacher02表，里面包含teacher表里的id，name；</span><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">完全复制表结构（包括键key），但是不复制里面的内容，格式是：<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> 表<span class=\"hljs-number\">02</span> <span class=\"hljs-keyword\">like</span> 表<span class=\"hljs-number\">01</span>;<br>Eg: <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> teacher02 <span class=\"hljs-keyword\">like</span> teacher;<br><span class=\"hljs-comment\">-- 复制一张teacher02表，其结构和teacher表相同，但没有teacher里的内容；</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"修改表\"><a class=\"markdownIt-Anchor\" href=\"#修改表\">#</a> 修改表</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">1）增加字段：add<br>Eg: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> teacher <span class=\"hljs-keyword\">add</span> age <span class=\"hljs-built_in\">int</span> <span class=\"hljs-literal\">null</span>; <span class=\"hljs-comment\">-- 添加age列，int类型，可以为null；</span><br>2）删除字段：<span class=\"hljs-keyword\">drop</span><br>Eg: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> teacher <span class=\"hljs-keyword\">drop</span> age; <span class=\"hljs-comment\">-- 删除age列；</span><br>3）修改字段：<span class=\"hljs-keyword\">change</span><br>Eg: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> teacher <span class=\"hljs-keyword\">change</span> <span class=\"hljs-keyword\">name</span> teacher_name <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">30</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span>;<br><span class=\"hljs-comment\">-- 修改name列为teacher_name，varchar类型最大30个字符，不能为null；</span><br>4）增加主键：add primary key()<br>Eg: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> teacher <span class=\"hljs-keyword\">add</span> primary <span class=\"hljs-keyword\">key</span>(<span class=\"hljs-keyword\">id</span>); <span class=\"hljs-comment\">-- 设置id为主键（id是已有字段）；</span><br>5）修改表名：<span class=\"hljs-keyword\">rename</span> <span class=\"hljs-keyword\">to</span><br>Eg: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> teacher <span class=\"hljs-keyword\">rename</span> <span class=\"hljs-keyword\">to</span> <span class=\"hljs-keyword\">user</span>; <span class=\"hljs-comment\">-- 把teacher表改名为user；</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"数据完整性\"><a class=\"markdownIt-Anchor\" href=\"#数据完整性\">#</a> 数据完整性</h2>\n<p><code>数据完整性的概念：确保数据正确性和一致性的机制。</code></p>\n<ol>\n<li>域完整性：即列的完整性。如：年龄不能超过 150 岁，id 不能为 null。</li>\n<li>实体完整性：即行的完整性。如：实体 “张三” 具有区别于实体 “李四” 的特征。</li>\n<li>参照完整性：主关系表（被参照表）和从关系表（参照表）中数据的一致性。</li>\n<li>用户定义完整性：用户根据具体需求来定义约束条件。</li>\n</ol>\n<h2 id=\"使用sql语句为表创建和删除约束\"><a class=\"markdownIt-Anchor\" href=\"#使用sql语句为表创建和删除约束\">#</a> 使用 SQL 语句为表创建和删除约束</h2>\n<p>如果要修改已创建的约束，最简单实用的方式就是先删除已有的约束，再建立同名的约束。</p>\n<h3 id=\"添加约束\"><a class=\"markdownIt-Anchor\" href=\"#添加约束\">#</a> 添加约束：</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">格式：<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">add</span> [<span class=\"hljs-keyword\">constraint</span>] [约束名称] 约束类型（约束内容[可多个字段]）;<br></code></pre></td></tr></table></figure>\n<h4 id=\"主键约束\"><a class=\"markdownIt-Anchor\" href=\"#主键约束\">#</a> 主键约束</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">主键约束: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> PK_user_id primary <span class=\"hljs-keyword\">key</span>(<span class=\"hljs-keyword\">id</span>);<br><span class=\"hljs-comment\">-- 把user表的id添加主键约束，约束名称是PK_user_id。（PK是主键的简写）</span><br>设置联合主键的方式：<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">add</span> primary <span class=\"hljs-keyword\">key</span>(<span class=\"hljs-keyword\">id</span>，<span class=\"hljs-keyword\">name</span>);<br><span class=\"hljs-comment\">-- 设置了联合主键id和name； 补充： 在创建表的时候也可以直接设置主键约束。</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"唯一约束\"><a class=\"markdownIt-Anchor\" href=\"#唯一约束\">#</a> 唯一约束</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">唯一约束：<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">add</span> [<span class=\"hljs-keyword\">constraint</span>] <span class=\"hljs-keyword\">unique</span>(<span class=\"hljs-keyword\">id</span>);<br></code></pre></td></tr></table></figure>\n<h4 id=\"默认约束\"><a class=\"markdownIt-Anchor\" href=\"#默认约束\">#</a> 默认约束</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">默认约束：<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">column</span>列名 <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">DEFAULT</span> 默认值;<br><span class=\"hljs-comment\">-- 默认值可以为常量或者为空（null）；</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"检查约束\"><a class=\"markdownIt-Anchor\" href=\"#检查约束\">#</a> 检查约束</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">检查约束：（与SQL Server中的检查约束有语法区别）可以使用**枚举**。<br>Eg：<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> student ( ...... sex **enum**(‘男’, ‘女’) <span class=\"hljs-keyword\">not</span><br><span class=\"hljs-literal\">null</span> <span class=\"hljs-comment\">-- 学员性别 );</span><br><span class=\"hljs-comment\">-- 默认值可以为常量或者为空（null）；</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"外键约束\"><a class=\"markdownIt-Anchor\" href=\"#外键约束\">#</a> 外键约束</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">外键约束： 格式：<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> 约束名称 约束类型;<br>(外键约束简称为“FK”)<br>Eg：<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> student <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> FK_student_class_classid <span class=\"hljs-keyword\">foreign</span><br><span class=\"hljs-keyword\">key</span> (classid) <span class=\"hljs-keyword\">references</span> <span class=\"hljs-keyword\">class</span>(classid);<br><span class=\"hljs-comment\">-- 为student表所在的班级字段classid设置了外键约束。</span><br>创建时设置外键：<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> student ( ...... classid <span class=\"hljs-built_in\">int</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">null</span>, <span class=\"hljs-keyword\">foreign</span><br><span class=\"hljs-keyword\">key</span>(classid) <span class=\"hljs-keyword\">references</span> <span class=\"hljs-keyword\">class</span>(classid) <span class=\"hljs-comment\">-- 设置名称为classid的外键，指</span><br>向<span class=\"hljs-keyword\">class</span>表的classid； );<br><br></code></pre></td></tr></table></figure>\n<h4 id=\"设置级联操作\"><a class=\"markdownIt-Anchor\" href=\"#设置级联操作\">#</a> 设置级联操作</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">设置级联操作：<br>restrict和no action表示在子表有关联记录的情况下父表不能更新；<br>cascade 表示父表在更新或者删除时，同时更新或删除子表对应的记录；<br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-literal\">null</span> 表示父表在更新或者删除时，子表对应的字段设置为<span class=\"hljs-literal\">null</span>；<br>Eg：<br>(<span class=\"hljs-number\">1</span>).alter <span class=\"hljs-keyword\">table</span> student <span class=\"hljs-keyword\">add</span> <span class=\"hljs-keyword\">constraint</span> FK_student_class_classid <span class=\"hljs-keyword\">foreign</span><br><span class=\"hljs-keyword\">key</span> (classid) <span class=\"hljs-keyword\">references</span> <span class=\"hljs-keyword\">class</span>(classid) <span class=\"hljs-keyword\">on</span> <span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">set</span> <span class=\"hljs-literal\">null</span>;<br><span class=\"hljs-comment\">-- 如：删除class表中classid=1对应的字段时，student表中的classid字段的值设置为null</span><br>(2).alter table student add constraint FK_student_class_classid foreign<br>key (classid) references class(classid) on <span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">cascade</span>;<br><span class=\"hljs-comment\">-- 如：删除class表中classid=1对应的字段时，同时删除student表中所有classid=1的该行数据。</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"删除约束\"><a class=\"markdownIt-Anchor\" href=\"#删除约束\">#</a> 删除约束</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">语法：<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">drop</span> [<span class=\"hljs-keyword\">constraint</span>] 约束名称;<br><span class=\"hljs-comment\">-- constraint关键字可省略 -- 如果将表删除了，那么相关的约束也就删除了。</span><br>Eg01: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> student <span class=\"hljs-keyword\">drop</span> primary <span class=\"hljs-keyword\">key</span>;<br><span class=\"hljs-comment\">-- 存在一个主键约束，可用此操作；</span><br>Eg02: <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> student <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">foreign</span> <span class=\"hljs-keyword\">key</span> FK_class_student_id；<br><span class=\"hljs-comment\">-- 删除外键</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"数据操作\"><a class=\"markdownIt-Anchor\" href=\"#数据操作\">#</a> 数据操作</h2>\n<h3 id=\"插入数据\"><a class=\"markdownIt-Anchor\" href=\"#插入数据\">#</a> 插入数据：</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">1）”insert...values”<br>语法：<span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> 表名 <span class=\"hljs-keyword\">values</span>(值);<br><span class=\"hljs-comment\">--（最常用）</span><br><span class=\"hljs-comment\">-- 插入值的顺序必须与表中字段的顺序完全一致。</span><br>Eg01: <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> student <span class=\"hljs-keyword\">values</span> (<span class=\"hljs-number\">1</span>, ‘zhangsan’ );<br><span class=\"hljs-comment\">--插入一行数据</span><br>Eg02: <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> student <span class=\"hljs-keyword\">values</span> (<span class=\"hljs-number\">2</span>,‘jack’)，(<span class=\"hljs-number\">3</span>, ‘rose’);<br><span class=\"hljs-comment\">--插入多行数据，用逗号隔开；</span><br>补充：当插入的记录会引发主键或唯一约束冲突时，可以用**on duplicate key update 条件<br>**。<br>Eg: <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> student <span class=\"hljs-keyword\">values</span> (<span class=\"hljs-number\">1</span>, ‘mike’ ) **<span class=\"hljs-keyword\">on</span> <span class=\"hljs-keyword\">duplicate</span> <span class=\"hljs-keyword\">key</span> <span class=\"hljs-keyword\">update</span> <span class=\"hljs-keyword\">id</span> =<br><span class=\"hljs-number\">10</span>**;<br><span class=\"hljs-comment\">-- 由于id是主键，id=1与上面zhangsan行冲突，所以自动把zhangsan的id设置为10，然后再</span><br>把id=1的mike数据插入进去；<br><br>2）”insert...set”<br><span class=\"hljs-comment\">-- 按照每一列对应的值插入数据</span><br>语法：<span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> 表名 <span class=\"hljs-keyword\">set</span> 列名<span class=\"hljs-number\">1</span>=值<span class=\"hljs-number\">1</span>, 列名<span class=\"hljs-number\">2</span>=值<span class=\"hljs-number\">2</span>,......;<br>Eg01: <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> student <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">id</span> =<span class=\"hljs-number\">5</span>, <span class=\"hljs-keyword\">name</span>=’abc’;<br><span class=\"hljs-comment\">--插入的数据是：id为5，姓名’abc’ 3）”insert...select”</span><br><span class=\"hljs-comment\">-- 把从其他表查询到的数据插入到该表中，类似于like属性 Eg01: insert into user</span><br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> student;<br><span class=\"hljs-comment\">--把从student中查询到的数据插入到user中；</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"更新数据\"><a class=\"markdownIt-Anchor\" href=\"#更新数据\">#</a> 更新数据</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">格式：<br><span class=\"hljs-keyword\">update</span> 表名 <span class=\"hljs-keyword\">set</span> 列名<span class=\"hljs-number\">1</span>=值<span class=\"hljs-number\">1</span> [,列名<span class=\"hljs-number\">2</span>=值<span class=\"hljs-number\">2</span>,......] [where...] [<span class=\"hljs-keyword\">order</span> by...]<br>[<span class=\"hljs-keyword\">limit</span> 行数]<br>eg： <span class=\"hljs-keyword\">update</span> student <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">name</span> = <span class=\"hljs-string\">&#x27;wangwu&#x27;</span> <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">id</span> = <span class=\"hljs-number\">003</span>;<br><span class=\"hljs-comment\">--把id=3的列的name改为wangwu；</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"删除数据\"><a class=\"markdownIt-Anchor\" href=\"#删除数据\">#</a> 删除数据</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">格式：<br><span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">from</span> 表名 <span class=\"hljs-keyword\">where</span> 列名=值；<br>eg：<span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">from</span> student <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">id</span>=<span class=\"hljs-number\">3</span>；<br><span class=\"hljs-comment\">--删除id＝３的列的数据。</span><br></code></pre></td></tr></table></figure>",
            "tags": [
                "MySQL",
                "增删改查"
            ]
        },
        {
            "id": "https://eliauk.cc/post/afb0e9ab.html",
            "url": "https://eliauk.cc/post/afb0e9ab.html",
            "title": "MySQL 存储引擎和数据类型",
            "date_published": "2020-09-03T04:07:24.000Z",
            "content_html": "<h2 id=\"一-mysql的存储引擎\"><a class=\"markdownIt-Anchor\" href=\"#一-mysql的存储引擎\">#</a> 一、MySQL 的存储引擎</h2>\n<ul>\n<li>在 MySQL 这种关系型数据库来说，数据是以表的方式来存储的，因此，简单点来说，存储引擎就是存储和操作此表的类型。</li>\n</ul>\n<h3 id=\"存储引擎的种类\"><a class=\"markdownIt-Anchor\" href=\"#存储引擎的种类\">#</a> 存储引擎的种类</h3>\n<ul>\n<li><code>InnoDB</code>  存储引擎  <code>事务型</code> 数据库引擎，提供了 <code>事务</code> 、 <code>回滚</code> 、 <code>崩溃修复</code> 能力、 <code>多版本并发控制的事务安全</code> 。在 <code>MySQL 5.5版本开始</code> 成为默认存储引擎。</li>\n<li><code>MyISAM</code>  存储引擎 MyISAM 存储引擎是 MySQL 中常见的存储引擎，是 <code>MySQL 5.0之前</code> 版本的 <code>默认</code> 存储引擎。 <code>不支持事务</code> 。</li>\n<li><code>MEMORY</code>  存储引擎 MEMORY 存储引擎是 MySQL 中的一个特殊的存储引擎。所有数据放在 <code>内存</code> 中，拥有极高的 <code>插入</code> 、 <code>更新</code> 、 <code>查询效率</code> 。会占用与数据量成正比的内存空间。MySQL <code>重启后数据会丢失</code> 。</li>\n</ul>\n<h2 id=\"二-mysql-数据类型\"><a class=\"markdownIt-Anchor\" href=\"#二-mysql-数据类型\">#</a> 二、MySQL 数据类型</h2>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>数据类型</th>\n<th>范例格式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>整型</td>\n<td>int</td>\n<td>100</td>\n</tr>\n<tr>\n<td>浮点型</td>\n<td>double</td>\n<td>9.9</td>\n</tr>\n<tr>\n<td>字符串型</td>\n<td>varchar (20)</td>\n<td>‘云南省昆明市’</td>\n</tr>\n<tr>\n<td>日期类型</td>\n<td>date</td>\n<td>‘2019-09-09’</td>\n</tr>\n<tr>\n<td>datetime (timestamp)</td>\n<td></td>\n<td>‘2019-09-09 10:20:30’</td>\n</tr>\n</tbody>\n</table>\n<p><strong>详细的数据类型如下：</strong></p>\n<ul>\n<li>MySQL 支持所有标准 SQL 数值数据类型。</li>\n</ul>\n<p><img src=\"https://usocute.oss-cn-chengdu.aliyuncs.com/gitbook/mysql-data-abc.png\" alt=\"mysql-data-abc\"></p>\n<p><img src=\"https://usocute.oss-cn-chengdu.aliyuncs.com/gitbook/mysql-data-abc2.png\" alt=\"mysql-data-abc2\"></p>\n<h2 id=\"三-mysql-数据类型属性\"><a class=\"markdownIt-Anchor\" href=\"#三-mysql-数据类型属性\">#</a> 三、MySQL 数据类型属性</h2>\n<table>\n<thead>\n<tr>\n<th>属性名称</th>\n<th>作用</th>\n<th>使用的数据类型范</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PRIMARY KEY</td>\n<td>主键，确保该行的唯一性。（常与 AUTO_INCREMENT 合用）</td>\n<td>所有数据类型</td>\n</tr>\n<tr>\n<td>AUTO_INCREMENT</td>\n<td>为新插入的行赋上唯一的整数标识符。</td>\n<td>整数（如 ID）</td>\n</tr>\n<tr>\n<td>UNIQUE</td>\n<td>确保该列所有值都不同。(NULL 值可以重复)</td>\n<td>所有数据类型</td>\n</tr>\n<tr>\n<td>NOT NULL</td>\n<td>不允许该列为 NULL。 —&gt;null 表示该列不存在值</td>\n<td>所有数据类型</td>\n</tr>\n<tr>\n<td>NULL</td>\n<td>允许该列为 NULL。</td>\n<td>所有数据类型</td>\n</tr>\n<tr>\n<td>ZEROFILL</td>\n<td>用 0 填充剩余字段空间，如 INT 类型的表示为： 0000000008</td>\n<td>所有数据类型</td>\n</tr>\n<tr>\n<td>BINARY</td>\n<td>对字符串以区分大小写的方式排序。（按照 ASCII 表）</td>\n<td>CHAR, VARCHAR</td>\n</tr>\n<tr>\n<td>DEFAULT</td>\n<td>在没有任何值的情况下，赋予某个常量。</td>\n<td>BLOB 和 TEXT 列 * 不 可用</td>\n</tr>\n<tr>\n<td>INDEX</td>\n<td>为该列创建一个索引。（有序的键值组）</td>\n<td>所有数据类型</td>\n</tr>\n<tr>\n<td>NATIONAL</td>\n<td>确保该列使用默认字符集。</td>\n<td>CHAR, VARCHAR</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "MySQL",
                "存储引擎",
                "数据类型"
            ]
        }
    ]
}